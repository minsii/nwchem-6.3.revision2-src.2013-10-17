c
c     Header file for intial FORTRAN interface to RTDB
c     (see the C header file rtdb.h for more detail)
c
c     All functions return .TRUE. on success, .FALSE. on failure
c
c     All functions are also mirrored by routines rtdb_* -> rtdb_par_*
c     in which process 0 performs the operation and all other processes
c     are broadcast the result of a read and discard writes.
c
c     rtdb_max_key  ... an integer parameter that defines the maximum
c                       length of a character string key
c
c     rtdb_max_file ... an integer parameter that defines the maximum
c                       length of a file name
c
c
c     logical function srtdb_parallel(mode)
c     logical mode              [input]
c
c
c     logical function srtdb_open(filename, mode, handle)
c     character *(*) filename   [input]
c     character *(*) mode       [input]
c     integer handle            [output]
c
c     logical function srtdb_clone(handle, suffix)
c     integer handle            [input]
c     character*(*) suffix        [input]
c
c     logical function srtdb_close(handle, mode)
c     integer handle            [input]
c     character*(*) mode        [input]
c
c     logical function srtdb_put(handle, name, ma_type, nelem, array)
c     integer handle            [input]
c     character *(*) name       [input]
c     integer ma_type           [input]
c     integer nelem             [input]
c     <ma_type>array(nelem)     [input]
c
c     logical function srtdb_get_info(handle, name, ma_type, nelem, date)
c     integer handle            [input]
c     character *(*) name       [input]
c     integer ma_type           [output]
c     integer nelem             [output]
c     character*26 date         [output]
c
c     logical function srtdb_get(handle, name, ma_type, nelem, array)
c     integer handle            [input]
c     character *(*) name       [input]
c     integer ma_type           [input]
c     integer nelem             [input]
c     <ma_type>array(nelem)     [output]
c
c     logical function srtdb_ma_get(handle, name, ma_type, nelem, ma_handle)
c     integer handle            [input]
c     character *(*) name       [input]
c     integer ma_type           [output]
c     integer nelem             [output]
c     integer ma_handle         [output]
c
c     logical function srtdb_cput(handle, name, nelem, buf)
c     integer handle            [input]
c     character *(*) name       [input]
c     character *(*) buf        [input]
c
c     logical function srtdb_cget(handle, name, nelem, buf)
c     integer handle            [input]
c     character *(*) name       [input]
c     character *(*) buf        [output]
c
c     logical function srtdb_print(handle, print_values)
c     integer handle            [input]
c     logical print_values      [input]
c
c     logical function srtdb_first(handle, name)
c     integer handle            [input]
c     character *(*) name       [output]
c
c     logical function srtdb_next(handle, name)
c     integer handle            [input]
c     character *(*) name       [output]
c
c     logical function srtdb_delete(handle, name)
c     integer handle            [input]
c     character *(*) name       [input]
c
      logical srtdb_open, srtdb_close, 
     $     srtdb_put, srtdb_get, 
     $     srtdb_cput, srtdb_cget, srtdb_print, srtdb_get_info, 
     $     srtdb_first, srtdb_next, srtdb_delete
C$Id: srtdb.fh 19707 2010-10-29 17:59:36Z d3y133 $
      external srtdb_open, srtdb_close, srtdb_put, 
     $     srtdb_get,
     $     srtdb_cput, srtdb_cget, srtdb_print, srtdb_get_info, 
     $     srtdb_first, srtdb_next, srtdb_delete
c
c     Check these values against srtdb_f2c.c
c
      integer srtdb_max_key, srtdb_max_file
      parameter (srtdb_max_key=255, srtdb_max_file=255)

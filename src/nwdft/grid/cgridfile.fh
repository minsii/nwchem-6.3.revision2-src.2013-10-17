*
* $Id: cgridfile.fh 21747 2012-01-11 18:58:41Z edo $
*
c
c     Internal common for grid routines
c     
c     want to dynamically allocate most of this soon
c     
      double precision values   ! Buffer for grid_pt values
      double precision cur_rec_rad       ! Max Radius of current record
      double precision buf      ! Compressed buffer for IO only
      integer fd                ! CHEMIO fd
      integer fdg                ! CHEMIO fdg
      double precision buf2     ! Compressed buffer for IO only - ASYNC
      integer n_in_rec          ! No. of entries in buffer
      integer n_in_rec_tot      ! Total no. of entries 
      integer next_value        ! Next value to be read/inserted
      integer n_rec_in_file     ! No. of records in file
      integer cur_rec           ! Current record no. (1, 2, ...)
      integer cur_rec_ctr       ! Atom center of current record
      integer buffer_size       ! Size of buffer ... MUST BE EVEN
      integer n_per_rec         ! No. of grid_pts a buffer can hold
      integer rec_len_in_dbl    ! Size of total record in doubles
      integer eaftype ! hack
      character*256 actualname  ! Name of file
      character*256 grinfo  ! Name of info file
      logical otrace            ! True if debugging enabled
      logical oinfo             ! True if to print brief info
      integer l_cache, k_cache  ! MA space for grid_pt cache
      integer max_file_rec      ! Max no. of records to put in file
      integer max_cache_rec     ! Max no. of records to put in cache
      logical file_opened       ! True if a physical file is open
      logical filedump_opened  ! True if a physical file is open
#ifdef GCC4
      integer*4 gr_unit !
#else
      integer gr_unit !
#endif
      parameter(gr_unit=85)
c
      logical oasyncio          ! If true use asynchronous IO
      logical oiopending        ! If true asynchronous IO is pending
      integer aioreq            ! EAF handle to AIO request
c
c
      integer n_in_buf          ! n_in_rec info for this buf
      integer pad               ! Padding for 32 bit machines
c
      integer n_in_buf2         ! n_in_rec info for this buf    - ASYNC
      integer pad2              ! Padding for 32 bit machines   - ASYNC
      integer nsubb ! number of sub-buffer (with a given rad)
      integer ntot_sub ! cumulative nsubb
      integer cur_cub ! current cube
      logical grid_written
      logical largenode ! set by user
      logical oreopen ! true in only grad calculations (see dftg_getxc)
c
c
#ifdef CRAY_T3D
c     save on memory since have only physical memory
      parameter (buffer_size = 2048)
#elif defined (WIN32) 
      parameter (buffer_size = 1024)
#else
      parameter (buffer_size = 3072)
#endif
c      parameter (buffer_size = 100)
      integer mxsub
      parameter(mxsub=30)
c
      common/cgridbuf/
     $     buf(4,buffer_size),
     $     n_in_buf, pad
c
      common/cgridbuf2/
     $     buf2(4,buffer_size),
     $     n_in_buf2, pad2
c
      common/cgridfile/
     $     values(4,buffer_size),
     $     n_in_rec
c
      common/cgridinfo/
c     double
     $     fd,fdg,
     $     cur_rec_rad,
c     integer
     $     n_rec_in_file,
     $     n_per_rec,
     $     cur_rec,
     $     cur_rec_ctr,
     $     rec_len_in_dbl,
     $     next_value,
     $     l_cache, k_cache,
     $     max_file_rec, max_cache_rec, cur_cub,nsubb,ntot_sub,
     $     n_in_rec_tot,  eaftype,
c     logicals
     .     grid_written,
     $     otrace,
     $     oinfo,
     $     file_opened,
     $     filedump_opened,
     $     oasyncio,
     $     oiopending,
     $     aioreq,
     $     oreopen,
     $     largenode
c     doubles
c     .     radsub
c
      common/ccgridinfo/
     $     actualname,grinfo
c


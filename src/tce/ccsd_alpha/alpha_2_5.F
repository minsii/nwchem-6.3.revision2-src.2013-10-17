      SUBROUTINE alpha_2_5(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offset)
C     $Id: alpha_2_5.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( )_vtrbtray + = 1 * Sum ( p11 p13 h9 h10 ) * y ( h9 h10 p11 p13 )_y * i1 ( p11 p13 h9 h10 )_vtrbtra
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER h10b
      INTEGER p11b
      INTEGER p13b
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER p11b_1
      INTEGER p13b_1
      INTEGER p11b_2
      INTEGER p13b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperh(2)
      INTEGER isuperh
      INTEGER nsubp(2)
      INTEGER isubp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTASK
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      IF (next.eq.count) THEN
      IF (0 .eq. ieor(irrep_v,ieor(irrep_trb,ieor(irrep_tra,irrep_y)))) 
     &THEN
      dimc = 1
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('alpha_2_5',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO p11b = noab+1,noab+nvab
      DO p13b = p11b,noab+nvab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+
     &p11b-1)+int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+p11b-1),int_mb(k_sym+p13b-1)))) .eq. irrep_y) THEN
      CALL TCE_RESTRICTED_4(h9b,h10b,p11b,p13b,h9b_1,h10b_1,p11b_1,p13b_
     &1)
      CALL TCE_RESTRICTED_4(p11b,p13b,h9b,h10b,p11b_2,p13b_2,h9b_2,h10b_
     &2)
      dim_common = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_
     &mb(k_range+p11b-1) * int_mb(k_range+p13b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('alpha_2_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &alpha_2_5',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p13b_
     &1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (h10b_1 - 1 + no
     &ab * (h9b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p13b
     &-1),4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('alpha_2_5',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('alpha_2_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &alpha_2_5',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h10b_
     &2 - 1 + noab * (h9b_2 - 1 + noab * (p13b_2 - noab - 1 + nvab * (p1
     &1b_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b
     &-1),2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('alpha_2_5',6,MA_ERR)
      nsuperh(1) = 1
      nsuperh(2) = 1
      isuperh = 1
      IF (h9b .eq. h10b) THEN
      nsuperh(isuperh) = nsuperh(isuperh) + 1
      ELSE
      isuperh = isuperh + 1
      END IF
      nsubp(1) = 1
      nsubp(2) = 1
      isubp = 1
      IF (p11b .eq. p13b) THEN
      nsubp(isubp) = nsubp(isubp) + 1
      ELSE
      isubp = isubp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperh(1))/FACTORIAL(nsuperh(2))/FACTORIAL(nsubp(1))/FACTORIAL(ns
     &ubp(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('alpha_2_5',7,MA_ERR
     &)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('alpha_2_5',8,MA_ERR
     &)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &alpha_2_5',9,MA_ERR)
      CALL TCE_SORT_0(dbl_mb(k_c_sort),dbl_mb(k_c),1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),0)
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('alpha_2_5',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('alpha_2_5',11,MA_ER
     &R)
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

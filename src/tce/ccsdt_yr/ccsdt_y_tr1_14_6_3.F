      SUBROUTINE ccsdt_y_tr1_14_6_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     $Id: ccsdt_y_tr1_14_6_3.F 19701 2010-10-29 17:16:57Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h2 p12 h11 p4 )_vtr + = -2/3 * Sum ( h10 p8 ) * tr ( p8 p12 h10 h11 )_tr * i3 ( h2 h10 p4 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER p12b
      INTEGER h11b
      INTEGER p4b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER h10b
      INTEGER p12b_1
      INTEGER p8b_1
      INTEGER h11b_1
      INTEGER h10b_1
      INTEGER h2b_2
      INTEGER h10b_2
      INTEGER p4b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO p12b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO p4b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p12b-
     &1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-1).ne.8)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+p12b-1) .eq. int_mb(k_spin+
     &h11b-1)+int_mb(k_spin+p4b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p12b-1),ieor(int_mb
     &(k_sym+h11b-1),int_mb(k_sym+p4b-1)))) .eq. ieor(irrep_v,irrep_tr))
     & THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+p12b-1) * int_mb(k_r
     &ange+h11b-1) * int_mb(k_range+p4b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_y_tr1_14_6_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_spin+p12b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+
     &h11b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p12b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb
     &(k_sym+h11b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_tr) THEN
      CALL TCE_RESTRICTED_4(p12b,p8b,h11b,h10b,p12b_1,p8b_1,h11b_1,h10b_
     &1)
      CALL TCE_RESTRICTED_4(h2b,h10b,p4b,p8b,h2b_2,h10b_2,p4b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p12b-1) * int_mb(k_range+h11b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+p4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_y_tr1_14_6_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_y_tr1_14_6_3',2,MA_ERR)
      IF ((p8b .le. p12b) .and. (h10b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (p12b_1 - noab - 1 + nvab * (p
     &8b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b
     &-1),4,2,3,1,1.0d0)
      END IF
      IF ((p8b .le. p12b) .and. (h11b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (p12b_1 - noab - 1 + nvab * (p
     &8b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+h11b-1),int_mb(k_range+h10b
     &-1),3,2,4,1,-1.0d0)
      END IF
      IF ((p12b .lt. p8b) .and. (h10b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p1
     &2b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b
     &-1),4,1,3,2,-1.0d0)
      END IF
      IF ((p12b .lt. p8b) .and. (h11b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p1
     &2b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h10b
     &-1),3,1,4,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_y_tr1_14_6_3',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_y_tr1_14_6_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_y_tr1_14_6_3',5,MA_ERR)
      IF ((h10b .lt. h2b) .and. (p8b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p4b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab 
     &* (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_mb(k_range+p4b-1
     &),4,2,1,3,1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (p4b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p4b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab 
     &* (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+p4b-1),int_mb(k_range+p8b-1
     &),3,2,1,4,-1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (p8b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p4b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab
     & * (h2b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p8b-1),int_mb(k_range+p4b-1
     &),4,1,2,3,-1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (p4b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p4b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab
     & * (h2b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p4b-1),int_mb(k_range+p8b-1
     &),3,1,2,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_y_tr1_14_6_3',6,MA
     &_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_y_tr1_14_6_3'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_y_tr1_14_6_3'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_y_tr1_14_6_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h11b-1),int_mb(k_range+p12b-
     &1),2,4,3,1,-2.0d0/3.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p4b -
     & noab - 1 + nvab * (h11b - 1 + noab * (p12b - noab - 1 + nvab * (h
     &2b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_y_tr1_14_6_3',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_y_tr1_14_6_3'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

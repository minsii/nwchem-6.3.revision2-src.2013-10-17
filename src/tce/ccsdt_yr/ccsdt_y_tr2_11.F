      SUBROUTINE ccsdt_y_tr2_11(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_of
     &fset)
C     $Id: ccsdt_y_tr2_11.F 19701 2010-10-29 17:16:57Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h3 h4 p1 p2 )_vtry + = -1/2 * P( 2 ) * Sum ( p11 h13 h14 ) * y ( h3 h13 h14 p1 p2 p11 )_y * i1 ( h4 p11 h13 h14 )_vtr
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h3b
      INTEGER h4b
      INTEGER p1b
      INTEGER p2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h13b
      INTEGER h14b
      INTEGER p11b
      INTEGER h3b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER p11b_1
      INTEGER h4b_2
      INTEGER p11b_2
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperh(2)
      INTEGER isuperh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h3b = 1,noab
      DO h4b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1
     &)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1) .eq. int_mb(k_spin+p
     &1b-1)+int_mb(k_spin+p2b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h4b-1),ieor(int_mb(
     &k_sym+p1b-1),int_mb(k_sym+p2b-1)))) .eq. ieor(irrep_v,ieor(irrep_t
     &r,irrep_y))) THEN
      dimc = int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1) * int_mb(k_ra
     &nge+p1b-1) * int_mb(k_range+p2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_y_tr2_11',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-
     &1) .eq. int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1)+int_mb(k_spin+p1
     &1b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h14b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),i
     &nt_mb(k_sym+p11b-1)))))) .eq. irrep_y) THEN
      CALL TCE_RESTRICTED_6(h3b,h13b,h14b,p1b,p2b,p11b,h3b_1,h13b_1,h14b
     &_1,p1b_1,p2b_1,p11b_1)
      CALL TCE_RESTRICTED_4(h4b,p11b,h13b,h14b,h4b_2,p11b_2,h13b_2,h14b_
     &2)
      dim_common = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int
     &_mb(k_range+p11b-1)
      dima_sort = int_mb(k_range+h3b-1) * int_mb(k_range+p1b-1) * int_mb
     &(k_range+p2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_y_tr2_11',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_y_tr2_11',2,MA_ERR)
      IF ((h14b .lt. h3b) .and. (p11b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p2b_1
     & - noab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p11b_1 - noab - 1
     & + nvab * (h3b_1 - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h3b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),6,5,3,4,2,1,1.0d0)
      END IF
      IF ((h14b .lt. h3b) .and. (p1b .le. p11b) .and. (p11b .lt. p2b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p2b_1
     & - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p1b_1 - noab - 1
     & + nvab * (h3b_1 - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h3b-1),int_mb(k_range+p1b-
     &1),int_mb(k_range+p11b-1),int_mb(k_range+p2b-1),6,4,3,5,2,1,-1.0d0
     &)
      END IF
      IF ((h14b .lt. h3b) .and. (p2b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p11b_
     &1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1
     & + nvab * (h3b_1 - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h3b-1),int_mb(k_range+p1b-
     &1),int_mb(k_range+p2b-1),int_mb(k_range+p11b-1),5,4,3,6,2,1,1.0d0)
      END IF
      IF ((h13b .lt. h3b) .and. (h3b .le. h14b) .and. (p11b .lt. p1b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p2b_1
     & - noab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p11b_1 - noab - 1
     & + nvab * (h14b_1 - 1 + noab * (h3b_1 - 1 + noab * (h13b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h14b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),6,5,2,4,3,1,-1.0d0
     &)
      END IF
      IF ((h13b .lt. h3b) .and. (h3b .le. h14b) .and. (p1b .le. p11b) .a
     &nd. (p11b .lt. p2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p2b_1
     & - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p1b_1 - noab - 1
     & + nvab * (h14b_1 - 1 + noab * (h3b_1 - 1 + noab * (h13b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h14b-1),int_mb(k_range+p1b-
     &1),int_mb(k_range+p11b-1),int_mb(k_range+p2b-1),6,4,2,5,3,1,1.0d0)
      END IF
      IF ((h13b .lt. h3b) .and. (h3b .le. h14b) .and. (p2b .le. p11b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p11b_
     &1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1
     & + nvab * (h14b_1 - 1 + noab * (h3b_1 - 1 + noab * (h13b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h14b-1),int_mb(k_range+p1b-
     &1),int_mb(k_range+p2b-1),int_mb(k_range+p11b-1),5,4,2,6,3,1,-1.0d0
     &)
      END IF
      IF ((h3b .le. h13b) .and. (p11b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p2b_1
     & - noab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p11b_1 - noab - 1
     & + nvab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (h3b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),6,5,1,4,3,2,1.0d0)
      END IF
      IF ((h3b .le. h13b) .and. (p1b .le. p11b) .and. (p11b .lt. p2b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p2b_1
     & - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p1b_1 - noab - 1
     & + nvab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (h3b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p1b-
     &1),int_mb(k_range+p11b-1),int_mb(k_range+p2b-1),6,4,1,5,3,2,-1.0d0
     &)
      END IF
      IF ((h3b .le. h13b) .and. (p2b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p11b_
     &1 - noab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1
     & + nvab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (h3b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p1b-
     &1),int_mb(k_range+p2b-1),int_mb(k_range+p11b-1),5,4,1,6,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_y_tr2_11',3,MA_ERR
     &)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_y_tr2_11',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_y_tr2_11',5,MA_ERR)
      IF ((h4b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h14b_
     &2 - 1 + noab * (h13b_2 - 1 + noab * (p11b_2 - noab - 1 + nvab * (h
     &4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),1,2,4,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_y_tr2_11',6,MA_ERR
     &)
      nsuperh(1) = 1
      nsuperh(2) = 1
      isuperh = 1
      IF (h13b .eq. h14b) THEN
      nsuperh(isuperh) = nsuperh(isuperh) + 1
      ELSE
      isuperh = isuperh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperh(1))/FACTORIAL(nsuperh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_y_tr2_11',7,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_y_tr2_11',8,M
     &A_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_y_tr2_11',9,MA_ERR)
      IF ((h3b .le. h4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h4b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p1b-1),int_mb(k_range+h3b-1)
     &,4,1,3,2,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p2b -
     & noab - 1 + nvab * (p1b - noab - 1 + nvab * (h4b - 1 + noab * (h3b
     & - 1)))))
      END IF
      IF ((h4b .le. h3b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h4b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p1b-1),int_mb(k_range+h3b-1)
     &,1,4,3,2,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p2b -
     & noab - 1 + nvab * (p1b - noab - 1 + nvab * (h3b - 1 + noab * (h4b
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_y_tr2_11',10,MA_ER
     &R)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_y_tr2_11',11,
     &MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

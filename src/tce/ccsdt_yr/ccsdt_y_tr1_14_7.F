      SUBROUTINE ccsdt_y_tr1_14_7(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     $Id: ccsdt_y_tr1_14_7.F 19701 2010-10-29 17:16:57Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h2 p12 p15 h11 h13 h14 )_vtrt + = 1/2 * Sum ( h8 p5 ) * t ( p5 p12 p15 h8 h13 h14 )_t * i2 ( h2 h8 h11 p5 )_vtr
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER p12b
      INTEGER p15b
      INTEGER h13b
      INTEGER h14b
      INTEGER h11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER h8b
      INTEGER p12b_1
      INTEGER p15b_1
      INTEGER p5b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER h8b_1
      INTEGER h2b_2
      INTEGER h8b_2
      INTEGER h11b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO p12b = noab+1,noab+nvab
      DO p15b = p12b,noab+nvab
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h11b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p12b-
     &1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1).ne.12)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+p12b-1)+int_mb(k_spin+p15b-
     &1) .eq. int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+
     &h14b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p12b-1),ieor(int_mb
     &(k_sym+p15b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h13b-1)
     &,int_mb(k_sym+h14b-1)))))) .eq. ieor(irrep_v,ieor(irrep_tr,irrep_t
     &))) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+p12b-1) * int_mb(k_r
     &ange+p15b-1) * int_mb(k_range+h11b-1) * int_mb(k_range+h13b-1) * i
     &nt_mb(k_range+h14b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_y_tr1_14_7',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p12b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p5b-
     &1) .eq. int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+
     &h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p12b-1),ieor(int_mb(k_sym+p15b-1),ieor(int_m
     &b(k_sym+p5b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1)
     &,int_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p12b,p15b,p5b,h13b,h14b,h8b,p12b_1,p15b_1,p5
     &b_1,h13b_1,h14b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h2b,h8b,h11b,p5b,h2b_2,h8b_2,h11b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p12b-1) * int_mb(k_range+p15b-1) * int_
     &mb(k_range+h13b-1) * int_mb(k_range+h14b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_y_tr1_14_7',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_y_tr1_14_7',2,MA_ERR)
      IF ((p5b .le. p12b) .and. (h8b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h13b_1 - 1 + noab * (h8b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p12b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p15b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),6,5,3,2,4,1,1.0d0
     &)
      END IF
      IF ((p5b .le. p12b) .and. (h13b .lt. h8b) .and. (h8b .le. h14b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h8b_1 - 1 + noab * (h13b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p12b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p15b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),6,4,3,2,5,1,-1.0d
     &0)
      END IF
      IF ((p5b .le. p12b) .and. (h14b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p12b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p15b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),5,4,3,2,6,1,1.0d0
     &)
      END IF
      IF ((p12b .lt. p5b) .and. (p5b .le. p15b) .and. (h8b .le. h13b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h13b_1 - 1 + noab * (h8b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),6,5,3,1,4,2,-1.0d
     &0)
      END IF
      IF ((p12b .lt. p5b) .and. (p5b .le. p15b) .and. (h13b .lt. h8b) .a
     &nd. (h8b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h8b_1 - 1 + noab * (h13b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),6,4,3,1,5,2,1.0d0
     &)
      END IF
      IF ((p12b .lt. p5b) .and. (p5b .le. p15b) .and. (h14b .lt. h8b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),5,4,3,1,6,2,-1.0d
     &0)
      END IF
      IF ((p15b .lt. p5b) .and. (h8b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h13b_1 - 1 + noab * (h8b_1 - 1 + noab * (p5b_1 - n
     &oab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p5b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),6,5,2,1,4,3,1.0d0
     &)
      END IF
      IF ((p15b .lt. p5b) .and. (h13b .lt. h8b) .and. (h8b .le. h14b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h8b_1 - 1 + noab * (h13b_1 - 1 + noab * (p5b_1 - n
     &oab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p5b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),6,4,2,1,5,3,-1.0d
     &0)
      END IF
      IF ((p15b .lt. p5b) .and. (h14b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (p5b_1 - n
     &oab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p5b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),5,4,2,1,6,3,1.0d0
     &)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_y_tr1_14_7',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_y_tr1_14_7',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_y_tr1_14_7',5,MA_ERR)
      IF ((h8b .lt. h2b) .and. (h11b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (h11b_2 - 1 + noab * (h2b_2 - 1 + noab * (h8b
     &_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h11b-1),int_mb(k_range+p5b-1
     &),3,2,1,4,-1.0d0)
      END IF
      IF ((h2b .le. h8b) .and. (h11b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (h11b_2 - 1 + noab * (h8b_2 - 1 + noab * (h2b
     &_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+p5b-1
     &),3,1,2,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_y_tr1_14_7',6,MA_E
     &RR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_y_tr1_14_7',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_y_tr1_14_7',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_y_tr1_14_7',9,MA_ERR)
      IF ((h11b .le. h13b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h14b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p15b-1),int_mb(k_range+p12b-1),2,6,5,1,4,3,1.0d
     &0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h14b 
     &- 1 + noab * (h13b - 1 + noab * (h11b - 1 + noab * (p15b - noab - 
     &1 + nvab * (p12b - noab - 1 + nvab * (h2b - 1)))))))
      END IF
      IF ((h13b .le. h11b) .and. (h11b .le. h14b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h14b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p15b-1),int_mb(k_range+p12b-1),2,6,5,4,1,3,-1.0
     &d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h14b 
     &- 1 + noab * (h11b - 1 + noab * (h13b - 1 + noab * (p15b - noab - 
     &1 + nvab * (p12b - noab - 1 + nvab * (h2b - 1)))))))
      END IF
      IF ((h14b .le. h11b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h14b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p15b-1),int_mb(k_range+p12b-1),2,6,5,4,3,1,1.0d
     &0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h11b 
     &- 1 + noab * (h14b - 1 + noab * (h13b - 1 + noab * (p15b - noab - 
     &1 + nvab * (p12b - noab - 1 + nvab * (h2b - 1)))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_y_tr1_14_7',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_y_tr1_14_7',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

      SUBROUTINE ccsdt_lambda1_16_4_1(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     $Id: ccsdt_lambda1_16_4_1.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h2 h5 h6 h10 p3 p12 )_yt + = 1 * Sum ( p7 ) * t ( p7 h10 )_t * y ( h2 h5 h6 p3 p7 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER h5b
      INTEGER h6b
      INTEGER h10b
      INTEGER p3b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p7b_1
      INTEGER h10b_1
      INTEGER h2b_2
      INTEGER h5b_2
      INTEGER h6b_2
      INTEGER p3b_2
      INTEGER p12b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTASK
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO h2b = 1,noab
      DO h5b = 1,noab
      DO h6b = h5b,noab
      DO h10b = 1,noab
      DO p3b = noab+1,noab+nvab
      DO p12b = p3b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h5b-1
     &)+int_mb(k_spin+h6b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+p3b-1)+
     &int_mb(k_spin+p12b-1).ne.12)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-1)
     & .eq. int_mb(k_spin+h10b-1)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p12
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h5b-1),ieor(int_mb(
     &k_sym+h6b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+p3b-1),in
     &t_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+h5b-1) * int_mb(k_ra
     &nge+h6b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+p3b-1) * int_
     &mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_lambda1_16_4_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h10b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p7b,h10b,p7b_1,h10b_1)
      CALL TCE_RESTRICTED_6(h2b,h5b,h6b,p3b,p12b,p7b,h2b_2,h5b_2,h6b_2,p
     &3b_2,p12b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+h10b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h5b-1) * int_mb
     &(k_range+h6b-1) * int_mb(k_range+p3b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_lambda1_16_4_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_lambda1_16_4_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h10b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_lambda1_16_4_1',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_lambda1_16_4_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_lambda1_16_4_1',5,MA_ERR)
      IF ((h6b .lt. h2b) .and. (p7b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p3b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h2b_2 - 1 + noab * (h6b_2 - 1 + noab * (h5b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h2b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p12b-1),6,5,2,1,3,4,-1.0d0)
      END IF
      IF ((h6b .lt. h2b) .and. (p3b .le. p7b) .and. (p7b .le. p12b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p3b_2 - noab - 1
     & + nvab * (h2b_2 - 1 + noab * (h6b_2 - 1 + noab * (h5b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h2b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p12b-1),6,4,2,1,3,5,1.0d0)
      END IF
      IF ((h6b .lt. h2b) .and. (p12b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p3b_2 - noab - 1
     & + nvab * (h2b_2 - 1 + noab * (h6b_2 - 1 + noab * (h5b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h2b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p7b-1),5,4,2,1,3,6,-1.0d0)
      END IF
      IF ((h5b .lt. h2b) .and. (h2b .le. h6b) .and. (p7b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p3b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h6b_2 - 1 + noab * (h2b_2 - 1 + noab * (h5b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p12b-1),6,5,3,1,2,4,1.0d0)
      END IF
      IF ((h5b .lt. h2b) .and. (h2b .le. h6b) .and. (p3b .le. p7b) .and.
     & (p7b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p3b_2 - noab - 1
     & + nvab * (h6b_2 - 1 + noab * (h2b_2 - 1 + noab * (h5b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h6b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p12b-1),6,4,3,1,2,5,-1.0d0)
      END IF
      IF ((h5b .lt. h2b) .and. (h2b .le. h6b) .and. (p12b .lt. p7b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p3b_2 - noab - 1
     & + nvab * (h6b_2 - 1 + noab * (h2b_2 - 1 + noab * (h5b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h6b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p7b-1),5,4,3,1,2,6,1.0d0)
      END IF
      IF ((h2b .le. h5b) .and. (p7b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p3b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h6b_2 - 1 + noab * (h5b_2 - 1 + noab * (h2b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p12b-1),6,5,3,2,1,4,-1.0d0)
      END IF
      IF ((h2b .le. h5b) .and. (p3b .le. p7b) .and. (p7b .le. p12b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p3b_2 - noab - 1
     & + nvab * (h6b_2 - 1 + noab * (h5b_2 - 1 + noab * (h2b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p12b-1),6,4,3,2,1,5,1.0d0)
      END IF
      IF ((h2b .le. h5b) .and. (p12b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p3b_2 - noab - 1
     & + nvab * (h6b_2 - 1 + noab * (h5b_2 - 1 + noab * (h2b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p7b-1),5,4,3,2,1,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_lambda1_16_4_1',6,
     &MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_lambda1_16_4_
     &1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_lambda1_16_4_
     &1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_lambda1_16_4_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h6b-1),int_mb(k_range+h5b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),5,4,3,6,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p3b - noab - 1 + nvab * (h10b - 1 + noab * (h
     &6b - 1 + noab * (h5b - 1 + noab * (h2b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_lambda1_16_4_1',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_lambda1_16_4_
     &1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

      SUBROUTINE ccsdt_lr_alpha_offdiag_11_3(d_a,k_a_offset,d_b,k_b_offs
     &et,d_c,k_c_offset)
C     $Id: ccsdt_lr_alpha_offdiag_11_3.F 19701 2010-10-29 17:16:57Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h11 p7 h9 p10 )_yba + = -1/2 * Sum ( h3 h4 p1 ) * a ( p1 p7 h3 h4 )_a * i2 ( h3 h4 h11 h9 p1 p10 )_yb
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p7b
      INTEGER h11b
      INTEGER h9b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b
      INTEGER h3b
      INTEGER h4b
      INTEGER p7b_1
      INTEGER p1b_1
      INTEGER h3b_1
      INTEGER h4b_1
      INTEGER h11b_2
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p1b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p7b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h9b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p7b-
     &1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+
     &h9b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb
     &(k_sym+h9b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_b,irrep_a))) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+p7b-1) * int_mb(k_r
     &ange+h9b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_lr_alpha_offdiag_11_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p1b = noab+1,noab+nvab
      DO h3b = 1,noab
      DO h4b = h3b,noab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h
     &3b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb(
     &k_sym+h3b-1),int_mb(k_sym+h4b-1)))) .eq. irrep_a) THEN
      CALL TCE_RESTRICTED_4(p7b,p1b,h3b,h4b,p7b_1,p1b_1,h3b_1,h4b_1)
      CALL TCE_RESTRICTED_6(h11b,h3b,h4b,h9b,p10b,p1b,h11b_2,h3b_2,h4b_2
     &,h9b_2,p10b_2,p1b_2)
      dim_common = int_mb(k_range+p1b-1) * int_mb(k_range+h3b-1) * int_m
     &b(k_range+h4b-1)
      dima_sort = int_mb(k_range+p7b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h9b-1) * int_m
     &b(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_lr_alpha_offdiag_11_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_lr_alpha_offdiag_11_3',2,MA_ERR)
      IF ((p1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p1b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1)
     &,2,4,3,1,1.0d0)
      END IF
      IF ((p7b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (p1b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1)
     &,1,4,3,2,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_lr_alpha_offdiag_1
     &1_3',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_lr_alpha_offdiag_11_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_lr_alpha_offdiag_11_3',5,MA_ERR)
      IF ((h4b .le. h11b) .and. (h9b .le. p1b) .and. (p1b .le. p10b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab
     & * (h11b_2 - 1 + noab * (h4b_2 - 1 + noab * (h3b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h11b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+p10b-1),6,4,3,2,1,5,1.0d0)
      END IF
      IF ((h4b .le. h11b) .and. (p10b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab
     & * (h11b_2 - 1 + noab * (h4b_2 - 1 + noab * (h3b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h11b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p1b-1),5,4,3,2,1,6,-1.0d0)
      END IF
      IF ((h3b .le. h11b) .and. (h11b .lt. h4b) .and. (h9b .le. p1b) .an
     &d. (p1b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab
     & * (h4b_2 - 1 + noab * (h11b_2 - 1 + noab * (h3b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h4b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+p10b-1),6,4,2,3,1,5,-1.0d0)
      END IF
      IF ((h3b .le. h11b) .and. (h11b .lt. h4b) .and. (p10b .lt. p1b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab
     & * (h4b_2 - 1 + noab * (h11b_2 - 1 + noab * (h3b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h4b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p1b-1),5,4,2,3,1,6,1.0d0)
      END IF
      IF ((h11b .lt. h3b) .and. (h9b .le. p1b) .and. (p1b .le. p10b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab
     & * (h4b_2 - 1 + noab * (h3b_2 - 1 + noab * (h11b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+p10b-1),6,4,1,3,2,5,1.0d0)
      END IF
      IF ((h11b .lt. h3b) .and. (p10b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab
     & * (h4b_2 - 1 + noab * (h3b_2 - 1 + noab * (h11b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p1b-1),5,4,1,3,2,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_lr_alpha_offdiag_1
     &1_3',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h3b .eq. h4b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_lr_alpha_offd
     &iag_11_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_lr_alpha_offd
     &iag_11_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_lr_alpha_offdiag_11_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+p7b-
     &1),3,4,2,1,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h9b - 1 + noab * (p7b - noab - 1 + nvab * (h1
     &1b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_lr_alpha_offdiag_1
     &1_3',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_lr_alpha_offd
     &iag_11_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

      SUBROUTINE ccsdt_lr_beta_3(d_i0,d_o1,d_tra1,d_tra2,d_tra3,d_trb1,d
     &_trb2,d_trb3,d_y1,d_y2,d_y3,k_i0_offset,k_o1_offset,k_tra1_offset,
     &k_tra2_offset,k_tra3_offset,k_trb1_offset,k_trb2_offset,k_trb3_off
     &set,k_y1_offset,k_y2_offset,k_y3_offset)
C     $Id: ccsdt_lr_beta_3.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( )_ytrbtrao + = -1 * Sum ( p10 h9 ) * o ( h9 p10 )_o * i1 ( p10 h9 )_ytrbtra
C         i1 ( p10 h9 )_ytrbtra + = 1 * Sum ( h2 ) * tra ( p10 h2 )_tra * i2 ( h2 h9 )_ytrb
C             i2 ( h2 h9 )_ytrb + = 1 * Sum ( p3 ) * trb ( p3 h9 )_trb * y ( h2 p3 )_y
C             i2 ( h2 h9 )_ytrb + = -1/2 * Sum ( h5 p3 p4 ) * trb ( p3 p4 h5 h9 )_trb * y ( h2 h5 p3 p4 )_y
C             i2 ( h2 h9 )_ytrb + = 1/12 * Sum ( h6 h7 p3 p4 p5 ) * trb ( p3 p4 p5 h6 h7 h9 )_trb * y ( h2 h6 h7 p3 p4 p5 )_y
C         i1 ( p10 h9 )_ytratrb + = -1/2 * Sum ( h8 ) * trb ( p10 h8 )_trb * i2 ( h8 h9 )_ytra
C             i2 ( h8 h9 )_ytra + = -1 * Sum ( h5 p3 p4 ) * tra ( p3 p4 h5 h9 )_tra * y ( h5 h8 p3 p4 )_y
C             i2 ( h8 h9 )_ytra + = -1/6 * Sum ( h6 h7 p3 p4 p5 ) * tra ( p3 p4 p5 h6 h7 h9 )_tra * y ( h6 h7 h8 p3 p4 p5 )_y
C             i2 ( h8 h9 )_ytra + = -2 * Sum ( p3 ) * tra ( p3 h9 )_tra * y ( h8 p3 )_y
C         i1 ( p10 h9 )_ytrbtra + = -1/2 * Sum ( h1 h3 p2 ) * tra ( p2 p10 h1 h3 )_tra * i2 ( h1 h3 h9 p2 )_ytrb
C             i2 ( h1 h3 h9 p2 )_ytrb + = -1 * Sum ( p6 ) * trb ( p6 h9 )_trb * y ( h1 h3 p2 p6 )_y
C             i2 ( h1 h3 h9 p2 )_ytrb + = 1/2 * Sum ( h7 p5 p6 ) * trb ( p5 p6 h7 h9 )_trb * y ( h1 h3 h7 p2 p5 p6 )_y
C         i1 ( p10 h9 )_ytrbtra + = 1/12 * Sum ( h5 h6 h7 p3 p4 ) * tra ( p3 p4 p10 h5 h6 h7 )_tra * i2 ( h5 h6 h7 h9 p3 p4 )_ytrb
C             i2 ( h5 h6 h7 h9 p3 p4 )_ytrb + = 1 * Sum ( p8 ) * trb ( p8 h9 )_trb * y ( h5 h6 h7 p3 p4 p8 )_y
C         i1 ( p10 h9 )_ytratrb + = -1/2 * Sum ( h1 h3 p2 ) * trb ( p2 p10 h1 h3 )_trb * i2 ( h1 h3 h9 p2 )_ytra
C             i2 ( h1 h3 h9 p2 )_ytra + = -1 * Sum ( p6 ) * tra ( p6 h9 )_tra * y ( h1 h3 p2 p6 )_y
C             i2 ( h1 h3 h9 p2 )_ytra + = 1/2 * Sum ( h7 p5 p6 ) * tra ( p5 p6 h7 h9 )_tra * y ( h1 h3 h7 p2 p5 p6 )_y
C         i1 ( p10 h9 )_ytratrb + = 1/12 * Sum ( h5 h6 h7 p3 p4 ) * trb ( p3 p4 p10 h5 h6 h7 )_trb * i2 ( h5 h6 h7 h9 p3 p4 )_ytra
C             i2 ( h5 h6 h7 h9 p3 p4 )_ytra + = 1 * Sum ( p8 ) * tra ( p8 h9 )_tra * y ( h5 h6 h7 p3 p4 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "util.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_i0
      INTEGER k_i0_offset
      INTEGER d_o1
      INTEGER k_o1_offset
      INTEGER d_i1
      INTEGER k_i1_offset
      INTEGER l_i1_offset
      INTEGER d_tra1
      INTEGER k_tra1_offset
      INTEGER d_i2
      INTEGER k_i2_offset
      INTEGER size_i1
      INTEGER d_trb1
      INTEGER k_trb1_offset
      INTEGER d_tra2
      INTEGER k_tra2_offset
      INTEGER d_tra3
      INTEGER k_tra3_offset
      INTEGER d_trb2
      INTEGER k_trb2_offset
      INTEGER d_trb3
      INTEGER k_trb3_offset
      INTEGER l_i2_offset
      INTEGER d_y1
      INTEGER k_y1_offset
      INTEGER size_i2
      INTEGER d_y2
      INTEGER k_y2_offset
      INTEGER d_y3
      INTEGER k_y3_offset
      CHARACTER*255 filename
#if !defined(CCSDTLR)
      CALL ERRQUIT('CCSDTLR not compiled (ccsdt_lr_beta_3.F)',
     &              0,CAPMIS_ERR)
      RETURN
      END
#else
      CALL OFFSET_ccsdt_lr_beta_3_1_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ccsdt_lr_beta_3_1_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL OFFSET_ccsdt_lr_beta_3_1_1_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ccsdt_lr_beta_3_1_1_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_1_1(d_trb1,k_trb1_offset,d_y1,k_y1_offset,d
     &_i2,k_i2_offset)
      CALL ccsdt_lr_beta_3_1_1_2(d_trb2,k_trb2_offset,d_y2,k_y2_offset,d
     &_i2,k_i2_offset)
      CALL ccsdt_lr_beta_3_1_1_3(d_trb3,k_trb3_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_1(d_tra1,k_tra1_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdt_lr_beta_3'
     &,-1,MA_ERR)
      CALL OFFSET_ccsdt_lr_beta_3_1_2_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ccsdt_lr_beta_3_1_2_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_2_1(d_tra2,k_tra2_offset,d_y2,k_y2_offset,d
     &_i2,k_i2_offset)
      CALL ccsdt_lr_beta_3_1_2_2(d_tra3,k_tra3_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL ccsdt_lr_beta_3_1_2_3(d_tra1,k_tra1_offset,d_y1,k_y1_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_2(d_trb1,k_trb1_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdt_lr_beta_3'
     &,-1,MA_ERR)
      CALL OFFSET_ccsdt_lr_beta_3_1_3_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ccsdt_lr_beta_3_1_3_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_3_1(d_trb1,k_trb1_offset,d_y2,k_y2_offset,d
     &_i2,k_i2_offset)
      CALL ccsdt_lr_beta_3_1_3_2(d_trb2,k_trb2_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_3(d_tra2,k_tra2_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdt_lr_beta_3'
     &,-1,MA_ERR)
      CALL OFFSET_ccsdt_lr_beta_3_1_4_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ccsdt_lr_beta_3_1_4_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_4_1(d_trb1,k_trb1_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_4(d_tra3,k_tra3_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdt_lr_beta_3'
     &,-1,MA_ERR)
      CALL OFFSET_ccsdt_lr_beta_3_1_5_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ccsdt_lr_beta_3_1_5_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_5_1(d_tra1,k_tra1_offset,d_y2,k_y2_offset,d
     &_i2,k_i2_offset)
      CALL ccsdt_lr_beta_3_1_5_2(d_tra2,k_tra2_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_5(d_trb2,k_trb2_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdt_lr_beta_3'
     &,-1,MA_ERR)
      CALL OFFSET_ccsdt_lr_beta_3_1_6_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ccsdt_lr_beta_3_1_6_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_6_1(d_tra1,k_tra1_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdt_lr_beta_3_1_6(d_trb3,k_trb3_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdt_lr_beta_3'
     &,-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdt_lr_beta_3_1(d_o1,k_o1_offset,d_i1,k_i1_offset,d_i0,k_i0
     &_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdt_lr_beta_3'
     &,-1,MA_ERR)
      RETURN
      END
#endif

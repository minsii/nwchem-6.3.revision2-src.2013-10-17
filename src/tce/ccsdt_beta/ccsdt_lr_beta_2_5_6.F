      SUBROUTINE ccsdt_lr_beta_2_5_6(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     $Id: ccsdt_lr_beta_2_5_6.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p10 p11 h9 h13 )_vtrbtra + = 1 * Sum ( h6 p3 ) * tra ( p3 p10 p11 h6 h9 h13 )_tra * i2 ( h6 p3 )_vtrb
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p10b
      INTEGER p11b
      INTEGER h9b
      INTEGER h13b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p3b
      INTEGER h6b
      INTEGER p10b_1
      INTEGER p11b_1
      INTEGER p3b_1
      INTEGER h9b_1
      INTEGER h13b_1
      INTEGER h6b_1
      INTEGER h6b_2
      INTEGER p3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p10b = noab+1,noab+nvab
      DO p11b = p10b,noab+nvab
      DO h9b = 1,noab
      DO h13b = h9b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p10b-1)+int_mb(k_spin+p11b
     &-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h13b-1).ne.8)) THEN
      IF (int_mb(k_spin+p10b-1)+int_mb(k_spin+p11b-1) .eq. int_mb(k_spin
     &+h9b-1)+int_mb(k_spin+h13b-1)) THEN
      IF (ieor(int_mb(k_sym+p10b-1),ieor(int_mb(k_sym+p11b-1),ieor(int_m
     &b(k_sym+h9b-1),int_mb(k_sym+h13b-1)))) .eq. ieor(irrep_v,ieor(irre
     &p_trb,irrep_tra))) THEN
      dimc = int_mb(k_range+p10b-1) * int_mb(k_range+p11b-1) * int_mb(k_
     &range+h9b-1) * int_mb(k_range+h13b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_lr_beta_2_5_6',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p3b = noab+1,noab+nvab
      DO h6b = 1,noab
      IF (int_mb(k_spin+p10b-1)+int_mb(k_spin+p11b-1)+int_mb(k_spin+p3b-
     &1) .eq. int_mb(k_spin+h9b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h
     &6b-1)) THEN
      IF (ieor(int_mb(k_sym+p10b-1),ieor(int_mb(k_sym+p11b-1),ieor(int_m
     &b(k_sym+p3b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h13b-1),
     &int_mb(k_sym+h6b-1)))))) .eq. irrep_tra) THEN
      CALL TCE_RESTRICTED_6(p10b,p11b,p3b,h9b,h13b,h6b,p10b_1,p11b_1,p3b
     &_1,h9b_1,h13b_1,h6b_1)
      CALL TCE_RESTRICTED_2(h6b,p3b,h6b_2,p3b_2)
      dim_common = int_mb(k_range+p3b-1) * int_mb(k_range+h6b-1)
      dima_sort = int_mb(k_range+p10b-1) * int_mb(k_range+p11b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+h13b-1)
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_lr_beta_2_5_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_lr_beta_2_5_6',2,MA_ERR)
      IF ((p3b .le. p10b) .and. (h6b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h6b_1 - 1 + noab * (p11b_1 - n
     &oab - 1 + nvab * (p10b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),6,5,3,2,4,1,1.0d0)
      END IF
      IF ((p3b .le. p10b) .and. (h9b .lt. h6b) .and. (h6b .le. h13b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h9b_1 - 1 + noab * (p11b_1 - n
     &oab - 1 + nvab * (p10b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),6,4,3,2,5,1,-1.0d0
     &)
      END IF
      IF ((p3b .le. p10b) .and. (h13b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h13b_1 - 1 + noab * (h9b_1 - 1 + noab * (p11b_1 - n
     &oab - 1 + nvab * (p10b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h13b-1),int_mb(k_range+h6b-1),5,4,3,2,6,1,1.0d0)
      END IF
      IF ((p10b .lt. p3b) .and. (p3b .le. p11b) .and. (h6b .le. h9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h6b_1 - 1 + noab * (p11b_1 - n
     &oab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p10b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p11b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),6,5,3,1,4,2,-1.0d0
     &)
      END IF
      IF ((p10b .lt. p3b) .and. (p3b .le. p11b) .and. (h9b .lt. h6b) .an
     &d. (h6b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h9b_1 - 1 + noab * (p11b_1 - n
     &oab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p10b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),6,4,3,1,5,2,1.0d0)
      END IF
      IF ((p10b .lt. p3b) .and. (p3b .le. p11b) .and. (h13b .lt. h6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h13b_1 - 1 + noab * (h9b_1 - 1 + noab * (p11b_1 - n
     &oab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p10b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h13b-1),int_mb(k_range+h6b-1),5,4,3,1,6,2,-1.0d0
     &)
      END IF
      IF ((p11b .lt. p3b) .and. (h6b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h6b_1 - 1 + noab * (p3b_1 - no
     &ab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p10b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+p3b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),6,5,2,1,4,3,1.0d0)
      END IF
      IF ((p11b .lt. p3b) .and. (h9b .lt. h6b) .and. (h6b .le. h13b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (h9b_1 - 1 + noab * (p3b_1 - no
     &ab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p10b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+p3b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),6,4,2,1,5,3,-1.0d0
     &)
      END IF
      IF ((p11b .lt. p3b) .and. (h13b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h13b_1 - 1 + noab * (h9b_1 - 1 + noab * (p3b_1 - no
     &ab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p10b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+p3b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h13b-1),int_mb(k_range+h6b-1),5,4,2,1,6,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_lr_beta_2_5_6',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_lr_beta_2_5_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_lr_beta_2_5_6',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - noab - 1 + nvab * (h6b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+p3b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_lr_beta_2_5_6',6,M
     &A_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_lr_beta_2_5_6
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_lr_beta_2_5_6
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_lr_beta_2_5_6',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p11b-1),int_mb(k_range+p10b
     &-1),4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h13b 
     &- 1 + noab * (h9b - 1 + noab * (p11b - noab - 1 + nvab * (p10b - n
     &oab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_lr_beta_2_5_6',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_lr_beta_2_5_6
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

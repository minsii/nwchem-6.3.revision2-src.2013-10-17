      SUBROUTINE cr_eomccsd_t_N2_4_2_3(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: cr_eomccsd_t_n2_4_2_3.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h12 p4 h1 p10 )_vt + = 1 * Sum ( p8 ) * t ( p8 h1 )_t * v ( h12 p4 p8 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER nxtask
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h12b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER p4b_2
      INTEGER h12b_2
      INTEGER p10b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL nxtask
      nprocs = GA_NNODES()
      count = 0
      next = nxtask(nprocs,1)
      DO p4b = noab+1,noab+nvab
      DO h12b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h12b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h12b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('cr_eomccsd_t_N2_4_2_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h1b,p8b_1,h1b_1)
      CALL TCE_RESTRICTED_4(p4b,h12b,p10b,p8b,p4b_2,h12b_2,p10b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h12b-1) * int_m
     &b(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('cr_eomccsd_t_N2_4_2_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &cr_eomccsd_t_N2_4_2_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('cr_eomccsd_t_N2_4_2_3',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('cr_eomccsd_t_N2_4_2_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &cr_eomccsd_t_N2_4_2_3',5,MA_ERR)
      IF ((h12b .le. p4b) .and. (p8b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noa
     &b+nvab) * (h12b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+p10b-
     &1),4,1,2,3,1.0d0)
      END IF
      IF ((h12b .le. p4b) .and. (p10b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noa
     &b+nvab) * (h12b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p10b-1),int_mb(k_range+p8b-
     &1),3,1,2,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('cr_eomccsd_t_N2_4_2_3',6
     &,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('cr_eomccsd_t_N2_4_2
     &_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('cr_eomccsd_t_N2_4_2
     &_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &cr_eomccsd_t_N2_4_2_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h12b - 1 + noab * (p4b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('cr_eomccsd_t_N2_4_2_3',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('cr_eomccsd_t_N2_4_2
     &_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = nxtask(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = nxtask(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

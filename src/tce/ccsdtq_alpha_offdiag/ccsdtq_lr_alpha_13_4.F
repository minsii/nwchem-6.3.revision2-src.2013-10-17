      SUBROUTINE ccsdtq_lr_alpha_13_4(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     $Id: ccsdtq_lr_alpha_13_4.F 19703 2010-10-29 17:30:23Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p14 h12 h15 )_ytrbtra + = 1 * Sum ( h4 h5 p1 p2 ) * tra ( p1 p2 p14 h4 h5 h12 )_tra * i2 ( h4 h5 h13 h15 p1 p2 )_ytrb
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p14b
      INTEGER h13b
      INTEGER h12b
      INTEGER h15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b
      INTEGER p2b
      INTEGER h4b
      INTEGER h5b
      INTEGER p14b_1
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER h12b_1
      INTEGER h4b_1
      INTEGER h5b_1
      INTEGER h13b_2
      INTEGER h4b_2
      INTEGER h5b_2
      INTEGER h15b_2
      INTEGER p1b_2
      INTEGER p2b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p14b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h12b = 1,noab
      DO h15b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p14b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h15b-1).ne.8)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+p14b-1) .eq. int_mb(k_spin
     &+h12b-1)+int_mb(k_spin+h15b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p14b-1),ieor(int_m
     &b(k_sym+h12b-1),int_mb(k_sym+h15b-1)))) .eq. ieor(irrep_y,ieor(irr
     &ep_trb,irrep_tra))) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+p14b-1) * int_mb(k_
     &range+h12b-1) * int_mb(k_range+h15b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_13_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO h4b = 1,noab
      DO h5b = h4b,noab
      IF (int_mb(k_spin+p14b-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1
     &) .eq. int_mb(k_spin+h12b-1)+int_mb(k_spin+h4b-1)+int_mb(k_spin+h5
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+p14b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb
     &(k_sym+p2b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb(k_sym+h4b-1),i
     &nt_mb(k_sym+h5b-1)))))) .eq. irrep_tra) THEN
      CALL TCE_RESTRICTED_6(p14b,p1b,p2b,h12b,h4b,h5b,p14b_1,p1b_1,p2b_1
     &,h12b_1,h4b_1,h5b_1)
      CALL TCE_RESTRICTED_6(h13b,h4b,h5b,h15b,p1b,p2b,h13b_2,h4b_2,h5b_2
     &,h15b_2,p1b_2,p2b_2)
      dim_common = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_m
     &b(k_range+h4b-1) * int_mb(k_range+h5b-1)
      dima_sort = int_mb(k_range+p14b-1) * int_mb(k_range+h12b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_13_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_13_4',2,MA_ERR)
      IF ((p2b .le. p14b) .and. (h5b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h5b_1 - 1 + noab * (h4b_1 - 1 + noab * (p14b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p14b-1),int_mb(k_range+h4b-1
     &),int_mb(k_range+h5b-1),int_mb(k_range+h12b-1),6,3,5,4,2,1,1.0d0)
      END IF
      IF ((p2b .le. p14b) .and. (h4b .le. h12b) .and. (h12b .lt. h5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h4b_1 - 1 + noab * (p14b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p14b-1),int_mb(k_range+h4b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h5b-1),5,3,6,4,2,1,-1.0d0)
      END IF
      IF ((p2b .le. p14b) .and. (h12b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h4b_1 - 1 + noab * (h12b_1 - 1 + noab * (p14b_1 - n
     &oab - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p14b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+h4b-1),int_mb(k_range+h5b-1),4,3,6,5,2,1,1.0d0)
      END IF
      IF ((p1b .le. p14b) .and. (p14b .lt. p2b) .and. (h5b .le. h12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h5b_1 - 1 + noab * (h4b_1 - 1 + noab * (p2b_1 - no
     &ab - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p14b-1),int_mb(k_range+p2b-1),int_mb(k_range+h4b-1
     &),int_mb(k_range+h5b-1),int_mb(k_range+h12b-1),6,2,5,4,3,1,-1.0d0)
      END IF
      IF ((p1b .le. p14b) .and. (p14b .lt. p2b) .and. (h4b .le. h12b) .a
     &nd. (h12b .lt. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h4b_1 - 1 + noab * (p2b_1 - no
     &ab - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p14b-1),int_mb(k_range+p2b-1),int_mb(k_range+h4b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h5b-1),5,2,6,4,3,1,1.0d0)
      END IF
      IF ((p1b .le. p14b) .and. (p14b .lt. p2b) .and. (h12b .lt. h4b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h4b_1 - 1 + noab * (h12b_1 - 1 + noab * (p2b_1 - no
     &ab - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p14b-1),int_mb(k_range+p2b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+h4b-1),int_mb(k_range+h5b-1),4,2,6,5,3,1,-1.0d0)
      END IF
      IF ((p14b .lt. p1b) .and. (h5b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h5b_1 - 1 + noab * (h4b_1 - 1 + noab * (p2b_1 - no
     &ab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p14b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+h4b-1
     &),int_mb(k_range+h5b-1),int_mb(k_range+h12b-1),6,1,5,4,3,2,1.0d0)
      END IF
      IF ((p14b .lt. p1b) .and. (h4b .le. h12b) .and. (h12b .lt. h5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h4b_1 - 1 + noab * (p2b_1 - no
     &ab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p14b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+h4b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h5b-1),5,1,6,4,3,2,-1.0d0)
      END IF
      IF ((p14b .lt. p1b) .and. (h12b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h5b_1
     & - 1 + noab * (h4b_1 - 1 + noab * (h12b_1 - 1 + noab * (p2b_1 - no
     &ab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p14b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+h4b-1),int_mb(k_range+h5b-1),4,1,6,5,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lr_alpha_13_4',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_13_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_13_4',5,MA_ERR)
      IF ((h5b .le. h13b) .and. (h15b .le. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p2b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab
     & * (h13b_2 - 1 + noab * (h5b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h13b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h4b .le. h13b) .and. (h13b .lt. h5b) .and. (h15b .le. p1b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p2b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab
     & * (h5b_2 - 1 + noab * (h13b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h5b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),4,2,3,1,6,5,-1.0d0)
      END IF
      IF ((h13b .lt. h4b) .and. (h15b .le. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p2b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab
     & * (h5b_2 - 1 + noab * (h4b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h4b-1),int_mb(k_range+h5b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),4,1,3,2,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lr_alpha_13_4',6,
     &MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p1b .eq. p2b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h4b .eq. h5b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(ns
     &ubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_13_
     &4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_13_
     &4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_13_4',9,MA_ERR)
      IF ((h12b .le. h15b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+p14
     &b-1),2,4,3,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h15b 
     &- 1 + noab * (h12b - 1 + noab * (p14b - noab - 1 + nvab * (h13b - 
     &1)))))
      END IF
      IF ((h15b .le. h12b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+p14
     &b-1),2,4,1,3,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h12b 
     &- 1 + noab * (h15b - 1 + noab * (p14b - noab - 1 + nvab * (h13b - 
     &1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lr_alpha_13_4',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_13_
     &4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

      SUBROUTINE ccsdtq_lr_alpha_15_31_1_4_2(d_a,k_a_offset,d_b,k_b_offs
     &et,d_c,k_c_offset)
C     $Id: ccsdtq_lr_alpha_15_31_1_4_2.F 19703 2010-10-29 17:30:23Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h14 h17 h15 p5 )_yt + = -1 * Sum ( h9 p7 p8 ) * t ( p7 p8 h9 h15 )_t * y ( h9 h14 h17 p5 p7 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h14b
      INTEGER h17b
      INTEGER h15b
      INTEGER p5b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h15b_1
      INTEGER h9b_1
      INTEGER h14b_2
      INTEGER h17b_2
      INTEGER h9b_2
      INTEGER p5b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h14b = 1,noab
      DO h17b = h14b,noab
      DO h15b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h17b
     &-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h17b-1) .eq. int_mb(k_spin
     &+h15b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h17b-1),ieor(int_m
     &b(k_sym+h15b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+h14b-1) * int_mb(k_range+h17b-1) * int_mb(k_
     &range+h15b-1) * int_mb(k_range+p5b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_15_31_1_4_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &15b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h15b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p7b,p8b,h15b,h9b,p7b_1,p8b_1,h15b_1,h9b_1)
      CALL TCE_RESTRICTED_6(h14b,h17b,h9b,p5b,p7b,p8b,h14b_2,h17b_2,h9b_
     &2,p5b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+h15b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h17b-1) * int_
     &mb(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_15_31_1_4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_15_31_1_4_2',2,MA_ERR)
      IF ((h9b .le. h15b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),4,3,2,1,1.0d0)
      END IF
      IF ((h15b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h15b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h15b-1),int_mb(k_range+h9b-1
     &),3,4,2,1,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lr_alpha_15_31_1_
     &4_2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_15_31_1_4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_15_31_1_4_2',5,MA_ERR)
      IF ((h9b .le. h14b) .and. (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h17b_2 - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h17b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),6,3,2,1,5,4,1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (p7b .lt. p5b) .and. (p5b .le. p8b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h17b_2 - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h17b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),5,3,2,1,6,4,-1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (p5b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h17b_2 - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h17b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h9b) .and. (h9b .le. h17b) .and. (p8b .lt. p5b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h17b_2 - 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h17b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),6,3,1,2,5,4,-1.0d0)
      END IF
      IF ((h14b .lt. h9b) .and. (h9b .le. h17b) .and. (p7b .lt. p5b) .an
     &d. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h17b_2 - 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h17b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),5,3,1,2,6,4,1.0d0)
      END IF
      IF ((h14b .lt. h9b) .and. (h9b .le. h17b) .and. (p5b .le. p7b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h17b_2 - 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h17b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,3,1,2,6,5,-1.0d0)
      END IF
      IF ((h17b .lt. h9b) .and. (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h17b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h17b-1),int_mb(k_range+h9b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),6,2,1,3,5,4,1.0d0)
      END IF
      IF ((h17b .lt. h9b) .and. (p7b .lt. p5b) .and. (p5b .le. p8b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h17b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h17b-1),int_mb(k_range+h9b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),5,2,1,3,6,4,-1.0d0)
      END IF
      IF ((h17b .lt. h9b) .and. (p5b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h17b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h17b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,2,1,3,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lr_alpha_15_31_1_
     &4_2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_15_
     &31_1_4_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_15_
     &31_1_4_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_15_31_1_4_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h17b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),3,2,4,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p5b -
     & noab - 1 + nvab * (h15b - 1 + noab * (h17b - 1 + noab * (h14b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lr_alpha_15_31_1_
     &4_2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_15_
     &31_1_4_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

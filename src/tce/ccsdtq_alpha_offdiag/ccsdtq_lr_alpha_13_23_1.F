      SUBROUTINE ccsdtq_lr_alpha_13_23_1(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_lr_alpha_13_23_1.F 19703 2010-10-29 17:30:23Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 p14 h12 p9 )_yttrb + = 1 * Sum ( h3 h4 p1 ) * trb ( p1 p14 h3 h4 )_trb * i3 ( h3 h4 h13 h12 p1 p9 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p14b
      INTEGER h13b
      INTEGER h12b
      INTEGER p9b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b
      INTEGER h3b
      INTEGER h4b
      INTEGER p14b_1
      INTEGER p1b_1
      INTEGER h3b_1
      INTEGER h4b_1
      INTEGER h13b_2
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER h12b_2
      INTEGER p9b_2
      INTEGER p1b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p14b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h12b = 1,noab
      DO p9b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p14b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+p9b-1).ne.8)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+p14b-1) .eq. int_mb(k_spin
     &+h12b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p14b-1),ieor(int_m
     &b(k_sym+h12b-1),int_mb(k_sym+p9b-1)))) .eq. ieor(irrep_y,ieor(irre
     &p_t,irrep_trb))) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+p14b-1) * int_mb(k_
     &range+h12b-1) * int_mb(k_range+p9b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_13_23_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p1b = noab+1,noab+nvab
      DO h3b = 1,noab
      DO h4b = h3b,noab
      IF (int_mb(k_spin+p14b-1)+int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+
     &h3b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p14b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb
     &(k_sym+h3b-1),int_mb(k_sym+h4b-1)))) .eq. irrep_trb) THEN
      CALL TCE_RESTRICTED_4(p14b,p1b,h3b,h4b,p14b_1,p1b_1,h3b_1,h4b_1)
      CALL TCE_RESTRICTED_6(h13b,h3b,h4b,h12b,p9b,p1b,h13b_2,h3b_2,h4b_2
     &,h12b_2,p9b_2,p1b_2)
      dim_common = int_mb(k_range+p1b-1) * int_mb(k_range+h3b-1) * int_m
     &b(k_range+h4b-1)
      dima_sort = int_mb(k_range+p14b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+p9b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_13_23_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_13_23_1',2,MA_ERR)
      IF ((p1b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (p14b_1 - noab - 1 + nvab * (p1b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p14b-1),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1
     &),2,4,3,1,1.0d0)
      END IF
      IF ((p14b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (p1b_1 - noab - 1 + nvab * (p14b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1
     &),1,4,3,2,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lr_alpha_13_23_1'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_13_23_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_13_23_1',5,MA_ERR)
      IF ((h4b .le. h13b) .and. (h12b .le. p1b) .and. (p1b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab
     & * (h13b_2 - 1 + noab * (h4b_2 - 1 + noab * (h3b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h13b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p1b-1),int_mb(k_range+p9b-1),6,4,3,2,1,5,1.0d0)
      END IF
      IF ((h4b .le. h13b) .and. (p9b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab
     & * (h13b_2 - 1 + noab * (h4b_2 - 1 + noab * (h3b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h13b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p1b-1),5,4,3,2,1,6,-1.0d0)
      END IF
      IF ((h3b .le. h13b) .and. (h13b .lt. h4b) .and. (h12b .le. p1b) .a
     &nd. (p1b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab
     & * (h4b_2 - 1 + noab * (h13b_2 - 1 + noab * (h3b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h4b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p1b-1),int_mb(k_range+p9b-1),6,4,2,3,1,5,-1.0d0)
      END IF
      IF ((h3b .le. h13b) .and. (h13b .lt. h4b) .and. (p9b .lt. p1b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab
     & * (h4b_2 - 1 + noab * (h13b_2 - 1 + noab * (h3b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h4b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p1b-1),5,4,2,3,1,6,1.0d0)
      END IF
      IF ((h13b .lt. h3b) .and. (h12b .le. p1b) .and. (p1b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab
     & * (h4b_2 - 1 + noab * (h3b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p1b-1),int_mb(k_range+p9b-1),6,4,1,3,2,5,1.0d0)
      END IF
      IF ((h13b .lt. h3b) .and. (p9b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab
     & * (h4b_2 - 1 + noab * (h3b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p1b-1),5,4,1,3,2,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lr_alpha_13_23_1'
     &,6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h3b .eq. h4b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_13_
     &23_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_13_
     &23_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_13_23_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),int_mb(k_range+p14b
     &-1),3,4,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (h12b - 1 + noab * (p14b - noab - 1 + nvab * (h
     &13b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lr_alpha_13_23_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_13_
     &23_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

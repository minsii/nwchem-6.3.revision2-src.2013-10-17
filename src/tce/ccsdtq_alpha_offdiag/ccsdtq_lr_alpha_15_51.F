      SUBROUTINE ccsdtq_lr_alpha_15_51(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_lr_alpha_15_51.F 19703 2010-10-29 17:30:23Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p13 p17 h15 h16 )_yttrbtra + = -2 * Sum ( h7 p10 ) * tra ( p10 p13 h7 h16 )_tra * i2 ( h7 p17 h15 p10 )_yttrb
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p13b
      INTEGER p17b
      INTEGER h16b
      INTEGER h15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER h7b
      INTEGER p13b_1
      INTEGER p10b_1
      INTEGER h16b_1
      INTEGER h7b_1
      INTEGER p17b_2
      INTEGER h7b_2
      INTEGER h15b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p13b = noab+1,noab+nvab
      DO p17b = noab+1,noab+nvab
      DO h16b = 1,noab
      DO h15b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p13b-1)+int_mb(k_spin+p17b
     &-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h16b-1).ne.8)) THEN
      IF (int_mb(k_spin+p13b-1)+int_mb(k_spin+p17b-1) .eq. int_mb(k_spin
     &+h15b-1)+int_mb(k_spin+h16b-1)) THEN
      IF (ieor(int_mb(k_sym+p13b-1),ieor(int_mb(k_sym+p17b-1),ieor(int_m
     &b(k_sym+h15b-1),int_mb(k_sym+h16b-1)))) .eq. ieor(irrep_y,ieor(irr
     &ep_t,ieor(irrep_trb,irrep_tra)))) THEN
      dimc = int_mb(k_range+p13b-1) * int_mb(k_range+p17b-1) * int_mb(k_
     &range+h15b-1) * int_mb(k_range+h16b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_15_51',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO h7b = 1,noab
      IF (int_mb(k_spin+p13b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin
     &+h16b-1)+int_mb(k_spin+h7b-1)) THEN
      IF (ieor(int_mb(k_sym+p13b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_m
     &b(k_sym+h16b-1),int_mb(k_sym+h7b-1)))) .eq. irrep_tra) THEN
      CALL TCE_RESTRICTED_4(p13b,p10b,h16b,h7b,p13b_1,p10b_1,h16b_1,h7b_
     &1)
      CALL TCE_RESTRICTED_4(p17b,h7b,h15b,p10b,p17b_2,h7b_2,h15b_2,p10b_
     &2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h7b-1)
      dima_sort = int_mb(k_range+p13b-1) * int_mb(k_range+h16b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p17b-1) * int_mb(k_range+h15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_15_51',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_15_51',2,MA_ERR)
      IF ((p10b .le. p13b) .and. (h7b .le. h16b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h16b_
     &1 - 1 + noab * (h7b_1 - 1 + noab * (p13b_1 - noab - 1 + nvab * (p1
     &0b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+h7b-1),int_mb(k_range+h16b
     &-1),4,2,3,1,1.0d0)
      END IF
      IF ((p10b .le. p13b) .and. (h16b .lt. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h16b_1 - 1 + noab * (p13b_1 - noab - 1 + nvab * (p1
     &0b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+h16b-1),int_mb(k_range+h7b
     &-1),3,2,4,1,-1.0d0)
      END IF
      IF ((p13b .lt. p10b) .and. (h7b .le. h16b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h16b_
     &1 - 1 + noab * (h7b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p1
     &3b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h16b
     &-1),4,1,3,2,-1.0d0)
      END IF
      IF ((p13b .lt. p10b) .and. (h16b .lt. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h16b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p1
     &3b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+h16b-1),int_mb(k_range+h7b
     &-1),3,1,4,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lr_alpha_15_51',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lr_alpha_15_51',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_15_51',5,MA_ERR)
      IF ((h7b .le. p17b) .and. (h15b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (p17b_2 - noab - 1 + nv
     &ab * (h7b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+p17b-1),int_mb(k_range+h15b-1),int_mb(k_range+p10b
     &-1),3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lr_alpha_15_51',6
     &,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_15_
     &51',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_15_
     &51',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_lr_alpha_15_51',9,MA_ERR)
      IF ((p13b .le. p17b) .and. (h15b .le. h16b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+p17b-1),int_mb(k_range+h16b-1),int_mb(k_range+p13
     &b-1),4,2,1,3,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h16b 
     &- 1 + noab * (h15b - 1 + noab * (p17b - noab - 1 + nvab * (p13b - 
     &noab - 1)))))
      END IF
      IF ((p13b .le. p17b) .and. (h16b .le. h15b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+p17b-1),int_mb(k_range+h16b-1),int_mb(k_range+p13
     &b-1),4,2,3,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h15b 
     &- 1 + noab * (h16b - 1 + noab * (p17b - noab - 1 + nvab * (p13b - 
     &noab - 1)))))
      END IF
      IF ((p17b .le. p13b) .and. (h15b .le. h16b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+p17b-1),int_mb(k_range+h16b-1),int_mb(k_range+p13
     &b-1),2,4,1,3,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h16b 
     &- 1 + noab * (h15b - 1 + noab * (p13b - noab - 1 + nvab * (p17b - 
     &noab - 1)))))
      END IF
      IF ((p17b .le. p13b) .and. (h16b .le. h15b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+p17b-1),int_mb(k_range+h16b-1),int_mb(k_range+p13
     &b-1),2,4,3,1,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h15b 
     &- 1 + noab * (h16b - 1 + noab * (p13b - noab - 1 + nvab * (p17b - 
     &noab - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lr_alpha_15_51',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lr_alpha_15_
     &51',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

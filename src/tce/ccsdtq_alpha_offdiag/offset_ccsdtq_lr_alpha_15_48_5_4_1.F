      SUBROUTINE OFFSET_ccsdtq_lr_alpha_15_48_5_4_1(l_a_offset,k_a_offse
     &t,size)
C     $Id: offset_ccsdtq_lr_alpha_15_48_5_4_1.F 19703 2010-10-29 17:30:23Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h3 h12 h18 h15 p1 p2 )_ytra
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h3b
      INTEGER h12b
      INTEGER h18b
      INTEGER h15b
      INTEGER p1b
      INTEGER p2b
      length = 0
      DO h3b = 1,noab
      DO h12b = h3b,noab
      DO h18b = h12b,noab
      DO h15b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h18b-
     &1) .eq. int_mb(k_spin+h15b-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p
     &2b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb
     &(k_sym+h18b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+p1b-1),
     &int_mb(k_sym+p2b-1)))))) .eq. ieor(irrep_y,irrep_tra)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h12b-
     &1)+int_mb(k_spin+h18b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+p1b-1
     &)+int_mb(k_spin+p2b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_lr_alpha_15_48_5_4_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h3b = 1,noab
      DO h12b = h3b,noab
      DO h18b = h12b,noab
      DO h15b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h18b-
     &1) .eq. int_mb(k_spin+h15b-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p
     &2b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb
     &(k_sym+h18b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+p1b-1),
     &int_mb(k_sym+p2b-1)))))) .eq. ieor(irrep_y,irrep_tra)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h12b-
     &1)+int_mb(k_spin+h18b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+p1b-1
     &)+int_mb(k_spin+p2b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p2b - noab - 1 + nvab * (p1b - noab - 1 
     &+ nvab * (h15b - 1 + noab * (h18b - 1 + noab * (h12b - 1 + noab * 
     &(h3b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h3b-1) * int_mb(k_range+h12b-1) * int
     &_mb(k_range+h18b-1) * int_mb(k_range+h15b-1) * int_mb(k_range+p1b-
     &1) * int_mb(k_range+p2b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END

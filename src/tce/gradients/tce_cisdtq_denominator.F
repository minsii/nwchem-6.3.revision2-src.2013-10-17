      SUBROUTINE tce_cisdtq_denominator(d_i0,d_t1,d_t2,d_t3,d_t4,d_y1,d_
     &y2,d_y3,d_y4,k_i0_offset,k_t1_offset,k_t2_offset,k_t3_offset,k_t4_
     &offset,k_y1_offset,k_y2_offset,k_y3_offset,k_y4_offset)
C     $Id: tce_cisdtq_denominator.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( )_yt + = 1 * Sum ( h2 p1 ) * t ( p1 h2 )_t * y ( h2 p1 )_y
C     i0 ( )_yt + = 1/4 * Sum ( h3 h4 p1 p2 ) * t ( p1 p2 h3 h4 )_t * y ( h3 h4 p1 p2 )_y
C     i0 ( )_yt + = 1/36 * Sum ( h4 h5 h6 p1 p2 p3 ) * t ( p1 p2 p3 h4 h5 h6 )_t * y ( h4 h5 h6 p1 p2 p3 )_y
C     i0 ( )_yt + = 1/576 * Sum ( h5 h6 h7 h8 p1 p2 p3 p4 ) * t ( p1 p2 p3 p4 h5 h6 h7 h8 )_t * y ( h5 h6 h7 h8 p1 p2 p3 p4 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "util.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_i0
      INTEGER k_i0_offset
      INTEGER d_t1
      INTEGER k_t1_offset
      INTEGER d_y1
      INTEGER k_y1_offset
      INTEGER d_t2
      INTEGER k_t2_offset
      INTEGER d_y2
      INTEGER k_y2_offset
      INTEGER d_t3
      INTEGER k_t3_offset
      INTEGER d_y3
      INTEGER k_y3_offset
      INTEGER d_t4
      INTEGER k_t4_offset
      INTEGER d_y4
      INTEGER k_y4_offset
      CALL tce_cisdtq_denominator_1(d_t1,k_t1_offset,d_y1,k_y1_offset,d_
     &i0,k_i0_offset)
      CALL tce_cisdtq_denominator_2(d_t2,k_t2_offset,d_y2,k_y2_offset,d_
     &i0,k_i0_offset)
      CALL tce_cisdtq_denominator_3(d_t3,k_t3_offset,d_y3,k_y3_offset,d_
     &i0,k_i0_offset)
      CALL tce_cisdtq_denominator_4(d_t4,k_t4_offset,d_y4,k_y4_offset,d_
     &i0,k_i0_offset)
      RETURN
      END
      SUBROUTINE tce_cisdtq_denominator_1(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: tce_cisdtq_denominator.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( )_yt + = 1 * Sum ( h2 p1 ) * t ( p1 h2 )_t * y ( h2 p1 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b
      INTEGER h2b
      INTEGER p1b_1
      INTEGER h2b_1
      INTEGER h2b_2
      INTEGER p1b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      IF (next.eq.count) THEN
      IF (0 .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = 1
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p1b = noab+1,noab+nvab
      DO h2b = 1,noab
      IF (int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),int_mb(k_sym+h2b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p1b,h2b,p1b_1,h2b_1)
      CALL TCE_RESTRICTED_2(h2b,p1b,h2b_2,p1b_2)
      dim_common = int_mb(k_range+p1b-1) * int_mb(k_range+h2b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &tce_cisdtq_denominator_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (p1b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+h2b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('tce_cisdtq_denominator_1
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &tce_cisdtq_denominator_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (h2b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p1b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('tce_cisdtq_denominator_1
     &',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &tce_cisdtq_denominator_1',9,MA_ERR)
      CALL TCE_SORT_0(dbl_mb(k_c_sort),dbl_mb(k_c),1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),0)
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('tce_cisdtq_denominator_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_1',11,MA_ERR)
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE tce_cisdtq_denominator_2(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: tce_cisdtq_denominator.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( )_yt + = 1/4 * Sum ( h3 h4 p1 p2 ) * t ( p1 p2 h3 h4 )_t * y ( h3 h4 p1 p2 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b
      INTEGER p2b
      INTEGER h3b
      INTEGER h4b
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER h3b_1
      INTEGER h4b_1
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER p1b_2
      INTEGER p2b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      IF (next.eq.count) THEN
      IF (0 .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = 1
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO h3b = 1,noab
      DO h4b = h3b,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &3b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h3b-1),int_mb(k_sym+h4b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p1b,p2b,h3b,h4b,p1b_1,p2b_1,h3b_1,h4b_1)
      CALL TCE_RESTRICTED_4(h3b,h4b,p1b,p2b,h3b_2,h4b_2,p1b_2,p2b_2)
      dim_common = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_m
     &b(k_range+h3b-1) * int_mb(k_range+h4b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &tce_cisdtq_denominator_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (p2b_1 - noab - 1 + nvab * (p1b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1)
     &,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('tce_cisdtq_denominator_2
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &tce_cisdtq_denominator_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p2b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab 
     &* (h3b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+p1b-1),int_mb(k_range+p2b-1)
     &,2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('tce_cisdtq_denominator_2
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p1b .eq. p2b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h3b .eq. h4b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(ns
     &ubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &tce_cisdtq_denominator_2',9,MA_ERR)
      CALL TCE_SORT_0(dbl_mb(k_c_sort),dbl_mb(k_c),1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),0)
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('tce_cisdtq_denominator_2
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_2',11,MA_ERR)
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE tce_cisdtq_denominator_3(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: tce_cisdtq_denominator.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( )_yt + = 1/36 * Sum ( h4 h5 h6 p1 p2 p3 ) * t ( p1 p2 p3 h4 h5 h6 )_t * y ( h4 h5 h6 p1 p2 p3 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b
      INTEGER p2b
      INTEGER p3b
      INTEGER h4b
      INTEGER h5b
      INTEGER h6b
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER p3b_1
      INTEGER h4b_1
      INTEGER h5b_1
      INTEGER h6b_1
      INTEGER h4b_2
      INTEGER h5b_2
      INTEGER h6b_2
      INTEGER p1b_2
      INTEGER p2b_2
      INTEGER p3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      IF (next.eq.count) THEN
      IF (0 .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = 1
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO p3b = p2b,noab+nvab
      DO h4b = 1,noab
      DO h5b = h4b,noab
      DO h6b = h5b,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1)+int_mb(k_spin+p3b-1)
     & .eq. int_mb(k_spin+h4b-1)+int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h5b-1),int
     &_mb(k_sym+h6b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p1b,p2b,p3b,h4b,h5b,h6b,p1b_1,p2b_1,p3b_1,h4
     &b_1,h5b_1,h6b_1)
      CALL TCE_RESTRICTED_6(h4b,h5b,h6b,p1b,p2b,p3b,h4b_2,h5b_2,h6b_2,p1
     &b_2,p2b_2,p3b_2)
      dim_common = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_m
     &b(k_range+p3b-1) * int_mb(k_range+h4b-1) * int_mb(k_range+h5b-1) *
     & int_mb(k_range+h6b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &tce_cisdtq_denominator_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h5b_1 - 1 + noab * (h4b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p2b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('tce_cisdtq_denominator_3
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &tce_cisdtq_denominator_3',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - noab - 1 + nvab * (p2b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h6b_2 - 1 + noab * (h5b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),3,2,1,6,5,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('tce_cisdtq_denominator_3
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p1b .eq. p2b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p2b .eq. p3b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h4b .eq. h5b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h5b .eq. h6b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,36.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort
     &),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),di
     &ma_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &tce_cisdtq_denominator_3',9,MA_ERR)
      CALL TCE_SORT_0(dbl_mb(k_c_sort),dbl_mb(k_c),1.0d0/36.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),0)
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('tce_cisdtq_denominator_3
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_3',11,MA_ERR)
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE tce_cisdtq_denominator_4(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: tce_cisdtq_denominator.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( )_yt + = 1/576 * Sum ( h5 h6 h7 h8 p1 p2 p3 p4 ) * t ( p1 p2 p3 p4 h5 h6 h7 h8 )_t * y ( h5 h6 h7 h8 p1 p2 p3 p4 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b
      INTEGER p2b
      INTEGER p3b
      INTEGER p4b
      INTEGER h5b
      INTEGER h6b
      INTEGER h7b
      INTEGER h8b
      INTEGER p1b_1
      INTEGER p2b_1
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER h5b_1
      INTEGER h6b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h5b_2
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER p1b_2
      INTEGER p2b_2
      INTEGER p3b_2
      INTEGER p4b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(4)
      INTEGER isuperp
      INTEGER nsubh(4)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      IF (next.eq.count) THEN
      IF (0 .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = 1
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p1b = noab+1,noab+nvab
      DO p2b = p1b,noab+nvab
      DO p3b = p2b,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h5b = 1,noab
      DO h6b = h5b,noab
      DO h7b = h6b,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p2b-1)+int_mb(k_spin+p3b-1)
     &+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-
     &1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h5b-1),ieo
     &r(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),int_mb(k_sym+h8b-1)
     &))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p1b,p2b,p3b,p4b,h5b,h6b,h7b,h8b,p1b_1,p2b_1,
     &p3b_1,p4b_1,h5b_1,h6b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_8(h5b,h6b,h7b,h8b,p1b,p2b,p3b,p4b,h5b_2,h6b_2,
     &h7b_2,h8b_2,p1b_2,p2b_2,p3b_2,p4b_2)
      dim_common = int_mb(k_range+p1b-1) * int_mb(k_range+p2b-1) * int_m
     &b(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_range+h5b-1) *
     & int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_range+h8
     &b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &tce_cisdtq_denominator_4',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p2b
     &_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('tce_cisdtq_denominator_4
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('tce_cisdtq_denominator_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &tce_cisdtq_denominator_4',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p4b_2
     & - noab - 1 + nvab * (p3b_2 - noab - 1 + nvab * (p2b_2 - noab - 1 
     &+ nvab * (p1b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h6b_2 - 1 + noab * (h5b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p2b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),4,3,2,1,8,7,6,5,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('tce_cisdtq_denominator_4
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      nsuperp(4) = 1
      isuperp = 1
      IF (p1b .eq. p2b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p2b .eq. p3b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p3b .eq. p4b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      nsubh(4) = 1
      isubh = 1
      IF (h5b .eq. h6b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h6b .eq. h7b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,576.0d0/FACTORIA
     &L(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIA
     &L(nsuperp(4))/FACTORIAL(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(ns
     &ubh(3))/FACTORIAL(nsubh(4)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b
     &_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &tce_cisdtq_denominator_4',9,MA_ERR)
      CALL TCE_SORT_0(dbl_mb(k_c_sort),dbl_mb(k_c),1.0d0/576.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),0)
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('tce_cisdtq_denominator_4
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('tce_cisdtq_denomina
     &tor_4',11,MA_ERR)
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

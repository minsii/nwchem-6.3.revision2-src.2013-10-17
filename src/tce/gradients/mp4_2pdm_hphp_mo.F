      SUBROUTINE mp4_2pdm_hphp_mo(d_i0,d_t22,d_y2,k_i0_offset,k_t22_of
     &fset,k_y2_offset)
C     $Id: mp4_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h3 p2 h1 p4 )_yt2 + = -1/2 * P( 4 ) * Sum ( h6 p5 ) * t2 ( p2 p5 h1 h6 )_t2 * y ( h3 h6 p4 p5 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "util.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_i0
      INTEGER k_i0_offset
      INTEGER d_t22
      INTEGER k_t22_offset
      INTEGER d_y2
      INTEGER k_y2_offset
      CALL mp4_2pdm_hphp_mo_1(d_t22,k_t22_offset,d_y2,k_y2_offset,d_i0
     &,k_i0_offset)
      RETURN
      END
      SUBROUTINE mp4_2pdm_hphp_mo_1(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     $Id: mp4_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h3 p2 h1 p4 )_yt2 + = -1/2 * P( 4 ) * Sum ( h6 p5 ) * t2 ( p2 p5 h1 h6 )_t2 * y ( h3 h6 p4 p5 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p2b
      INTEGER h3b
      INTEGER h1b
      INTEGER p4b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER h6b
      INTEGER p2b_1
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h6b_1
      INTEGER h3b_2
      INTEGER h6b_2
      INTEGER p4b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p2b = noab+1,noab+nvab
      DO h3b = 1,noab
      DO h1b = 1,noab
      DO p4b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+p2b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p4b-1).ne.8)) THEN
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p4b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+p2b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p4b-1)))) .eq. ieor(irrep_y,irrep_t2)) T
     &HEN
      dimc = int_mb(k_range+h3b-1) * int_mb(k_range+p2b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p4b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('mp4_2pdm_hphp_mo_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO h6b = 1,noab
      IF (int_mb(k_spin+p2b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h6b-1)) THEN
      IF (ieor(int_mb(k_sym+p2b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h6b-1)))) .eq. irrep_t2) THEN
      CALL TCE_RESTRICTED_4(p2b,p5b,h1b,h6b,p2b_1,p5b_1,h1b_1,h6b_1)
      CALL TCE_RESTRICTED_4(h3b,h6b,p4b,p5b,h3b_2,h6b_2,p4b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+h6b-1)
      dima_sort = int_mb(k_range+p2b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1) * int_mb(k_range+p4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('mp4_2pdm_hphp_mo_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &mp4_2pdm_hphp_mo_1',2,MA_ERR)
      IF ((p5b .lt. p2b) .and. (h6b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (p2b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1)
     &,4,2,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p2b) .and. (h1b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p2b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p2b-1),int_mb(k_range+h1b-1),int_mb(k_range+h6b-1)
     &,3,2,4,1,-1.0d0)
      END IF
      IF ((p2b .le. p5b) .and. (h6b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p2b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p2b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1)
     &,4,1,3,2,-1.0d0)
      END IF
      IF ((p2b .le. p5b) .and. (h1b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p2b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p2b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h6b-1)
     &,3,1,4,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('mp4_2pdm_hphp_mo_1',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('mp4_2pdm_hphp_mo_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &mp4_2pdm_hphp_mo_1',5,MA_ERR)
      IF ((h6b .lt. h3b) .and. (p5b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p4b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab 
     &* (h6b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+p5b-1),int_mb(k_range+p4b-1)
     &,4,2,1,3,1.0d0)
      END IF
      IF ((h6b .lt. h3b) .and. (p4b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p4b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab 
     &* (h6b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1)
     &,3,2,1,4,-1.0d0)
      END IF
      IF ((h3b .le. h6b) .and. (p5b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p4b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h6b_2 - 1 + noab 
     &* (h3b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+p5b-1),int_mb(k_range+p4b-1)
     &,4,1,2,3,-1.0d0)
      END IF
      IF ((h3b .le. h6b) .and. (p4b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p4b_2 - noab - 1 + nvab * (h6b_2 - 1 + noab 
     &* (h3b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1)
     &,3,1,2,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('mp4_2pdm_hphp_mo_1',6,
     &MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('mp4_2pdm_hphp_mo_
     &1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('mp4_2pdm_hphp_mo_
     &1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &mp4_2pdm_hphp_mo_1',9,MA_ERR)
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
c     &,int_mb(k_range+h3b-1),int_mb(k_range+h1b-1),int_mb(k_range+p2b-1)
c     &,2,4,3,1,-1.0d0/2.0d0)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h1b-1),int_mb(k_range+p2b-1)
     &,2,4,3,1,-2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p4b -
     & noab - 1 + nvab * (h1b - 1 + noab * (p2b - noab - 1 + nvab * (h3b
     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
c     &,int_mb(k_range+h3b-1),int_mb(k_range+h1b-1),int_mb(k_range+p2b-1)
c     &,2,4,1,3,1.0d0/2.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
c     & 1 + noab * (p4b - noab - 1 + nvab * (p2b - noab - 1 + nvab * (h3b
c     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
c     &,int_mb(k_range+h3b-1),int_mb(k_range+h1b-1),int_mb(k_range+p2b-1)
c     &,4,2,3,1,1.0d0/2.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p4b -
c     & noab - 1 + nvab * (h1b - 1 + noab * (h3b - 1 + noab * (p2b - noab
c     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
c     &,int_mb(k_range+h3b-1),int_mb(k_range+h1b-1),int_mb(k_range+p2b-1)
c     &,4,2,1,3,-1.0d0/2.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
c     & 1 + noab * (p4b - noab - 1 + nvab * (h3b - 1 + noab * (p2b - noab
c     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('mp4_2pdm_hphp_mo_1',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('mp4_2pdm_hphp_mo_
     &1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

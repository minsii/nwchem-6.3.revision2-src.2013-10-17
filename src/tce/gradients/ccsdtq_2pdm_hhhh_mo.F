      SUBROUTINE ccsdtq_2pdm_hhhh_mo(d_i0,d_t1,d_t2,d_t3,d_t4,d_y2,d_y3,
     &d_y4,k_i0_offset,k_t1_offset,k_t2_offset,k_t3_offset,k_t4_offset,k
     &_y2_offset,k_y3_offset,k_y4_offset)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h3 h4 h1 h2 )_yt + = 1/2 * Sum ( p5 p6 ) * t ( p5 p6 h1 h2 )_t * y ( h3 h4 p5 p6 )_y
C     i0 ( h3 h4 h1 h2 )_yt + = 1/6 * Sum ( h8 p5 p6 p7 ) * t ( p5 p6 p7 h1 h2 h8 )_t * y ( h3 h4 h8 p5 p6 p7 )_y
C     i0 ( h3 h4 h1 h2 )_yt + = 1/48 * Sum ( h9 h10 p5 p6 p7 p8 ) * t ( p5 p6 p7 p8 h1 h2 h9 h10 )_t * y ( h3 h4 h9 h10 p5 p6 p7 p8 )_y
C     i0 ( h2 h3 h1 h4 )_ytt + = -1/2 * P( 2 ) * Sum ( p11 ) * t ( p11 h1 )_t * i1 ( h2 h3 h4 p11 )_yt
C         i1 ( h2 h3 h1 p11 )_yt + = 1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h2 h3 p6 p11 )_y
C         i1 ( h2 h3 h1 p11 )_yt + = -1 * Sum ( h7 p5 p6 ) * t ( p5 p6 h1 h7 )_t * y ( h2 h3 h7 p5 p6 p11 )_y
C         i1 ( h2 h3 h1 p11 )_yt + = 1/6 * Sum ( h8 h9 p5 p6 p7 ) * t ( p5 p6 p7 h1 h8 h9 )_t * y ( h2 h3 h8 h9 p5 p6 p7 p11 )_y
C     i0 ( h2 h3 h1 h4 )_ytt + = -1/8 * P( 2 ) * Sum ( h7 p5 p6 ) * t ( p5 p6 h1 h7 )_t * i1 ( h2 h3 h7 h4 p5 p6 )_yt
C         i1 ( h2 h3 h7 h1 p5 p6 )_yt + = 1 * Sum ( h10 p8 p9 ) * t ( p8 p9 h1 h10 )_t * y ( h2 h3 h7 h10 p5 p6 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "util.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_i0
      INTEGER k_i0_offset
      INTEGER d_t2
      INTEGER k_t2_offset
      INTEGER d_y2
      INTEGER k_y2_offset
      INTEGER d_t3
      INTEGER k_t3_offset
      INTEGER d_y3
      INTEGER k_y3_offset
      INTEGER d_t4
      INTEGER k_t4_offset
      INTEGER d_y4
      INTEGER k_y4_offset
      INTEGER d_t1
      INTEGER k_t1_offset
      INTEGER d_i1
      INTEGER k_i1_offset
      INTEGER l_i1_offset
      INTEGER size_i1
      CHARACTER*255 filename
      CALL ccsdtq_2pdm_hhhh_mo_1(d_t2,k_t2_offset,d_y2,k_y2_offset,d_i0,
     &k_i0_offset)
      CALL ccsdtq_2pdm_hhhh_mo_2(d_t3,k_t3_offset,d_y3,k_y3_offset,d_i0,
     &k_i0_offset)
      CALL ccsdtq_2pdm_hhhh_mo_3(d_t4,k_t4_offset,d_y4,k_y4_offset,d_i0,
     &k_i0_offset)
      CALL OFFSET_ccsdtq_2pdm_hhhh_mo_4_1(l_i1_offset,k_i1_offset,size_i
     &1)
      CALL TCE_FILENAME('ccsdtq_2pdm_hhhh_mo_4_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_hhhh_mo_4_1(d_t1,k_t1_offset,d_y2,k_y2_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_hhhh_mo_4_2(d_t2,k_t2_offset,d_y3,k_y3_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_hhhh_mo_4_3(d_t3,k_t3_offset,d_y4,k_y4_offset,d_i
     &1,k_i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_hhhh_mo_4(d_t1,k_t1_offset,d_i1,k_i1_offset,d_i0,
     &k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_hhhh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_hhhh_mo_5_1(l_i1_offset,k_i1_offset,size_i
     &1)
      CALL TCE_FILENAME('ccsdtq_2pdm_hhhh_mo_5_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_hhhh_mo_5_1(d_t2,k_t2_offset,d_y4,k_y4_offset,d_i
     &1,k_i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_hhhh_mo_5(d_t2,k_t2_offset,d_i1,k_i1_offset,d_i0,
     &k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_hhhh
     &_mo',-1,MA_ERR)
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_hhhh_mo_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h3 h4 h1 h2 )_yt + = 1/2 * Sum ( p5 p6 ) * t ( p5 p6 h1 h2 )_t * y ( h3 h4 p5 p6 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h3b
      INTEGER h4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h3b = 1,noab
      DO h4b = h3b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h1b,h2b,p5b_1,p6b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(h3b,h4b,p5b,p6b,h3b_2,h4b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_1',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab 
     &* (h3b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_1',6
     &,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,2,1,4,3,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h4b - 1 + noab * (h3b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_1',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_hhhh_mo_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h3 h4 h1 h2 )_yt + = 1/6 * Sum ( h8 p5 p6 p7 ) * t ( p5 p6 p7 h1 h2 h8 )_t * y ( h3 h4 h8 p5 p6 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h3b
      INTEGER h4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h8b_1
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER h8b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h3b = 1,noab
      DO h4b = h3b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p5b,p6b,p7b,h1b,h2b,h8b,p5b_1,p6b_1,p7b_1,h1
     &b_1,h2b_1,h8b_1)
      CALL TCE_RESTRICTED_6(h3b,h4b,h8b,p5b,p6b,p7b,h3b_2,h4b_2,h8b_2,p5
     &b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_2',2,MA_ERR)
      IF ((h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),6,4,5,3,2,1,-1.0d0)
      END IF
      IF ((h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),5,4,6,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_2',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_2',5,MA_ERR)
      IF ((h8b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h3b_2 - 1 + noab * (h8b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),3,2,1,6,5,4,1.0d0)
      END IF
      IF ((h3b .le. h8b) .and. (h8b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h8b_2 - 1 + noab * (h3b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),3,1,2,6,5,4,-1.0d0)
      END IF
      IF ((h4b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h8b_2 - 1 + noab * (h4b_2 - 1 + noab * (h3b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),2,1,3,6,5,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_2',6
     &,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,6.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3)),dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,2,1,4,3,1.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h4b - 1 + noab * (h3b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_2',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_hhhh_mo_3(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h3 h4 h1 h2 )_yt + = 1/48 * Sum ( h9 h10 p5 p6 p7 p8 ) * t ( p5 p6 p7 p8 h1 h2 h9 h10 )_t * y ( h3 h4 h9 h10 p5 p6 p7 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h3b
      INTEGER h4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER h10b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(4)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h3b = 1,noab
      DO h4b = h3b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-
     &1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h9b-1),int_mb(k_sym+h10b-1
     &)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p5b,p6b,p7b,p8b,h1b,h2b,h9b,h10b,p5b_1,p6b_1
     &,p7b_1,p8b_1,h1b_1,h2b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_8(h3b,h4b,h9b,h10b,p5b,p6b,p7b,p8b,h3b_2,h4b_2
     &,h9b_2,h10b_2,p5b_2,p6b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1) *
     & int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_3',2,MA_ERR)
      IF ((h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),8,7,6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h9b .lt. h1b) .and. (h1b .le. h10b) .and. (h10b .lt. h2b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),8,6,7,5,4,3,2,1,-1.0d0)
      END IF
      IF ((h9b .lt. h1b) .and. (h2b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),7,6,8,5,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h9b) .and. (h10b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),8,5,7,6,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h9b) .and. (h9b .lt. h2b) .and. (h2b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),7,5,8,6,4,3,2,1,-1.0d0)
      END IF
      IF ((h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),6,5,8,7,4,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_3',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_3',5,MA_ERR)
      IF ((h10b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h3b-1),int_mb(k_range+h4b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),int_mb(k_range+p8b-1),4,3,2,1,8,7,6,5,1.0d0)
      END IF
      IF ((h9b .lt. h3b) .and. (h3b .le. h10b) .and. (h10b .lt. h4b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h10b-1),int_mb(k_range+h4b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),int_mb(k_range+p8b-1),4,2,3,1,8,7,6,5,-1.0d0)
      END IF
      IF ((h9b .lt. h3b) .and. (h4b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h4b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h4b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),int_mb(k_range+p8b-1),3,2,4,1,8,7,6,5,1.0d0)
      END IF
      IF ((h3b .le. h9b) .and. (h10b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h9b_2 - 1 + noab * (h3b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h4b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),int_mb(k_range+p8b-1),4,1,3,2,8,7,6,5,1.0d0)
      END IF
      IF ((h3b .le. h9b) .and. (h9b .lt. h4b) .and. (h4b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h4b_2 - 
     &1 + noab * (h9b_2 - 1 + noab * (h3b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),int_mb(k_range+p8b-1),3,1,4,2,8,7,6,5,-1.0d0)
      END IF
      IF ((h4b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 - 
     &1 + noab * (h4b_2 - 1 + noab * (h3b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),int_mb(k_range+p8b-1),2,1,4,3,8,7,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_3',6
     &,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      nsuperp(4) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,48.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsuperp(4))/FACTORIAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_so
     &rt),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),
     &dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,2,1,4,3,1.0d0/48.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h4b - 1 + noab * (h3b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_3',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_hhhh_mo_4(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h2 h3 h1 h4 )_ytt + = -1/2 * P( 2 ) * Sum ( p11 ) * t ( p11 h1 )_t * i1 ( h2 h3 h4 p11 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER h3b
      INTEGER h1b
      INTEGER h4b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p11b
      INTEGER p11b_1
      INTEGER h1b_1
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h1b = 1,noab
      DO h4b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h4b-1).ne.8)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h4b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h4b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+p11b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p11b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p11b,h1b,p11b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h2b,h3b,h4b,p11b,h2b_2,h3b_2,h4b_2,p11b_2)
      dim_common = int_mb(k_range+p11b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb
     &(k_range+h4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p11b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (h4b_2 - 1 + noab * (h3b_2 - 1 + noab * (h2b
     &_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h4b-1),int_mb(k_range+p11b-1
     &),3,2,1,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4',6
     &,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4',9,MA_ERR)
      IF ((h1b .le. h4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,3,2,4,1,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h4b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (h2b - 1)))))
      END IF
      IF ((h4b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,3,2,1,4,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h4b - 1 + noab * (h3b - 1 + noab * (h2b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_hhhh_mo_4_1(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h2 h3 h1 p11 )_yt + = 1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h2 h3 p6 p11 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER h3b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER p11b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_y,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      IF (int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p6b,h1b,p6b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h2b,h3b,p11b,p6b,h2b_2,h3b_2,p11b_2,p6b_2)
      dim_common = int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb
     &(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p6b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_1'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4_1',5,MA_ERR)
      IF ((p6b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab
     & * (h2b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p11b-1
     &),4,2,1,3,1.0d0)
      END IF
      IF ((p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab
     & * (h2b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+p11b-1),int_mb(k_range+p6b-1
     &),3,2,1,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_1'
     &,6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),3,2,4,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h3b - 1 + noab * (h2b - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_hhhh_mo_4_1(l_a_offset,k_a_offset,si
     &ze)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h2 h3 h1 p11 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h2b
      INTEGER h3b
      INTEGER h1b
      INTEGER p11b
      length = 0
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_y,irrep_t)) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_y,irrep_t)) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p11b - noab - 1 + nvab * (h1b - 1 + noab
     & * (h3b - 1 + noab * (h2b - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p11b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_hhhh_mo_4_2(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h2 h3 h1 p11 )_yt + = -1 * Sum ( h7 p5 p6 ) * t ( p5 p6 h1 h7 )_t * y ( h2 h3 h7 p5 p6 p11 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER h3b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h7b_1
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER h7b_2
      INTEGER p11b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_y,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h7b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h7b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h1b,h7b,p5b_1,p6b_1,h1b_1,h7b_1)
      CALL TCE_RESTRICTED_6(h2b,h3b,h7b,p11b,p5b,p6b,h2b_2,h3b_2,h7b_2,p
     &11b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb
     &(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4_2',2,MA_ERR)
      IF ((h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h1b-1),int_mb(k_range+h7b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_2'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4_2',5,MA_ERR)
      IF ((h7b .lt. h2b) .and. (p6b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p11b-1),6,3,2,1,5,4,1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (p5b .le. p11b) .and. (p11b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p6b-1),5,3,2,1,6,4,-1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (p11b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+p11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .lt. h3b) .and. (p6b .le. p11b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h3b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p11b-1),6,3,1,2,5,4,-1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .lt. h3b) .and. (p5b .le. p11b) .and
     &. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h3b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p6b-1),5,3,1,2,6,4,1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .lt. h3b) .and. (p11b .lt. p5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h3b-1),int_mb(k_range+p11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,1,2,6,5,-1.0d0)
      END IF
      IF ((h3b .le. h7b) .and. (p6b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p11b-1),6,2,1,3,5,4,1.0d0)
      END IF
      IF ((h3b .le. h7b) .and. (p5b .le. p11b) .and. (p11b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p6b-1),5,2,1,3,6,4,-1.0d0)
      END IF
      IF ((h3b .le. h7b) .and. (p11b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h7b-1),int_mb(k_range+p11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,2,1,3,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_2'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),3,2,4,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h3b - 1 + noab * (h2b - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_2'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_hhhh_mo_4_3(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h2 h3 h1 p11 )_yt + = 1/6 * Sum ( h8 h9 p5 p6 p7 ) * t ( p5 p6 p7 h1 h8 h9 )_t * y ( h2 h3 h8 h9 p5 p6 p7 p11 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER h3b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p11b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_y,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h8b-1),int
     &_mb(k_sym+h9b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p5b,p6b,p7b,h1b,h8b,h9b,p5b_1,p6b_1,p7b_1,h1
     &b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_8(h2b,h3b,h8b,h9b,p11b,p5b,p6b,p7b,h2b_2,h3b_2
     &,h8b_2,h9b_2,p11b_2,p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb
     &(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4_3',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),5,6,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),4,6,5,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_3'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4_3',5,MA_ERR)
      IF ((h9b .lt. h2b) .and. (p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 
     &1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p11b-1),8,4,3,2,1,7,6,5,1.0d0)
      END IF
      IF ((h9b .lt. h2b) .and. (p6b .le. p11b) .and. (p11b .lt. p7b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 
     &1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p11b-1
     &),int_mb(k_range+p7b-1),7,4,3,2,1,8,6,5,-1.0d0)
      END IF
      IF ((h9b .lt. h2b) .and. (p5b .le. p11b) .and. (p11b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 
     &1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),6,4,3,2,1,8,7,5,1.0d0)
      END IF
      IF ((h9b .lt. h2b) .and. (p11b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p11b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 
     &1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),5,4,3,2,1,8,7,6,-1.0d0)
      END IF
      IF ((h8b .lt. h2b) .and. (h2b .le. h9b) .and. (h9b .lt. h3b) .and.
     & (p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h9b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h9b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p11b-1),8,4,2,3,1,7,6,5,-1.0d0)
      END IF
      IF ((h8b .lt. h2b) .and. (h2b .le. h9b) .and. (h9b .lt. h3b) .and.
     & (p6b .le. p11b) .and. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h9b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h9b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p11b-1
     &),int_mb(k_range+p7b-1),7,4,2,3,1,8,6,5,1.0d0)
      END IF
      IF ((h8b .lt. h2b) .and. (h2b .le. h9b) .and. (h9b .lt. h3b) .and.
     & (p5b .le. p11b) .and. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h9b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h9b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),6,4,2,3,1,8,7,5,-1.0d0)
      END IF
      IF ((h8b .lt. h2b) .and. (h2b .le. h9b) .and. (h9b .lt. h3b) .and.
     & (p11b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p11b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h9b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h9b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),5,4,2,3,1,8,7,6,1.0d0)
      END IF
      IF ((h8b .lt. h2b) .and. (h3b .le. h9b) .and. (p7b .le. p11b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p11b-1),8,3,2,4,1,7,6,5,1.0d0)
      END IF
      IF ((h8b .lt. h2b) .and. (h3b .le. h9b) .and. (p6b .le. p11b) .and
     &. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p11b-1
     &),int_mb(k_range+p7b-1),7,3,2,4,1,8,6,5,-1.0d0)
      END IF
      IF ((h8b .lt. h2b) .and. (h3b .le. h9b) .and. (p5b .le. p11b) .and
     &. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),6,3,2,4,1,8,7,5,1.0d0)
      END IF
      IF ((h8b .lt. h2b) .and. (h3b .le. h9b) .and. (p11b .lt. p5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p11b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),5,3,2,4,1,8,7,6,-1.0d0)
      END IF
      IF ((h2b .le. h8b) .and. (h9b .lt. h3b) .and. (p7b .le. p11b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h9b_2 - 
     &1 + noab * (h8b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p11b-1),8,4,1,3,2,7,6,5,1.0d0)
      END IF
      IF ((h2b .le. h8b) .and. (h9b .lt. h3b) .and. (p6b .le. p11b) .and
     &. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h9b_2 - 
     &1 + noab * (h8b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p11b-1
     &),int_mb(k_range+p7b-1),7,4,1,3,2,8,6,5,-1.0d0)
      END IF
      IF ((h2b .le. h8b) .and. (h9b .lt. h3b) .and. (p5b .le. p11b) .and
     &. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h9b_2 - 
     &1 + noab * (h8b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),6,4,1,3,2,8,7,5,1.0d0)
      END IF
      IF ((h2b .le. h8b) .and. (h9b .lt. h3b) .and. (p11b .lt. p5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p11b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h9b_2 - 
     &1 + noab * (h8b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),5,4,1,3,2,8,7,6,-1.0d0)
      END IF
      IF ((h2b .le. h8b) .and. (h8b .lt. h3b) .and. (h3b .le. h9b) .and.
     & (p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h8b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h3b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p11b-1),8,3,1,4,2,7,6,5,-1.0d0)
      END IF
      IF ((h2b .le. h8b) .and. (h8b .lt. h3b) .and. (h3b .le. h9b) .and.
     & (p6b .le. p11b) .and. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h8b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h3b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p11b-1
     &),int_mb(k_range+p7b-1),7,3,1,4,2,8,6,5,1.0d0)
      END IF
      IF ((h2b .le. h8b) .and. (h8b .lt. h3b) .and. (h3b .le. h9b) .and.
     & (p5b .le. p11b) .and. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h8b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h3b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),6,3,1,4,2,8,7,5,-1.0d0)
      END IF
      IF ((h2b .le. h8b) .and. (h8b .lt. h3b) .and. (h3b .le. h9b) .and.
     & (p11b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p11b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h8b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h3b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),5,3,1,4,2,8,7,6,1.0d0)
      END IF
      IF ((h3b .le. h8b) .and. (p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p11b-1),8,2,1,4,3,7,6,5,1.0d0)
      END IF
      IF ((h3b .le. h8b) .and. (p6b .le. p11b) .and. (p11b .lt. p7b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p11b-1
     &),int_mb(k_range+p7b-1),7,2,1,4,3,8,6,5,-1.0d0)
      END IF
      IF ((h3b .le. h8b) .and. (p5b .le. p11b) .and. (p11b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),6,2,1,4,3,8,7,5,1.0d0)
      END IF
      IF ((h3b .le. h8b) .and. (p11b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p11b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p7b-1),5,2,1,4,3,8,7,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_3'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_4_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),3,2,4,1,1.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h3b - 1 + noab * (h2b - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_4_3'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_4_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_hhhh_mo_5(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h2 h3 h1 h4 )_ytt + = -1/8 * P( 2 ) * Sum ( h7 p5 p6 ) * t ( p5 p6 h1 h7 )_t * i1 ( h2 h3 h7 h4 p5 p6 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER h3b
      INTEGER h1b
      INTEGER h4b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h7b_1
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER h7b_2
      INTEGER h4b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h1b = 1,noab
      DO h4b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h4b-1).ne.8)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h4b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h4b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_5',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h7b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h7b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h1b,h7b,p5b_1,p6b_1,h1b_1,h7b_1)
      CALL TCE_RESTRICTED_6(h2b,h3b,h7b,h4b,p5b,p6b,h2b_2,h3b_2,h7b_2,h4
     &b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb
     &(k_range+h4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_5',2,MA_ERR)
      IF ((h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h1b-1),int_mb(k_range+h7b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_5',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_5',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab 
     &* (h7b_2 - 1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h7b-1),int_mb(k_range+h4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,2,1,3,6,5,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_5',6
     &,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_5',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_5',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_5',9,MA_ERR)
      IF ((h1b .le. h4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,3,2,4,1,-1.0d0/8.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h4b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (h2b - 1)))))
      END IF
      IF ((h4b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,3,2,1,4,1.0d0/8.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h4b - 1 + noab * (h3b - 1 + noab * (h2b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_5',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_5',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_hhhh_mo_5_1(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h2 h3 h7 h1 p5 p6 )_yt + = 1 * Sum ( h10 p8 p9 ) * t ( p8 p9 h1 h10 )_t * y ( h2 h3 h7 h10 p5 p6 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER h3b
      INTEGER h7b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER h10b
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h10b_1
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER h7b_2
      INTEGER h10b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h7b = 1,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1
     &)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),ieor(int_mb(
     &k_sym+h7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb(k_ra
     &nge+h7b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * int_m
     &b(k_range+p6b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_5_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p8b,p9b,h1b,h10b,p8b_1,p9b_1,h1b_1,h10b_1)
      CALL TCE_RESTRICTED_8(h2b,h3b,h7b,h10b,p5b,p6b,p8b,p9b,h2b_2,h3b_2
     &,h7b_2,h10b_2,p5b_2,p6b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_m
     &b(k_range+h10b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb
     &(k_range+h7b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_5_1',2,MA_ERR)
      IF ((h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_5_1'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_hhhh_mo_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_5_1',5,MA_ERR)
      IF ((h10b .lt. h7b) .and. (h7b .lt. h2b) .and. (p9b .lt. p5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,2,4,3,1,6,5,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .lt. h2b) .and. (p8b .lt. p5b) .and
     &. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,2,4,3,1,7,5,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .lt. h2b) .and. (p8b .lt. p5b) .and
     &. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,2,4,3,1,8,5,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .lt. h2b) .and. (p5b .le. p8b) .and
     &. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,2,4,3,1,7,6,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .lt. h2b) .and. (p5b .le. p8b) .and
     &. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,2,4,3,1,8,6,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .lt. h2b) .and. (p6b .le. p8b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,2,4,3,1,8,7,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .lt. h2b) .and. (p9b .lt. p5b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,1,4,3,2,6,5,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .lt. h2b) .and. (p8b .lt. p5b) .an
     &d. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,1,4,3,2,7,5,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .lt. h2b) .and. (p8b .lt. p5b) .an
     &d. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,1,4,3,2,8,5,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .lt. h2b) .and. (p5b .le. p8b) .an
     &d. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,1,4,3,2,7,6,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .lt. h2b) .and. (p5b .le. p8b) .an
     &d. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,1,4,3,2,8,6,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .lt. h2b) .and. (p6b .le. p8b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h2b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,1,4,3,2,8,7,1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h2b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,1,4,2,3,6,5,-1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h2b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p8b .lt. p5b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,1,4,2,3,7,5,1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h2b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p8b .lt. p5b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,1,4,2,3,8,5,-1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h2b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p5b .le. p8b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,1,4,2,3,7,6,-1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h2b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p5b .le. p8b) .and. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,1,4,2,3,8,6,1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h2b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,1,4,2,3,8,7,-1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h3b .le. h10b) .and. (p9b .lt. p5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,1,3,2,4,6,5,1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h3b .le. h10b) .and. (p8b .lt. p5b) .and
     &. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,1,3,2,4,7,5,-1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h3b .le. h10b) .and. (p8b .lt. p5b) .and
     &. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,1,3,2,4,8,5,1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h3b .le. h10b) .and. (p5b .le. p8b) .and
     &. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,1,3,2,4,7,6,1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h3b .le. h10b) .and. (p5b .le. p8b) .and
     &. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,1,3,2,4,8,6,-1.0d0)
      END IF
      IF ((h7b .lt. h2b) .and. (h3b .le. h10b) .and. (p6b .le. p8b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h2b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,1,3,2,4,8,7,1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h2b .le. h7b) .and. (h7b .lt. h3b) .and
     &. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,3,4,2,1,6,5,1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h2b .le. h7b) .and. (h7b .lt. h3b) .and
     &. (p8b .lt. p5b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,3,4,2,1,7,5,-1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h2b .le. h7b) .and. (h7b .lt. h3b) .and
     &. (p8b .lt. p5b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,3,4,2,1,8,5,1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h2b .le. h7b) .and. (h7b .lt. h3b) .and
     &. (p5b .le. p8b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,3,4,2,1,7,6,1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h2b .le. h7b) .and. (h7b .lt. h3b) .and
     &. (p5b .le. p8b) .and. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,3,4,2,1,8,6,-1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h2b .le. h7b) .and. (h7b .lt. h3b) .and
     &. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,3,4,2,1,8,7,1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h7b) .and. (h7b .lt. h3b) .an
     &d. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,3,4,1,2,6,5,-1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h7b) .and. (h7b .lt. h3b) .an
     &d. (p8b .lt. p5b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,3,4,1,2,7,5,1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h7b) .and. (h7b .lt. h3b) .an
     &d. (p8b .lt. p5b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,3,4,1,2,8,5,-1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h7b) .and. (h7b .lt. h3b) .an
     &d. (p5b .le. p8b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,3,4,1,2,7,6,-1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h7b) .and. (h7b .lt. h3b) .an
     &d. (p5b .le. p8b) .and. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,3,4,1,2,8,6,1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h7b) .and. (h7b .lt. h3b) .an
     &d. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h7b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,3,4,1,2,8,7,-1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,2,4,1,3,6,5,1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p8b .lt. p5b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,2,4,1,3,7,5,-1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p8b .lt. p5b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,2,4,1,3,8,5,1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p5b .le. p8b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,2,4,1,3,7,6,1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p5b .le. p8b) .and. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,2,4,1,3,8,6,-1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .le. h10b) .and. (h10b .lt. h3b) .an
     &d. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,2,4,1,3,8,7,1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .lt. h3b) .and. (h3b .le. h10b) .and
     &. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,2,3,1,4,6,5,-1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .lt. h3b) .and. (h3b .le. h10b) .and
     &. (p8b .lt. p5b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,2,3,1,4,7,5,1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .lt. h3b) .and. (h3b .le. h10b) .and
     &. (p8b .lt. p5b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,2,3,1,4,8,5,-1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .lt. h3b) .and. (h3b .le. h10b) .and
     &. (p5b .le. p8b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,2,3,1,4,7,6,-1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .lt. h3b) .and. (h3b .le. h10b) .and
     &. (p5b .le. p8b) .and. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,2,3,1,4,8,6,1.0d0)
      END IF
      IF ((h2b .le. h7b) .and. (h7b .lt. h3b) .and. (h3b .le. h10b) .and
     &. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h3b_2 - 
     &1 + noab * (h7b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,2,3,1,4,8,7,-1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h3b .le. h7b) .and. (p9b .lt. p5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,4,3,2,1,6,5,-1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h3b .le. h7b) .and. (p8b .lt. p5b) .and
     &. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,4,3,2,1,7,5,1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h3b .le. h7b) .and. (p8b .lt. p5b) .and
     &. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,4,3,2,1,8,5,-1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h3b .le. h7b) .and. (p5b .le. p8b) .and
     &. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,4,3,2,1,7,6,-1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h3b .le. h7b) .and. (p5b .le. p8b) .and
     &. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,4,3,2,1,8,6,1.0d0)
      END IF
      IF ((h10b .lt. h2b) .and. (h3b .le. h7b) .and. (p6b .le. p8b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h2b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,4,3,2,1,8,7,-1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h3b) .and. (h3b .le. h7b) .an
     &d. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,4,3,1,2,6,5,1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h3b) .and. (h3b .le. h7b) .an
     &d. (p8b .lt. p5b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,4,3,1,2,7,5,-1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h3b) .and. (h3b .le. h7b) .an
     &d. (p8b .lt. p5b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,4,3,1,2,8,5,1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h3b) .and. (h3b .le. h7b) .an
     &d. (p5b .le. p8b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,4,3,1,2,7,6,1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h3b) .and. (h3b .le. h7b) .an
     &d. (p5b .le. p8b) .and. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,4,3,1,2,8,6,-1.0d0)
      END IF
      IF ((h2b .le. h10b) .and. (h10b .lt. h3b) .and. (h3b .le. h7b) .an
     &d. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h3b_2 - 1
     & + noab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,4,3,1,2,8,7,1.0d0)
      END IF
      IF ((h3b .le. h10b) .and. (h10b .lt. h7b) .and. (p9b .lt. p5b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,4,2,1,3,6,5,-1.0d0)
      END IF
      IF ((h3b .le. h10b) .and. (h10b .lt. h7b) .and. (p8b .lt. p5b) .an
     &d. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,4,2,1,3,7,5,1.0d0)
      END IF
      IF ((h3b .le. h10b) .and. (h10b .lt. h7b) .and. (p8b .lt. p5b) .an
     &d. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,4,2,1,3,8,5,-1.0d0)
      END IF
      IF ((h3b .le. h10b) .and. (h10b .lt. h7b) .and. (p5b .le. p8b) .an
     &d. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,4,2,1,3,7,6,-1.0d0)
      END IF
      IF ((h3b .le. h10b) .and. (h10b .lt. h7b) .and. (p5b .le. p8b) .an
     &d. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,4,2,1,3,8,6,1.0d0)
      END IF
      IF ((h3b .le. h10b) .and. (h10b .lt. h7b) .and. (p6b .le. p8b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h10b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,4,2,1,3,8,7,-1.0d0)
      END IF
      IF ((h3b .le. h7b) .and. (h7b .le. h10b) .and. (p9b .lt. p5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),8,7,3,2,1,4,6,5,1.0d0)
      END IF
      IF ((h3b .le. h7b) .and. (h7b .le. h10b) .and. (p8b .lt. p5b) .and
     &. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,6,3,2,1,4,7,5,-1.0d0)
      END IF
      IF ((h3b .le. h7b) .and. (h7b .le. h10b) .and. (p8b .lt. p5b) .and
     &. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,6,3,2,1,4,8,5,1.0d0)
      END IF
      IF ((h3b .le. h7b) .and. (h7b .le. h10b) .and. (p5b .le. p8b) .and
     &. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),int_mb(k_range+p6b-1),8,5,3,2,1,4,7,6,1.0d0)
      END IF
      IF ((h3b .le. h7b) .and. (h7b .le. h10b) .and. (p5b .le. p8b) .and
     &. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p9b-1),7,5,3,2,1,4,8,6,-1.0d0)
      END IF
      IF ((h3b .le. h7b) .and. (h7b .le. h10b) .and. (p6b .le. p8b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),6,5,3,2,1,4,8,7,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_5_1'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_5_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_5_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_hhhh_mo_5_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p6b -
     & noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h7b
     & - 1 + noab * (h3b - 1 + noab * (h2b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_5_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo
     &_5_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_hhhh_mo_5_1(l_a_offset,k_a_offset,si
     &ze)
C     $Id: ccsdtq_2pdm_hhhh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h2 h3 h7 h1 p5 p6 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h2b
      INTEGER h3b
      INTEGER h7b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      length = 0
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h7b = 1,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),ieor(int_mb(
     &k_sym+h7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1
     &)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_hhhh_mo_5_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h7b = 1,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),ieor(int_mb(
     &k_sym+h7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1
     &)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p6b - noab - 1 + nvab * (p5b - noab - 1 
     &+ nvab * (h1b - 1 + noab * (h7b - 1 + noab * (h3b - 1 + noab * (h2
     &b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_
     &mb(k_range+h7b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) 
     &* int_mb(k_range+p6b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END

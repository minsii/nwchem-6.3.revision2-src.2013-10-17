      SUBROUTINE ccsdtq_2pdm_pphh_mo(d_i0,d_t1,d_t2,d_t3,d_t4,d_y1,d_y2,
     &d_y3,d_y4,k_i0_offset,k_t1_offset,k_t2_offset,k_t3_offset,k_t4_off
     &set,k_y1_offset,k_y2_offset,k_y3_offset,k_y4_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_t + = 1 * t ( p3 p4 h1 h2 )_t
C     i0 ( p3 p4 h1 h2 )_yt + = 1 * Sum ( h6 p5 ) * t ( p3 p4 p5 h1 h2 h6 )_t * y ( h6 p5 )_y
C     i0 ( p3 p4 h1 h2 )_yt + = 1/4 * Sum ( h7 h8 p5 p6 ) * t ( p3 p4 p5 p6 h1 h2 h7 h8 )_t * y ( h7 h8 p5 p6 )_y
C     i0 ( p3 p4 h1 h2 )_tt + = 1/2 * P( 4 ) * t ( p3 h1 )_t * i1 ( p4 h2 )_t
C         i1 ( p3 h1 )_t + = 1 * t ( p3 h1 )_t
C         i1 ( p3 h1 )_yt + = 2 * Sum ( h6 p5 ) * t ( p3 p5 h1 h6 )_t * y ( h6 p5 )_y
C         i1 ( p3 h1 )_yt + = 1/2 * Sum ( h7 h8 p5 p6 ) * t ( p3 p5 p6 h1 h7 h8 )_t * y ( h7 h8 p5 p6 )_y
C         i1 ( p3 h1 )_yt + = 1/18 * Sum ( h8 h9 h10 p5 p6 p7 ) * t ( p3 p5 p6 p7 h1 h8 h9 h10 )_t * y ( h8 h9 h10 p5 p6 p7 )_y
C         i1 ( p3 h1 )_ytt + = -1 * Sum ( h13 ) * t ( p3 h13 )_t * i2 ( h13 h1 )_yt
C             i2 ( h13 h1 )_yt + = 1 * Sum ( p7 ) * t ( p7 h1 )_t * i3 ( h13 p7 )_y
C                 i3 ( h13 p7 )_y + = 1 * y ( h13 p7 )_y
C             i2 ( h13 h1 )_yt + = -1 * Sum ( h8 p6 p7 ) * t ( p6 p7 h1 h8 )_t * y ( h8 h13 p6 p7 )_y
C             i2 ( h13 h1 )_yt + = 1/6 * Sum ( h9 h10 p6 p7 p8 ) * t ( p6 p7 p8 h1 h9 h10 )_t * y ( h9 h10 h13 p6 p7 p8 )_y
C             i2 ( h13 h1 )_yt + = -1/72 * Sum ( h10 h11 h12 p6 p7 p8 p9 ) * t ( p6 p7 p8 p9 h1 h10 h11 h12 )_t * y ( h10 h11 h12 h13 p6 p7 p8 p9 )_y
C         i1 ( p3 h1 )_ytt + = 1 * Sum ( h10 h11 p13 ) * t ( p3 p13 h10 h11 )_t * i2 ( h10 h11 h1 p13 )_yt
C             i2 ( h10 h11 h1 p13 )_yt + = -1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h10 h11 p5 p13 )_y
C             i2 ( h10 h11 h1 p13 )_yt + = 1/2 * Sum ( h7 p5 p6 ) * t ( p5 p6 h1 h7 )_t * y ( h7 h10 h11 p5 p6 p13 )_y
C             i2 ( h10 h11 h1 p13 )_yt + = -1/12 * Sum ( h8 h9 p5 p6 p7 ) * t ( p5 p6 p7 h1 h8 h9 )_t * y ( h8 h9 h10 h11 p5 p6 p7 p13 )_y
C         i1 ( p3 h1 )_ytt + = -1/6 * Sum ( h6 h7 h8 p13 p14 ) * t ( p3 p13 p14 h6 h7 h8 )_t * i2 ( h6 h7 h8 h1 p13 p14 )_yt
C             i2 ( h6 h7 h8 h1 p13 p14 )_yt + = 1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h6 h7 h8 p5 p13 p14 )_y
C             i2 ( h6 h7 h8 h1 p13 p14 )_yt + = 1/2 * Sum ( h12 p10 p11 ) * t ( p10 p11 h1 h12 )_t * y ( h6 h7 h8 h12 p10 p11 p13 p14 )_y
C         i1 ( p3 h1 )_ytt + = 1/72 * Sum ( h9 h10 h11 h12 p6 p7 p8 ) * t ( p3 p6 p7 p8 h9 h10 h11 h12 )_t * i2 ( h9 h10 h11 h12 h1 p6 p7 p8 )_yt
C             i2 ( h9 h10 h11 h12 h1 p6 p7 p8 )_yt + = -1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h9 h10 h11 h12 p5 p6 p7 p8 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = -1 * P( 2 ) * Sum ( h13 ) * t ( p3 h13 )_t * i1 ( h13 p4 h1 h2 )_yt
C         i1 ( h13 p3 h1 h2 )_yt + = -1 * Sum ( p5 ) * t ( p3 p5 h1 h2 )_t * y ( h13 p5 )_y
C         i1 ( h13 p3 h1 h2 )_yt + = 1/2 * Sum ( h7 p5 p6 ) * t ( p3 p5 p6 h1 h2 h7 )_t * y ( h7 h13 p5 p6 )_y
C         i1 ( h13 p3 h1 h2 )_yt + = -1/12 * Sum ( h8 h9 p5 p6 p7 ) * t ( p3 p5 p6 p7 h1 h2 h8 h9 )_t * y ( h8 h9 h13 p5 p6 p7 )_y
C         i1 ( h13 p3 h1 h2 )_ytt + = 1/4 * Sum ( h14 ) * t ( p3 h14 )_t * i2 ( h13 h14 h1 h2 )_yt
C             i2 ( h13 h14 h1 h2 )_yt + = -1 * Sum ( p7 p8 ) * t ( p7 p8 h1 h2 )_t * y ( h13 h14 p7 p8 )_y
C             i2 ( h13 h14 h1 h2 )_yt + = -1/3 * Sum ( h10 p7 p8 p9 ) * t ( p7 p8 p9 h1 h2 h10 )_t * y ( h10 h13 h14 p7 p8 p9 )_y
C             i2 ( h13 h14 h1 h2 )_yt + = -1/24 * Sum ( h11 h12 p7 p8 p9 p10 ) * t ( p7 p8 p9 p10 h1 h2 h11 h12 )_t * y ( h11 h12 h13 h14 p7 p8 p9 p10 )_y
C             i2 ( h13 h14 h1 h2 )_ytt + = -1 * P( 2 ) * Sum ( p5 ) * t ( p5 h1 )_t * i3 ( h13 h14 h2 p5 )_yt
C                 i3 ( h13 h14 h1 p5 )_yt + = 1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h13 h14 p5 p6 )_y
C                 i3 ( h13 h14 h1 p5 )_yt + = 3/4 * Sum ( h10 p8 p9 ) * t ( p8 p9 h1 h10 )_t * i4 ( h10 h13 h14 p5 p8 p9 )_y
C                     i4 ( h10 h13 h14 p5 p8 p9 )_y + = 1 * y ( h10 h13 h14 p5 p8 p9 )_y
C                     i4 ( h10 h13 h14 p5 p8 p9 )_y + = 1/3 * y ( h10 h13 h14 p5 p8 p9 )_y
C                 i3 ( h13 h14 h1 p5 )_yt + = 1/8 * Sum ( h11 h12 p8 p9 p10 ) * t ( p8 p9 p10 h1 h11 h12 )_t * i4 ( h11 h12 h13 h14 p5 p8 p9 p10 )_y
C                     i4 ( h11 h12 h13 h14 p5 p8 p9 p10 )_y + = 1 * y ( h11 h12 h13 h14 p5 p8 p9 p10 )_y
C                     i4 ( h11 h12 h13 h14 p5 p8 p9 p10 )_y + = 1/3 * y ( h11 h12 h13 h14 p5 p8 p9 p10 )_y
C             i2 ( h13 h14 h1 h2 )_ytt + = -1/8 * P( 2 ) * Sum ( h7 p5 p6 ) * t ( p5 p6 h1 h7 )_t * i3 ( h7 h13 h14 h2 p5 p6 )_yt
C                 i3 ( h7 h13 h14 h1 p5 p6 )_yt + = -1 * Sum ( h10 p8 p9 ) * t ( p8 p9 h1 h10 )_t * i4 ( h7 h10 h13 h14 p5 p6 p8 p9 )_y
C                     i4 ( h7 h10 h13 h14 p5 p6 p8 p9 )_y + = 1 * y ( h7 h10 h13 h14 p5 p6 p8 p9 )_y
C         i1 ( h13 p3 h1 h2 )_ytt + = -1 * P( 2 ) * Sum ( h11 p10 ) * t ( p3 p10 h1 h11 )_t * i2 ( h11 h13 h2 p10 )_yt
C             i2 ( h11 h13 h1 p10 )_yt + = -1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h11 h13 p5 p10 )_y
C             i2 ( h11 h13 h1 p10 )_yt + = 1/2 * Sum ( h9 p7 p8 ) * t ( p7 p8 h1 h9 )_t * y ( h9 h11 h13 p7 p8 p10 )_y
C             i2 ( h11 h13 h1 p10 )_yt + = -1/12 * Sum ( h8 h9 p5 p6 p7 ) * t ( p5 p6 p7 h1 h8 h9 )_t * y ( h8 h9 h11 h13 p5 p6 p7 p10 )_y
C         i1 ( h13 p3 h1 h2 )_ytt + = -1/4 * P( 2 ) * Sum ( h6 h7 p12 p14 ) * t ( p3 p12 p14 h1 h6 h7 )_t * i2 ( h6 h7 h13 h2 p12 p14 )_yt
C             i2 ( h6 h7 h13 h1 p12 p14 )_yt + = 1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h6 h7 h13 p5 p12 p14 )_y
C             i2 ( h6 h7 h13 h1 p12 p14 )_yt + = -1/2 * Sum ( h11 p9 p10 ) * t ( p9 p10 h1 h11 )_t * y ( h6 h7 h11 h13 p9 p10 p12 p14 )_y
C         i1 ( h13 p3 h1 h2 )_ytt + = -1/4 * Sum ( p12 p10 ) * t ( p10 p12 h1 h2 )_t * i2 ( h13 p3 p10 p12 )_yt
C             i2 ( h13 p3 p10 p12 )_yt + = 1 * Sum ( h8 h9 p7 ) * t ( p3 p7 h8 h9 )_t * y ( h8 h9 h13 p7 p10 p12 )_y
C             i2 ( h13 p3 p10 p12 )_yt + = -1/6 * Sum ( h7 h8 h9 p5 p6 ) * t ( p3 p5 p6 h7 h8 h9 )_t * y ( h7 h8 h9 h13 p5 p6 p10 p12 )_y
C         i1 ( h13 p3 h1 h2 )_ytt + = -1/36 * P( 2 ) * Sum ( h10 h11 h12 p7 p8 p9 ) * t ( p3 p7 p8 p9 h1 h10 h11 h12 )_t * i2 ( h10 h11 h12 h13 h2 p7 p8 p9 )_yt
C             i2 ( h10 h11 h12 h13 h1 p7 p8 p9 )_yt + = -1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h10 h11 h12 h13 p5 p7 p8 p9 )_y
C         i1 ( h13 p3 h1 h2 )_ytt + = 1/12 * Sum ( h8 p5 p6 p7 ) * t ( p5 p6 p7 h1 h2 h8 )_t * i2 ( h8 h13 p3 p5 p6 p7 )_yt
C             i2 ( h8 h13 p3 p5 p6 p7 )_yt + = -1 * Sum ( h10 h11 p9 ) * t ( p3 p9 h10 h11 )_t * y ( h8 h10 h11 h13 p5 p6 p7 p9 )_y
C         i1 ( h13 p3 h1 h2 )_yttt + = -3/16 * P( 2 ) * Sum ( p14 ) * t ( p14 h1 )_t * i2 ( h13 p3 h2 p14 )_ytt
C             i2 ( h13 p3 h1 p14 )_ytt + = -1 * Sum ( h9 h10 p8 ) * t ( p3 p8 h9 h10 )_t * i3 ( h9 h10 h13 h1 p8 p14 )_yt
C                 i3 ( h9 h10 h13 h1 p8 p14 )_yt + = -1 * Sum ( p6 ) * t ( p6 h1 )_t * i4 ( h9 h10 h13 p6 p8 p14 )_y
C                     i4 ( h9 h10 h13 p6 p8 p14 )_y + = 1 * y ( h9 h10 h13 p6 p8 p14 )_y
C                     i4 ( h9 h10 h13 p6 p8 p14 )_y + = 1/3 * y ( h9 h10 h13 p6 p8 p14 )_y
C                 i3 ( h9 h10 h13 h1 p8 p14 )_yt + = 2/3 * Sum ( h7 p5 p6 ) * t ( p5 p6 h1 h7 )_t * i4 ( h7 h9 h10 h13 p5 p6 p8 p14 )_y
C                     i4 ( h7 h9 h10 h13 p5 p6 p8 p14 )_y + = 1 * y ( h7 h9 h10 h13 p5 p6 p8 p14 )_y
C             i2 ( h13 p3 h1 p14 )_ytt + = 1/6 * Sum ( h10 h11 h12 p8 p9 ) * t ( p3 p8 p9 h10 h11 h12 )_t * i3 ( h10 h11 h12 h13 h1 p8 p9 p14 )_yt
C                 i3 ( h10 h11 h12 h13 h1 p8 p9 p14 )_yt + = 1 * Sum ( p6 ) * t ( p6 h1 )_t * i4 ( h10 h11 h12 h13 p6 p8 p9 p14 )_y
C                     i4 ( h10 h11 h12 h13 p6 p8 p9 p14 )_y + = 1 * y ( h10 h11 h12 h13 p6 p8 p9 p14 )_y
C                     i4 ( h10 h11 h12 h13 p6 p8 p9 p14 )_y + = 1/3 * y ( h10 h11 h12 h13 p6 p8 p9 p14 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = -1 * P( 2 ) * Sum ( h13 ) * t ( p3 p4 h1 h13 )_t * i1 ( h13 h2 )_yt
C         i1 ( h13 h1 )_yt + = 1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h13 p6 )_y
C         i1 ( h13 h1 )_yt + = -1/2 * Sum ( h8 p6 p7 ) * t ( p6 p7 h1 h8 )_t * y ( h8 h13 p6 p7 )_y
C         i1 ( h13 h1 )_yt + = 1/12 * Sum ( h8 h9 p5 p6 p7 ) * t ( p5 p6 p7 h1 h8 h9 )_t * y ( h8 h9 h13 p5 p6 p7 )_y
C         i1 ( h13 h1 )_yt + = -1/144 * Sum ( h9 h10 h11 p5 p6 p7 p8 ) * t ( p5 p6 p7 p8 h1 h9 h10 h11 )_t * y ( h9 h10 h11 h13 p5 p6 p7 p8 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/2 * P( 2 ) * Sum ( h6 h7 p5 ) * t ( p3 p4 p5 h1 h6 h7 )_t * i1 ( h6 h7 h2 p5 )_yt
C         i1 ( h6 h7 h1 p5 )_yt + = -1 * Sum ( p8 ) * t ( p8 h1 )_t * y ( h6 h7 p5 p8 )_y
C         i1 ( h6 h7 h1 p5 )_yt + = -1/2 * Sum ( h10 p8 p9 ) * t ( p8 p9 h1 h10 )_t * y ( h6 h7 h10 p5 p8 p9 )_y
C         i1 ( h6 h7 h1 p5 )_yt + = -1/12 * Sum ( h11 h12 p8 p9 p10 ) * t ( p8 p9 p10 h1 h11 h12 )_t * y ( h6 h7 h11 h12 p5 p8 p9 p10 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/2 * P( 2 ) * Sum ( p13 ) * t ( p3 p13 h1 h2 )_t * i1 ( p4 p13 )_yt
C         i1 ( p3 p13 )_yt + = -1 * Sum ( h7 h8 p6 ) * t ( p3 p6 h7 h8 )_t * y ( h7 h8 p6 p13 )_y
C         i1 ( p3 p13 )_yt + = 1/6 * Sum ( h7 h8 h9 p5 p6 ) * t ( p3 p5 p6 h7 h8 h9 )_t * y ( h7 h8 h9 p5 p6 p13 )_y
C         i1 ( p3 p13 )_yt + = -1/72 * Sum ( h8 h9 h10 h11 p5 p6 p7 ) * t ( p3 p5 p6 p7 h8 h9 h10 h11 )_t * y ( h8 h9 h10 h11 p5 p6 p7 p13 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/4 * Sum ( h15 h14 ) * t ( p3 p4 h14 h15 )_t * i1 ( h14 h15 h1 h2 )_yt
C         i1 ( h14 h15 h1 h2 )_yt + = -1 * Sum ( p5 p6 ) * t ( p5 p6 h1 h2 )_t * y ( h14 h15 p5 p6 )_y
C         i1 ( h14 h15 h1 h2 )_yt + = -1/3 * Sum ( h8 p5 p6 p7 ) * t ( p5 p6 p7 h1 h2 h8 )_t * y ( h8 h14 h15 p5 p6 p7 )_y
C         i1 ( h14 h15 h1 h2 )_yt + = -1/24 * Sum ( h9 h10 p5 p6 p7 p8 ) * t ( p5 p6 p7 p8 h1 h2 h9 h10 )_t * y ( h9 h10 h14 h15 p5 p6 p7 p8 )_y
C         i1 ( h14 h15 h1 h2 )_ytt + = -1 * P( 2 ) * Sum ( p10 ) * t ( p10 h1 )_t * i2 ( h14 h15 h2 p10 )_yt
C             i2 ( h14 h15 h1 p10 )_yt + = -1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h14 h15 p6 p10 )_y
C             i2 ( h14 h15 h1 p10 )_yt + = 1 * Sum ( h9 p7 p8 ) * t ( p7 p8 h1 h9 )_t * y ( h9 h14 h15 p7 p8 p10 )_y
C             i2 ( h14 h15 h1 p10 )_yt + = -1/6 * Sum ( h8 h9 p5 p6 p7 ) * t ( p5 p6 p7 h1 h8 h9 )_t * y ( h8 h9 h14 h15 p5 p6 p7 p10 )_y
C         i1 ( h14 h15 h1 h2 )_ytt + = -1/4 * P( 2 ) * Sum ( h9 p7 p8 ) * t ( p7 p8 h1 h9 )_t * i2 ( h9 h14 h15 h2 p7 p8 )_yt
C             i2 ( h9 h14 h15 h1 p7 p8 )_yt + = -1 * Sum ( h12 p10 p11 ) * t ( p10 p11 h1 h12 )_t * y ( h9 h12 h14 h15 p7 p8 p10 p11 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = 1/2 * P( 4 ) * Sum ( h14 p15 ) * t ( p3 p15 h1 h14 )_t * i1 ( h14 p4 h2 p15 )_yt
C         i1 ( h14 p3 h1 p15 )_yt + = 1 * Sum ( h8 p7 ) * t ( p3 p7 h1 h8 )_t * y ( h8 h14 p7 p15 )_y
C         i1 ( h14 p3 h1 p15 )_yt + = 1/2 * Sum ( h7 h8 p5 p6 ) * t ( p3 p5 p6 h1 h7 h8 )_t * y ( h7 h8 h14 p5 p6 p15 )_y
C         i1 ( h14 p3 h1 p15 )_yt + = 1/18 * Sum ( h8 h9 h10 p5 p6 p7 ) * t ( p3 p5 p6 p7 h1 h8 h9 h10 )_t * y ( h8 h9 h10 h14 p5 p6 p7 p15 )_y
C         i1 ( h14 p3 h1 p15 )_ytt + = -1 * Sum ( h6 h13 p5 ) * t ( p3 p5 h6 h13 )_t * i2 ( h6 h13 h14 h1 p5 p15 )_yt
C             i2 ( h6 h13 h14 h1 p5 p15 )_yt + = -1 * Sum ( p10 ) * t ( p10 h1 )_t * y ( h6 h13 h14 p5 p10 p15 )_y
C             i2 ( h6 h13 h14 h1 p5 p15 )_yt + = -1/4 * Sum ( h8 p16 p7 ) * t ( p7 p16 h1 h8 )_t * i3 ( h6 h8 h13 h14 p5 p7 p15 p16 )_y
C                 i3 ( h6 h8 h13 h14 p5 p7 p15 p16 )_y + = 1 * y ( h6 h8 h13 h14 p5 p7 p15 p16 )_y
C         i1 ( h14 p3 h1 p15 )_ytt + = 1/6 * Sum ( h7 h8 h9 p5 p6 ) * t ( p3 p5 p6 h7 h8 h9 )_t * i2 ( h7 h8 h9 h14 h1 p5 p6 p15 )_yt
C             i2 ( h7 h8 h9 h14 h1 p5 p6 p15 )_yt + = -1 * Sum ( p12 ) * t ( p12 h1 )_t * y ( h7 h8 h9 h14 p5 p6 p12 p15 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/12 * P( 2 ) * Sum ( h7 h8 h9 p5 p6 ) * t ( p3 p4 p5 p6 h1 h7 h8 h9 )_t * i1 ( h7 h8 h9 h2 p5 p6 )_yt
C         i1 ( h7 h8 h9 h1 p5 p6 )_yt + = 1 * Sum ( p10 ) * t ( p10 h1 )_t * y ( h7 h8 h9 p5 p6 p10 )_y
C         i1 ( h7 h8 h9 h1 p5 p6 )_yt + = 1/2 * Sum ( h12 p10 p11 ) * t ( p10 p11 h1 h12 )_t * y ( h7 h8 h9 h12 p5 p6 p10 p11 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/4 * P( 2 ) * Sum ( h7 p5 p6 ) * t ( p3 p5 p6 h1 h2 h7 )_t * i1 ( h7 p4 p5 p6 )_yt
C         i1 ( h7 p3 p5 p6 )_yt + = -1 * Sum ( h9 h10 p8 ) * t ( p3 p8 h9 h10 )_t * y ( h7 h9 h10 p5 p6 p8 )_y
C         i1 ( h7 p3 p5 p6 )_yt + = -1/6 * Sum ( h10 h11 h12 p8 p9 ) * t ( p3 p8 p9 h10 h11 h12 )_t * y ( h7 h10 h11 h12 p5 p6 p8 p9 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = 1/12 * Sum ( h13 h14 h15 p12 ) * t ( p3 p4 p12 h13 h14 h15 )_t * i1 ( h13 h14 h15 h1 h2 p12 )_yt
C         i1 ( h13 h14 h15 h1 h2 p12 )_yt + = 1 * Sum ( p9 p10 ) * t ( p9 p10 h1 h2 )_t * y ( h13 h14 h15 p9 p10 p12 )_y
C         i1 ( h13 h14 h15 h1 h2 p12 )_yt + = 1/3 * Sum ( h8 p5 p6 p7 ) * t ( p5 p6 p7 h1 h2 h8 )_t * y ( h8 h13 h14 h15 p5 p6 p7 p12 )_y
C         i1 ( h13 h14 h15 h1 h2 p12 )_ytt + = -1 * P( 2 ) * Sum ( p5 ) * t ( p5 h1 )_t * i2 ( h13 h14 h15 h2 p5 p12 )_yt
C             i2 ( h13 h14 h15 h1 p5 p12 )_yt + = -1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h13 h14 h15 p5 p6 p12 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/24 * P( 2 ) * Sum ( h8 h9 p5 p6 p7 ) * t ( p3 p5 p6 p7 h1 h2 h8 h9 )_t * i1 ( h8 h9 p4 p5 p6 p7 )_yt
C         i1 ( h8 h9 p3 p5 p6 p7 )_yt + = 1 * Sum ( h11 h12 p10 ) * t ( p3 p10 h11 h12 )_t * y ( h8 h9 h11 h12 p5 p6 p7 p10 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/96 * Sum ( h15 h7 h8 h9 p13 p14 ) * t ( p3 p4 p13 p14 h7 h8 h9 h15 )_t * i1 ( h7 h8 h9 h15 h1 h2 p13 p14 )_yt
C         i1 ( h7 h8 h9 h15 h1 h2 p13 p14 )_yt + = -1 * Sum ( p11 p12 ) * t ( p11 p12 h1 h2 )_t * y ( h7 h8 h9 h15 p11 p12 p13 p14 )_y
C         i1 ( h7 h8 h9 h15 h1 h2 p13 p14 )_ytt + = -1 * P( 2 ) * Sum ( p5 ) * t ( p5 h1 )_t * i2 ( h7 h8 h9 h15 h2 p5 p13 p14 )_yt
C             i2 ( h7 h8 h9 h15 h1 p5 p13 p14 )_yt + = 1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h7 h8 h9 h15 p5 p6 p13 p14 )_y
C     i0 ( p3 p4 h1 h2 )_ytt + = 1/32 * P( 4 ) * Sum ( h7 h8 p5 p6 ) * t ( p3 p5 p6 h1 h7 h8 )_t * i1 ( h7 h8 p4 h2 p5 p6 )_yt
C         i1 ( h7 h8 p3 h1 p5 p6 )_yt + = 1 * Sum ( h11 h12 p9 p10 ) * t ( p3 p9 p10 h1 h11 h12 )_t * y ( h7 h8 h11 h12 p5 p6 p9 p10 )_y
C         i1 ( h7 h8 p3 h1 p5 p6 )_ytt + = -4 * Sum ( h10 h11 p9 ) * t ( p3 p9 h10 h11 )_t * i2 ( h7 h8 h10 h11 h1 p5 p6 p9 )_yt
C             i2 ( h7 h8 h10 h11 h1 p5 p6 p9 )_yt + = -1 * Sum ( p12 ) * t ( p12 h1 )_t * y ( h7 h8 h10 h11 p5 p6 p9 p12 )_y
C     i0 ( p3 p4 h1 h2 )_yttt + = -1/12 * P( 2 ) * Sum ( p12 ) * t ( p12 h1 )_t * i1 ( p3 p4 h2 p12 )_ytt
C         i1 ( p3 p4 h1 p12 )_ytt + = 1 * Sum ( h6 h7 h8 p5 ) * t ( p3 p4 p5 h6 h7 h8 )_t * i2 ( h6 h7 h8 h1 p5 p12 )_yt
C             i2 ( h6 h7 h8 h1 p5 p12 )_yt + = -1 * Sum ( h11 p9 p10 ) * t ( p9 p10 h1 h11 )_t * y ( h6 h7 h8 h11 p5 p9 p10 p12 )_y
C         i1 ( p3 p4 h1 p12 )_yttt + = 3/8 * P( 2 ) * Sum ( h6 h7 p5 ) * t ( p3 p5 h6 h7 )_t * i2 ( h6 h7 p4 h1 p5 p12 )_ytt
C             i2 ( h6 h7 p3 h1 p5 p12 )_ytt + = -1 * Sum ( h9 h10 p8 ) * t ( p3 p8 h9 h10 )_t * i3 ( h6 h7 h9 h10 h1 p5 p8 p12 )_yt
C                 i3 ( h6 h7 h9 h10 h1 p5 p8 p12 )_yt + = 1 * Sum ( p11 ) * t ( p11 h1 )_t * i4 ( h6 h7 h9 h10 p5 p8 p11 p12 )_y
C                     i4 ( h6 h7 h9 h10 p5 p8 p11 p12 )_y + = 1 * y ( h6 h7 h9 h10 p5 p8 p11 p12 )_y
C     i0 ( p3 p4 h1 h2 )_yttt + = -1/8 * Sum ( p5 p6 ) * t ( p5 p6 h1 h2 )_t * i1 ( p3 p4 p5 p6 )_ytt
C         i1 ( p3 p4 p5 p6 )_ytt + = 1/2 * P( 2 ) * Sum ( h8 h9 p7 ) * t ( p3 p7 h8 h9 )_t * i2 ( h8 h9 p4 p5 p6 p7 )_yt
C             i2 ( h8 h9 p3 p5 p6 p7 )_yt + = 1 * Sum ( h11 h12 p10 ) * t ( p3 p10 h11 h12 )_t * y ( h8 h9 h11 h12 p5 p6 p7 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "util.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_i0
      INTEGER k_i0_offset
      INTEGER d_t2
      INTEGER k_t2_offset
      INTEGER d_t3
      INTEGER k_t3_offset
      INTEGER d_y1
      INTEGER k_y1_offset
      INTEGER d_t4
      INTEGER k_t4_offset
      INTEGER d_y2
      INTEGER k_y2_offset
      INTEGER d_t1
      INTEGER k_t1_offset
      INTEGER d_i1
      INTEGER k_i1_offset
      INTEGER l_i1_offset
      INTEGER size_i1
      INTEGER d_y3
      INTEGER k_y3_offset
      INTEGER d_i2
      INTEGER k_i2_offset
      INTEGER l_i2_offset
      INTEGER d_i3
      INTEGER k_i3_offset
      INTEGER size_i2
      INTEGER d_y4
      INTEGER k_y4_offset
      INTEGER l_i3_offset
      INTEGER size_i3
      INTEGER d_i4
      INTEGER k_i4_offset
      INTEGER l_i4_offset
      INTEGER size_i4
      CHARACTER*255 filename
      CALL ccsdtq_2pdm_pphh_mo_1(d_t2,k_t2_offset,d_i0,k_i0_offset)
      CALL ccsdtq_2pdm_pphh_mo_2(d_t3,k_t3_offset,d_y1,k_y1_offset,d_i0,
     &k_i0_offset)
      CALL ccsdtq_2pdm_pphh_mo_3(d_t4,k_t4_offset,d_y2,k_y2_offset,d_i0,
     &k_i0_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_4_1(l_i1_offset,k_i1_offset,size_i
     &1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_4_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_4_1(d_t1,k_t1_offset,d_i1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_4_2(d_t2,k_t2_offset,d_y1,k_y1_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_4_3(d_t3,k_t3_offset,d_y2,k_y2_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_4_4(d_t4,k_t4_offset,d_y3,k_y3_offset,d_i
     &1,k_i1_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_4_5_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_4_5_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_4_5_1_1(l_i3_offset,k_i3_offset,si
     &ze_i3)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_4_5_1_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL ccsdtq_2pdm_pphh_mo_4_5_1_1(d_y1,k_y1_offset,d_i3,k_i3_offset
     &)
      CALL ccsdtq_2pdm_pphh_mo_4_5_1_2(d_y1,k_y1_offset,d_i3,k_i3_offset
     &)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ccsdtq_2pdm_pphh_mo_4_5_1(d_t1,k_t1_offset,d_i3,k_i3_offset,d
     &_i2,k_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL ccsdtq_2pdm_pphh_mo_4_5_2(d_t2,k_t2_offset,d_y2,k_y2_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_4_5_3(d_t3,k_t3_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_4_5_4(d_t4,k_t4_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_4_5(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_4_6_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_4_6_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_4_6_1(d_t1,k_t1_offset,d_y2,k_y2_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_4_6_2(d_t2,k_t2_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_4_6_3(d_t3,k_t3_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_4_6(d_t2,k_t2_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_4_7_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_4_7_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_4_7_1(d_t1,k_t1_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_4_7_2(d_t2,k_t2_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_4_7(d_t3,k_t3_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_4_8_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_4_8_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_4_8_1(d_t1,k_t1_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_4_8(d_t4,k_t4_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_4(d_t1,k_t1_offset,d_i1,k_i1_offset,d_i0,
     &k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_1(l_i1_offset,k_i1_offset,size_i
     &1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_5_1(d_t2,k_t2_offset,d_y1,k_y1_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_5_2(d_t3,k_t3_offset,d_y2,k_y2_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_5_3(d_t4,k_t4_offset,d_y3,k_y3_offset,d_i
     &1,k_i1_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_4_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_4_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_4_1(d_t2,k_t2_offset,d_y2,k_y2_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_5_4_2(d_t3,k_t3_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_5_4_3(d_t4,k_t4_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_4_4_1(l_i3_offset,k_i3_offset,si
     &ze_i3)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_4_4_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL ccsdtq_2pdm_pphh_mo_5_4_4_1(d_t1,k_t1_offset,d_y2,k_y2_offset
     &,d_i3,k_i3_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_4_4_2_1(l_i4_offset,k_i4_offset,
     &size_i4)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_4_4_2_1_i4',filename)
      CALL CREATEFILE(filename,d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_4_4_2_1(d_y3,k_y3_offset,d_i4,k_i4_offs
     &et)
      CALL ccsdtq_2pdm_pphh_mo_5_4_4_2_2(d_y3,k_y3_offset,d_i4,k_i4_offs
     &et)
      CALL RECONCILEFILE(d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_4_4_2(d_t2,k_t2_offset,d_i4,k_i4_offset
     &,d_i3,k_i3_offset)
      CALL DELETEFILE(d_i4)
      IF (.not.MA_POP_STACK(l_i4_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_4_4_3_1(l_i4_offset,k_i4_offset,
     &size_i4)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_4_4_3_1_i4',filename)
      CALL CREATEFILE(filename,d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_4_4_3_1(d_y4,k_y4_offset,d_i4,k_i4_offs
     &et)
      CALL ccsdtq_2pdm_pphh_mo_5_4_4_3_2(d_y4,k_y4_offset,d_i4,k_i4_offs
     &et)
      CALL RECONCILEFILE(d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_4_4_3(d_t3,k_t3_offset,d_i4,k_i4_offset
     &,d_i3,k_i3_offset)
      CALL DELETEFILE(d_i4)
      IF (.not.MA_POP_STACK(l_i4_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ccsdtq_2pdm_pphh_mo_5_4_4(d_t1,k_t1_offset,d_i3,k_i3_offset,d
     &_i2,k_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_4_5_1(l_i3_offset,k_i3_offset,si
     &ze_i3)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_4_5_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_4_5_1_1(l_i4_offset,k_i4_offset,
     &size_i4)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_4_5_1_1_i4',filename)
      CALL CREATEFILE(filename,d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_4_5_1_1(d_y4,k_y4_offset,d_i4,k_i4_offs
     &et)
      CALL ccsdtq_2pdm_pphh_mo_5_4_5_1_2(d_y4,k_y4_offset,d_i4,k_i4_offs
     &et)
      CALL RECONCILEFILE(d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_4_5_1(d_t2,k_t2_offset,d_i4,k_i4_offset
     &,d_i3,k_i3_offset)
      CALL DELETEFILE(d_i4)
      IF (.not.MA_POP_STACK(l_i4_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ccsdtq_2pdm_pphh_mo_5_4_5(d_t2,k_t2_offset,d_i3,k_i3_offset,d
     &_i2,k_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_4(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_5_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_5_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_5_1(d_t1,k_t1_offset,d_y2,k_y2_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_5_5_2(d_t2,k_t2_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_5_5_3(d_t3,k_t3_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_5(d_t2,k_t2_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_6_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_6_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_6_1(d_t1,k_t1_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_5_6_2(d_t2,k_t2_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_6(d_t3,k_t3_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_7_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_7_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_7_1(d_t2,k_t2_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_5_7_2(d_t3,k_t3_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_7(d_t2,k_t2_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_8_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_8_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_8_1(d_t1,k_t1_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_8(d_t4,k_t4_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_9_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_9_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_9_1(d_t2,k_t2_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_9(d_t3,k_t3_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_10_1(l_i2_offset,k_i2_offset,siz
     &e_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_10_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_10_1_1(l_i3_offset,k_i3_offset,s
     &ize_i3)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_10_1_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_10_1_1_1(l_i4_offset,k_i4_offset
     &,size_i4)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_10_1_1_1_i4',filename)
      CALL CREATEFILE(filename,d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_10_1_1_1(d_y3,k_y3_offset,d_i4,k_i4_off
     &set)
      CALL ccsdtq_2pdm_pphh_mo_5_10_1_1_2(d_y3,k_y3_offset,d_i4,k_i4_off
     &set)
      CALL RECONCILEFILE(d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_10_1_1(d_t1,k_t1_offset,d_i4,k_i4_offse
     &t,d_i3,k_i3_offset)
      CALL DELETEFILE(d_i4)
      IF (.not.MA_POP_STACK(l_i4_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_10_1_2_1(l_i4_offset,k_i4_offset
     &,size_i4)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_10_1_2_1_i4',filename)
      CALL CREATEFILE(filename,d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_10_1_2_1(d_y4,k_y4_offset,d_i4,k_i4_off
     &set)
      CALL ccsdtq_2pdm_pphh_mo_5_10_1_2_2(d_y4,k_y4_offset,d_i4,k_i4_off
     &set)
      CALL RECONCILEFILE(d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_10_1_2(d_t2,k_t2_offset,d_i4,k_i4_offse
     &t,d_i3,k_i3_offset)
      CALL DELETEFILE(d_i4)
      IF (.not.MA_POP_STACK(l_i4_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ccsdtq_2pdm_pphh_mo_5_10_1(d_t2,k_t2_offset,d_i3,k_i3_offset,
     &d_i2,k_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_10_2_1(l_i3_offset,k_i3_offset,s
     &ize_i3)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_10_2_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_5_10_2_1_1(l_i4_offset,k_i4_offset
     &,size_i4)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_5_10_2_1_1_i4',filename)
      CALL CREATEFILE(filename,d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_10_2_1_1(d_y4,k_y4_offset,d_i4,k_i4_off
     &set)
      CALL ccsdtq_2pdm_pphh_mo_5_10_2_1_2(d_y4,k_y4_offset,d_i4,k_i4_off
     &set)
      CALL RECONCILEFILE(d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_5_10_2_1(d_t1,k_t1_offset,d_i4,k_i4_offse
     &t,d_i3,k_i3_offset)
      CALL DELETEFILE(d_i4)
      IF (.not.MA_POP_STACK(l_i4_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ccsdtq_2pdm_pphh_mo_5_10_2(d_t3,k_t3_offset,d_i3,k_i3_offset,
     &d_i2,k_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_5_10(d_t1,k_t1_offset,d_i2,k_i2_offset,d_
     &i1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_5(d_t1,k_t1_offset,d_i1,k_i1_offset,d_i0,
     &k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_6_1(l_i1_offset,k_i1_offset,size_i
     &1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_6_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_6_1(d_t1,k_t1_offset,d_y1,k_y1_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_6_2(d_t2,k_t2_offset,d_y2,k_y2_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_6_3(d_t3,k_t3_offset,d_y3,k_y3_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_6_4(d_t4,k_t4_offset,d_y4,k_y4_offset,d_i
     &1,k_i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_6(d_t2,k_t2_offset,d_i1,k_i1_offset,d_i0,
     &k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_7_1(l_i1_offset,k_i1_offset,size_i
     &1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_7_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_7_1(d_t1,k_t1_offset,d_y2,k_y2_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_7_2(d_t2,k_t2_offset,d_y3,k_y3_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_7_3(d_t3,k_t3_offset,d_y4,k_y4_offset,d_i
     &1,k_i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_7(d_t3,k_t3_offset,d_i1,k_i1_offset,d_i0,
     &k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_8_1(l_i1_offset,k_i1_offset,size_i
     &1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_8_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_8_1(d_t2,k_t2_offset,d_y2,k_y2_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_8_2(d_t3,k_t3_offset,d_y3,k_y3_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_8_3(d_t4,k_t4_offset,d_y4,k_y4_offset,d_i
     &1,k_i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_8(d_t2,k_t2_offset,d_i1,k_i1_offset,d_i0,
     &k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_9_1(l_i1_offset,k_i1_offset,size_i
     &1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_9_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_9_1(d_t2,k_t2_offset,d_y2,k_y2_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_9_2(d_t3,k_t3_offset,d_y3,k_y3_offset,d_i
     &1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_9_3(d_t4,k_t4_offset,d_y4,k_y4_offset,d_i
     &1,k_i1_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_9_4_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_9_4_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_9_4_1(d_t1,k_t1_offset,d_y2,k_y2_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_9_4_2(d_t2,k_t2_offset,d_y3,k_y3_offset,d
     &_i2,k_i2_offset)
      CALL ccsdtq_2pdm_pphh_mo_9_4_3(d_t3,k_t3_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_9_4(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_9_5_1(l_i2_offset,k_i2_offset,size
     &_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_9_5_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_9_5_1(d_t2,k_t2_offset,d_y4,k_y4_offset,d
     &_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_9_5(d_t2,k_t2_offset,d_i2,k_i2_offset,d_i
     &1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_9(d_t2,k_t2_offset,d_i1,k_i1_offset,d_i0,
     &k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_10_1(l_i1_offset,k_i1_offset,size_
     &i1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_10_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_10_1(d_t2,k_t2_offset,d_y2,k_y2_offset,d_
     &i1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_10_2(d_t3,k_t3_offset,d_y3,k_y3_offset,d_
     &i1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_10_3(d_t4,k_t4_offset,d_y4,k_y4_offset,d_
     &i1,k_i1_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_10_4_1(l_i2_offset,k_i2_offset,siz
     &e_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_10_4_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_10_4_1(d_t1,k_t1_offset,d_y3,k_y3_offset,
     &d_i2,k_i2_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_10_4_2_1(l_i3_offset,k_i3_offset,s
     &ize_i3)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_10_4_2_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL ccsdtq_2pdm_pphh_mo_10_4_2_1(d_y4,k_y4_offset,d_i3,k_i3_offse
     &t)
      CALL ccsdtq_2pdm_pphh_mo_10_4_2_2(d_y4,k_y4_offset,d_i3,k_i3_offse
     &t)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ccsdtq_2pdm_pphh_mo_10_4_2(d_t2,k_t2_offset,d_i3,k_i3_offset,
     &d_i2,k_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_10_4(d_t2,k_t2_offset,d_i2,k_i2_offset,d_
     &i1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_10_5_1(l_i2_offset,k_i2_offset,siz
     &e_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_10_5_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_10_5_1(d_t1,k_t1_offset,d_y4,k_y4_offset,
     &d_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_10_5(d_t3,k_t3_offset,d_i2,k_i2_offset,d_
     &i1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_10(d_t2,k_t2_offset,d_i1,k_i1_offset,d_i0
     &,k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_11_1(l_i1_offset,k_i1_offset,size_
     &i1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_11_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_11_1(d_t1,k_t1_offset,d_y3,k_y3_offset,d_
     &i1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_11_2(d_t2,k_t2_offset,d_y4,k_y4_offset,d_
     &i1,k_i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_11(d_t4,k_t4_offset,d_i1,k_i1_offset,d_i0
     &,k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_12_1(l_i1_offset,k_i1_offset,size_
     &i1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_12_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_12_1(d_t2,k_t2_offset,d_y3,k_y3_offset,d_
     &i1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_12_2(d_t3,k_t3_offset,d_y4,k_y4_offset,d_
     &i1,k_i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_12(d_t3,k_t3_offset,d_i1,k_i1_offset,d_i0
     &,k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_13_1(l_i1_offset,k_i1_offset,size_
     &i1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_13_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_13_1(d_t2,k_t2_offset,d_y3,k_y3_offset,d_
     &i1,k_i1_offset)
      CALL ccsdtq_2pdm_pphh_mo_13_2(d_t3,k_t3_offset,d_y4,k_y4_offset,d_
     &i1,k_i1_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_13_3_1(l_i2_offset,k_i2_offset,siz
     &e_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_13_3_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_13_3_1(d_t1,k_t1_offset,d_y3,k_y3_offset,
     &d_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_13_3(d_t1,k_t1_offset,d_i2,k_i2_offset,d_
     &i1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_13(d_t3,k_t3_offset,d_i1,k_i1_offset,d_i0
     &,k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_14_1(l_i1_offset,k_i1_offset,size_
     &i1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_14_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_14_1(d_t2,k_t2_offset,d_y4,k_y4_offset,d_
     &i1,k_i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_14(d_t4,k_t4_offset,d_i1,k_i1_offset,d_i0
     &,k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_15_1(l_i1_offset,k_i1_offset,size_
     &i1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_15_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_15_1(d_t2,k_t2_offset,d_y4,k_y4_offset,d_
     &i1,k_i1_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_15_2_1(l_i2_offset,k_i2_offset,siz
     &e_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_15_2_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_15_2_1(d_t1,k_t1_offset,d_y4,k_y4_offset,
     &d_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_15_2(d_t1,k_t1_offset,d_i2,k_i2_offset,d_
     &i1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_15(d_t4,k_t4_offset,d_i1,k_i1_offset,d_i0
     &,k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_16_1(l_i1_offset,k_i1_offset,size_
     &i1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_16_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_16_1(d_t3,k_t3_offset,d_y4,k_y4_offset,d_
     &i1,k_i1_offset)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_16_2_1(l_i2_offset,k_i2_offset,siz
     &e_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_16_2_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_16_2_1(d_t1,k_t1_offset,d_y4,k_y4_offset,
     &d_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_16_2(d_t2,k_t2_offset,d_i2,k_i2_offset,d_
     &i1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_16(d_t3,k_t3_offset,d_i1,k_i1_offset,d_i0
     &,k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_17_1(l_i1_offset,k_i1_offset,size_
     &i1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_17_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_17_1_1(l_i2_offset,k_i2_offset,siz
     &e_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_17_1_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_17_1_1(d_t2,k_t2_offset,d_y4,k_y4_offset,
     &d_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_17_1(d_t3,k_t3_offset,d_i2,k_i2_offset,d_
     &i1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_17_2_1(l_i2_offset,k_i2_offset,siz
     &e_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_17_2_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_17_2_1_1(l_i3_offset,k_i3_offset,s
     &ize_i3)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_17_2_1_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_17_2_1_1_1(l_i4_offset,k_i4_offset
     &,size_i4)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_17_2_1_1_1_i4',filename)
      CALL CREATEFILE(filename,d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_17_2_1_1_1(d_y4,k_y4_offset,d_i4,k_i4_off
     &set)
      CALL ccsdtq_2pdm_pphh_mo_17_2_1_1_2(d_y4,k_y4_offset,d_i4,k_i4_off
     &set)
      CALL RECONCILEFILE(d_i4,size_i4)
      CALL ccsdtq_2pdm_pphh_mo_17_2_1_1(d_t1,k_t1_offset,d_i4,k_i4_offse
     &t,d_i3,k_i3_offset)
      CALL DELETEFILE(d_i4)
      IF (.not.MA_POP_STACK(l_i4_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ccsdtq_2pdm_pphh_mo_17_2_1(d_t2,k_t2_offset,d_i3,k_i3_offset,
     &d_i2,k_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_17_2(d_t2,k_t2_offset,d_i2,k_i2_offset,d_
     &i1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_17(d_t1,k_t1_offset,d_i1,k_i1_offset,d_i0
     &,k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_18_1(l_i1_offset,k_i1_offset,size_
     &i1)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_18_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL OFFSET_ccsdtq_2pdm_pphh_mo_18_1_1(l_i2_offset,k_i2_offset,siz
     &e_i2)
      CALL TCE_FILENAME('ccsdtq_2pdm_pphh_mo_18_1_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_18_1_1(d_t2,k_t2_offset,d_y4,k_y4_offset,
     &d_i2,k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ccsdtq_2pdm_pphh_mo_18_1(d_t2,k_t2_offset,d_i2,k_i2_offset,d_
     &i1,k_i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdtq_2pdm_pphh_mo_18(d_t2,k_t2_offset,d_i1,k_i1_offset,d_i0
     &,k_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdtq_2pdm_pphh
     &_mo',-1,MA_ERR)
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_1(d_a,k_a_offset,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_t + = 1 * t ( p3 p4 h1 h2 )_t
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      CALL TCE_RESTRICTED_4(p3b,p4b,h1b,h2b,p3b_1,p4b_1,h1b_1,h2b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_1',2
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_1',4
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_yt + = 1 * Sum ( h6 p5 ) * t ( p3 p4 p5 h1 h2 h6 )_t * y ( h6 p5 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER h6b
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h6b_1
      INTEGER h6b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO h6b = 1,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+p5b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h6b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p4b,p5b,h1b,h2b,h6b,p3b_1,p4b_1,p5b_1,h1
     &b_1,h2b_1,h6b_1)
      CALL TCE_RESTRICTED_2(h6b,p5b,h6b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+h6b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_2',2,MA_ERR)
      IF ((p5b .lt. p3b) .and. (h6b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h6b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,3,2,4,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (h1b .le. h6b) .and. (h6b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h2b-1),6,4,3,2,5,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (h2b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h6b-1),5,4,3,2,6,1,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (h6b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h6b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,3,1,4,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (h1b .le. h6b) .and.
     & (h6b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h2b-1),6,4,3,1,5,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (h2b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h6b-1),5,4,3,1,6,2,-1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h6b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h6b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,2,1,4,3,1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h1b .le. h6b) .and. (h6b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h2b-1),6,4,2,1,5,3,-1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h2b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h6b-1),5,4,2,1,6,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_2',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (h6b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+p5b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_2',6
     &,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_2',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_3(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_yt + = 1/4 * Sum ( h7 h8 p5 p6 ) * t ( p3 p4 p5 p6 h1 h2 h7 h8 )_t * y ( h7 h8 p5 p6 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-
     &1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h7b-1),int_mb(k_sym+h8b-1)
     &))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p3b,p4b,p5b,p6b,h1b,h2b,h7b,h8b,p3b_1,p4b_1,
     &p5b_1,p6b_1,h1b_1,h2b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h7b,h8b,p5b,p6b,h7b_2,h8b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_3',2,MA_ERR)
      IF ((p6b .lt. p3b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,4,3,6,5,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h7b .lt. h1b) .and. (h1b .le. h8b) .and.
     & (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,6,4,3,7,5,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h7b .lt. h1b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,6,4,3,8,5,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h1b .le. h7b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,5,4,3,7,6,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h1b .le. h7b) .and. (h7b .lt. h2b) .and.
     & (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,5,4,3,8,6,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),6,5,4,3,8,7,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (p6b .lt. p4b) .and.
     & (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,4,2,6,5,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (p6b .lt. p4b) .and.
     & (h7b .lt. h1b) .and. (h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,6,4,2,7,5,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (p6b .lt. p4b) .and.
     & (h7b .lt. h1b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,6,4,2,8,5,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (p6b .lt. p4b) .and.
     & (h1b .le. h7b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,5,4,2,7,6,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (p6b .lt. p4b) .and.
     & (h1b .le. h7b) .and. (h7b .lt. h2b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,5,4,2,8,6,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (p6b .lt. p4b) .and.
     & (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),6,5,4,2,8,7,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p4b .le. p6b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,3,2,6,5,4,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p4b .le. p6b) .and. (h7b .lt. h1b) .and.
     & (h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,6,3,2,7,5,4,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p4b .le. p6b) .and. (h7b .lt. h1b) .and.
     & (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,6,3,2,8,5,4,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p4b .le. p6b) .and. (h1b .le. h7b) .and.
     & (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,5,3,2,7,6,4,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p4b .le. p6b) .and. (h1b .le. h7b) .and.
     & (h7b .lt. h2b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,5,3,2,8,6,4,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p4b .le. p6b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),6,5,3,2,8,7,4,1,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p6b .lt. p4b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,4,1,6,5,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p6b .lt. p4b) .and. (h7b .lt. h1b) .and.
     & (h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,6,4,1,7,5,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p6b .lt. p4b) .and. (h7b .lt. h1b) .and.
     & (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,6,4,1,8,5,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p6b .lt. p4b) .and. (h1b .le. h7b) .and.
     & (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,5,4,1,7,6,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p6b .lt. p4b) .and. (h1b .le. h7b) .and.
     & (h7b .lt. h2b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,5,4,1,8,6,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p6b .lt. p4b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),6,5,4,1,8,7,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (p4b .le. p6b) .and.
     & (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,3,1,6,5,4,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (p4b .le. p6b) .and.
     & (h7b .lt. h1b) .and. (h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,6,3,1,7,5,4,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (p4b .le. p6b) .and.
     & (h7b .lt. h1b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,6,3,1,8,5,4,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (p4b .le. p6b) .and.
     & (h1b .le. h7b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,5,3,1,7,6,4,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (p4b .le. p6b) .and.
     & (h1b .le. h7b) .and. (h7b .lt. h2b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,5,3,1,8,6,4,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (p4b .le. p6b) .and.
     & (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),6,5,3,1,8,7,4,2,-1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,2,1,6,5,4,3,1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h7b .lt. h1b) .and. (h1b .le. h8b) .and.
     & (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,6,2,1,7,5,4,3,-1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h7b .lt. h1b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,6,2,1,8,5,4,3,1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h1b .le. h7b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h2b-1),8,5,2,1,7,6,4,3,1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h1b .le. h7b) .and. (h7b .lt. h2b) .and.
     & (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h8b-1),7,5,2,1,8,6,4,3,-1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),6,5,2,1,8,7,4,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_3',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_3',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab 
     &* (h7b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_3',6
     &,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(ns
     &ubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_3',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_tt + = 1/2 * P( 4 ) * t ( p3 h1 )_t * i1 ( p4 h2 )_t
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p3b_1
      INTEGER h1b_1
      INTEGER p4b_2
      INTEGER h2b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_t,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p3b,h1b,p3b_1,h1b_1)
      CALL TCE_RESTRICTED_2(p4b,h2b,p4b_2,h2b_2)
      dim_common = 1
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p3b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h2b_2
     & - 1 + noab * (p4b_2 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h2b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4',6
     &,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4',8,MA_ERR)
      END IF
      END IF
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4',9,MA_ERR)
      IF ((p3b .le. p4b) .and. (h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,4,2,3,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((p3b .le. p4b) .and. (h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,4,2,1,3,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p3b) .and. (h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,2,4,3,1,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p3b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p3b) .and. (h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,2,4,1,3,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p3b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_1(d_a,k_a_offset,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 h1 )_t + = 1 * t ( p3 h1 )_t
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h1b
      INTEGER dimc
      INTEGER p3b_1
      INTEGER h1b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1
     &).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      CALL TCE_RESTRICTED_2(p3b,h1b,p3b_1,h1b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p3b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_1'
     &,2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_1',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p3b-1),2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_1'
     &,4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_4_1(l_a_offset,k_a_offset,si
     &ze)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 h1 )_t
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h1b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h1b = 1,noab
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1
     &).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h1b = 1,noab
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1
     &).ne.4)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = h1b - 1 + noab * (p3b - noab - 1)
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_2(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 h1 )_yt + = 2 * Sum ( h6 p5 ) * t ( p3 p5 h1 h6 )_t * y ( h6 p5 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER h6b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h6b_1
      INTEGER h6b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1
     &).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep_
     &y,irrep_t)) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO h6b = 1,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h6b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h6b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p5b,h1b,h6b,p3b_1,p5b_1,h1b_1,h6b_1)
      CALL TCE_RESTRICTED_2(h6b,p5b,h6b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+h6b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_2',2,MA_ERR)
      IF ((p5b .lt. p3b) .and. (h6b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1)
     &,4,2,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (h1b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h1b-1),int_mb(k_range+h6b-1)
     &,3,2,4,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h6b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1)
     &,4,1,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h6b-1)
     &,3,1,4,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_2'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (h6b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+p5b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_2'
     &,6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p3b-1),2,1,2.0d0/1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_2'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_3(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 h1 )_yt + = 1/2 * Sum ( h7 h8 p5 p6 ) * t ( p3 p5 p6 h1 h7 h8 )_t * y ( h7 h8 p5 p6 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1
     &).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep_
     &y,irrep_t)) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h7b-1),int
     &_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p5b,p6b,h1b,h7b,h8b,p3b_1,p5b_1,p6b_1,h1
     &b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h7b,h8b,p5b,p6b,h7b_2,h8b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_3',2,MA_ERR)
      IF ((p6b .lt. p3b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),6,3,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h7b .lt. h1b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),5,3,6,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,3,6,5,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),6,2,5,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h7b .lt. h1b) .and.
     & (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),5,2,6,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,2,6,5,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),6,1,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h7b .lt. h1b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),5,1,6,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,1,6,5,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_3'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_3',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab 
     &* (h7b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_3'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(ns
     &ubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_3',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p3b-1),2,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_3'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_4(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 h1 )_yt + = 1/18 * Sum ( h8 h9 h10 p5 p6 p7 ) * t ( p3 p5 p6 p7 h1 h8 h9 h10 )_t * y ( h8 h9 h10 p5 p6 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h10b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1
     &).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep_
     &y,irrep_t)) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     &+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h8b-
     &1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h9b-1),int_mb(k_sym+h10b-1
     &)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p3b,p5b,p6b,p7b,h1b,h8b,h9b,h10b,p3b_1,p5b_1
     &,p6b_1,p7b_1,h1b_1,h8b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_6(h8b,h9b,h10b,p5b,p6b,p7b,h8b_2,h9b_2,h10b_2,
     &p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1) *
     & int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_4',2,MA_ERR)
      IF ((p7b .lt. p3b) .and. (h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),8,4,7,6,5,3,2,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h9b .lt. h1b) .and. (h1b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),7,4,8,6,5,3,2,1,-1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),6,4,8,7,5,3,2,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),5,4,8,7,6,3,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h10b .lt. h1b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),8,3,7,6,5,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h9b .lt. h1b) .and.
     & (h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),7,3,8,6,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),6,3,8,7,5,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),5,3,8,7,6,4,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h10b .lt. h1b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),8,2,7,6,5,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h9b .lt. h1b) .and.
     & (h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),7,2,8,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),6,2,8,7,5,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),5,2,8,7,6,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),8,1,7,6,5,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h9b .lt. h1b) .and. (h1b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),7,1,8,6,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),6,1,8,7,5,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),5,1,8,7,6,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_4'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_4',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),3,2,1,6,5,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_4'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,36.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort
     &),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),di
     &ma_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_4',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p3b-1),2,1,1.0d0/18.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_4'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_5(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 h1 )_ytt + = -1 * Sum ( h13 ) * t ( p3 h13 )_t * i2 ( h13 h1 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h13b
      INTEGER p3b_1
      INTEGER h13b_1
      INTEGER h13b_2
      INTEGER h1b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1
     &).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep_
     &y,ieor(irrep_t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h13b = 1,noab
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h13b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h13b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p3b,h13b,p3b_1,h13b_1)
      CALL TCE_RESTRICTED_2(h13b,h1b,h13b_2,h1b_2)
      dim_common = int_mb(k_range+h13b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h1b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (p3b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h13b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h1b_2
     & - 1 + noab * (h13b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5'
     &,6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p3b-1),2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_5_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h1 )_yt + = 1 * Sum ( p7 ) * t ( p7 h1 )_t * i3 ( h13 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h13b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p7b,h1b,p7b_1,h1b_1)
      CALL TCE_RESTRICTED_2(h13b,p7b,h13b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h13b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+p7b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_1',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h1b-1),1,2,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h13b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_4_5_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h1 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h13b
      INTEGER h1b
      length = 0
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = h1b - 1 + noab * (h13b - 1)
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_5_1_1(d_a,k_a_offset,d_c,k_c_offs
     &et)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h13 p7 )_y + = 1 * y ( h13 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER p7b
      INTEGER dimc
      INTEGER h13b_1
      INTEGER p7b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+p7b-1)) .eq. irrep_y) T
     &HEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+p7b-1)
      CALL TCE_RESTRICTED_2(h13b,p7b,h13b_1,p7b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h13b-1) * int_mb(k_range+p7b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_1_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_1_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p7b_1
     & - noab - 1 + nvab * (h13b_1 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+p7b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &1_1',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_1_1',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h13b-1),2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h13b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &1_1',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_1_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_4_5_1_1(l_a_offset,k_a_offse
     &t,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h13 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h13b
      INTEGER p7b
      length = 0
      DO h13b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+p7b-1)) .eq. irrep_y) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_1_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h13b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+p7b-1)) .eq. irrep_y) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p7b - noab - 1 + nvab * (h13b - 1)
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h13b-1) * int_mb(k_range+p7b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_5_1_2(d_a,k_a_offset,d_c,k_c_offs
     &et)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h13 p7 )_y + = 1 * y ( h13 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER p7b
      INTEGER dimc
      INTEGER h13b_1
      INTEGER p7b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+p7b-1)) .eq. irrep_y) T
     &HEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+p7b-1)
      CALL TCE_RESTRICTED_2(h13b,p7b,h13b_1,p7b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h13b-1) * int_mb(k_range+p7b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_1_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_1_2',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p7b_1
     & - noab - 1 + nvab * (h13b_1 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+p7b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &1_2',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_1_2',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h13b-1),2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h13b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &1_2',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_1_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_5_2(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h1 )_yt + = -1 * Sum ( h8 p6 p7 ) * t ( p6 p7 h1 h8 )_t * y ( h8 h13 p6 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h13b_2
      INTEGER h8b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p6b,p7b,h1b,h8b,p6b_1,p7b_1,h1b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h13b,h8b,p6b,p7b,h13b_2,h8b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_m
     &b(k_range+h8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_2',2,MA_ERR)
      IF ((h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p6b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p6b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_2',5,MA_ERR)
      IF ((h8b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab
     & * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),2,1,4,3,1.0d0)
      END IF
      IF ((h13b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab 
     &* (h13b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),1,2,4,3,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h1b-1),1,2,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h13b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_5_3(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h1 )_yt + = 1/6 * Sum ( h9 h10 p6 p7 p8 ) * t ( p6 p7 p8 h1 h9 h10 )_t * y ( h9 h10 h13 p6 p7 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER h10b
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h13b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h9b-1),int
     &_mb(k_sym+h10b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p6b,p7b,p8b,h1b,h9b,h10b,p6b_1,p7b_1,p8b_1,h
     &1b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_6(h13b,h9b,h10b,p6b,p7b,p8b,h13b_2,h9b_2,h10b_
     &2,p6b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_m
     &b(k_range+p8b-1) * int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_3',2,MA_ERR)
      IF ((h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - no
     &ab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h1b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h9b .lt. h1b) .and. (h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - no
     &ab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h10b-1),5,6,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - no
     &ab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),4,6,5,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &3',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_3',5,MA_ERR)
      IF ((h10b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (h13b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),3,2,1,6,5,4,1.0d0)
      END IF
      IF ((h9b .le. h13b) .and. (h13b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h13b_2 - 1 + noab * (h9b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),2,3,1,6,5,4,-1.0d0)
      END IF
      IF ((h13b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h9b_2 - 1 + noab * (h13b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),1,3,2,6,5,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &3',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_3',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h1b-1),1,2,1.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h13b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &3',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_5_4(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h1 )_yt + = -1/72 * Sum ( h10 h11 h12 p6 p7 p8 p9 ) * t ( p6 p7 p8 p9 h1 h10 h11 h12 )_t * y ( h10 h11 h12 h13 p6 p7 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER p9b
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h13b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(4)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)
     &+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h10b
     &-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+h12b
     &-1)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p6b,p7b,p8b,p9b,h1b,h10b,h11b,h12b,p6b_1,p7b
     &_1,p8b_1,p9b_1,h1b_1,h10b_1,h11b_1,h12b_1)
      CALL TCE_RESTRICTED_8(h13b,h10b,h11b,h12b,p6b,p7b,p8b,p9b,h13b_2,h
     &10b_2,h11b_2,h12b_2,p6b_2,p7b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_m
     &b(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_range+h10b-1) 
     &* int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_4',2,MA_ERR)
      IF ((h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h1b-1),8,7,6,5,4,3,2,1,-1.0d0)
      END IF
      IF ((h11b .lt. h1b) .and. (h1b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+h12b-1),7,8,6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h10b .lt. h1b) .and. (h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),6,8,7,5,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),5,8,7,6,4,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &4',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_4',5,MA_ERR)
      IF ((h12b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (p6b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p9b-1),4,3,2,1,8,7,6,5,1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h13b .lt. h12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (p6b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p9b-1),3,4,2,1,8,7,6,5,-1.0d0)
      END IF
      IF ((h10b .le. h13b) .and. (h13b .lt. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (p6b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p9b-1),2,4,3,1,8,7,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (p6b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p9b-1),1,4,3,2,8,7,6,5,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &4',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      nsuperp(4) = 1
      isuperp = 1
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,144.0d0/FACTORIA
     &L(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIA
     &L(nsuperp(4))/FACTORIAL(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(ns
     &ubh(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_5_4',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h1b-1),1,2,-1.0d0/72.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h13b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_5_
     &4',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_5_4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_6(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 h1 )_ytt + = 1 * Sum ( h10 h11 p13 ) * t ( p3 p13 h10 h11 )_t * i2 ( h10 h11 h1 p13 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p13b
      INTEGER h10b
      INTEGER h11b
      INTEGER p3b_1
      INTEGER p13b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h1b_2
      INTEGER p13b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1
     &).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep_
     &y,ieor(irrep_t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p13b = noab+1,noab+nvab
      DO h10b = 1,noab
      DO h11b = h10b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p13b-1) .eq. int_mb(k_spin+
     &h10b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p13b-1),ieor(int_mb
     &(k_sym+h10b-1),int_mb(k_sym+h11b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p13b,h10b,h11b,p3b_1,p13b_1,h10b_1,h11b_
     &1)
      CALL TCE_RESTRICTED_4(h10b,h11b,h1b,p13b,h10b_2,h11b_2,h1b_2,p13b_
     &2)
      dim_common = int_mb(k_range+p13b-1) * int_mb(k_range+h10b-1) * int
     &_mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h1b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6',2,MA_ERR)
      IF ((p13b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p1
     &3b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b
     &-1),2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (p13b_1 - noab - 1 + nvab * (p
     &3b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b
     &-1),1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h1
     &0b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+p13b
     &-1),3,2,1,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6'
     &,6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p3b-1),2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_6_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h10 h11 h1 p13 )_yt + = -1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h10 h11 p5 p13 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h11b
      INTEGER h1b
      INTEGER p13b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER p13b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p13b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1).ne.8)) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p13b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p13b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p5b,h1b,p5b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h10b,h11b,p13b,p5b,h10b_2,h11b_2,p13b_2,p5b_
     &2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+p13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p5b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6_1',5,MA_ERR)
      IF ((p5b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noa
     &b * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+p5b-1),int_mb(k_range+p13b
     &-1),4,2,1,3,1.0d0)
      END IF
      IF ((p13b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (h11b_2 - 1 + noa
     &b * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+p13b-1),int_mb(k_range+p5b
     &-1),3,2,1,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_
     &1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b
     &-1),3,2,4,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p13b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (h10b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_4_6_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h10 h11 h1 p13 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h10b
      INTEGER h11b
      INTEGER h1b
      INTEGER p13b
      length = 0
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p13b = noab+1,noab+nvab
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p13b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p13b = noab+1,noab+nvab
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p13b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p13b - noab - 1 + nvab * (h1b - 1 + noab
     & * (h11b - 1 + noab * (h10b - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * in
     &t_mb(k_range+h1b-1) * int_mb(k_range+p13b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_6_2(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h10 h11 h1 p13 )_yt + = 1/2 * Sum ( h7 p5 p6 ) * t ( p5 p6 h1 h7 )_t * y ( h7 h10 h11 p5 p6 p13 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h11b
      INTEGER h1b
      INTEGER p13b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h7b_1
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h7b_2
      INTEGER p13b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p13b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1).ne.8)) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p13b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p13b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h7b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h7b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h1b,h7b,p5b_1,p6b_1,h1b_1,h7b_1)
      CALL TCE_RESTRICTED_6(h10b,h11b,h7b,p13b,p5b,p6b,h10b_2,h11b_2,h7b
     &_2,p13b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+p13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6_2',2,MA_ERR)
      IF ((h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h1b-1),int_mb(k_range+h7b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_
     &2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6_2',5,MA_ERR)
      IF ((h7b .le. h10b) .and. (p6b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h11b_2 - 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),int_mb(k_range+p13b-1),6,3,2,1,5,4,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (p5b .le. p13b) .and. (p13b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h11b_2 - 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p13b-1),int_mb(k_range+p6b-1),5,3,2,1,6,4,-1.0d0
     &)
      END IF
      IF ((h7b .le. h10b) .and. (p13b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (h11b_2 - 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+p13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (p6b .le. p13b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h11b_2 - 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),int_mb(k_range+p13b-1),6,3,1,2,5,4,-1.0d0
     &)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (p5b .le. p13b) .a
     &nd. (p13b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h11b_2 - 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p13b-1),int_mb(k_range+p6b-1),5,3,1,2,6,4,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (p13b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (h11b_2 - 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+p13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,1,2,6,5,-1.0d0
     &)
      END IF
      IF ((h11b .lt. h7b) .and. (p6b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h7b_2 - 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),int_mb(k_range+p13b-1),6,2,1,3,5,4,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (p5b .le. p13b) .and. (p13b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h7b_2 - 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p13b-1),int_mb(k_range+p6b-1),5,2,1,3,6,4,-1.0d0
     &)
      END IF
      IF ((h11b .lt. h7b) .and. (p13b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (h7b_2 - 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+p13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,2,1,3,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_
     &2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b
     &-1),3,2,4,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p13b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (h10b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_
     &2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_6_3(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h10 h11 h1 p13 )_yt + = -1/12 * Sum ( h8 h9 p5 p6 p7 ) * t ( p5 p6 p7 h1 h8 h9 )_t * y ( h8 h9 h10 h11 p5 p6 p7 p13 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h11b
      INTEGER h1b
      INTEGER p13b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p13b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p13b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1).ne.8)) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p13b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p13b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h8b-1),int
     &_mb(k_sym+h9b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p5b,p6b,p7b,h1b,h8b,h9b,p5b_1,p6b_1,p7b_1,h1
     &b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_8(h10b,h11b,h8b,h9b,p13b,p5b,p6b,p7b,h10b_2,h1
     &1b_2,h8b_2,h9b_2,p13b_2,p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+p13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6_3',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),5,6,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),4,6,5,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_
     &3',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6_3',5,MA_ERR)
      IF ((h9b .le. h10b) .and. (p7b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p13b-1),8,4,3,2,1,7,6,5,1.0d0)
      END IF
      IF ((h9b .le. h10b) .and. (p6b .le. p13b) .and. (p13b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p13b
     &-1),int_mb(k_range+p7b-1),7,4,3,2,1,8,6,5,-1.0d0)
      END IF
      IF ((h9b .le. h10b) .and. (p5b .le. p13b) .and. (p13b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p13b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,3,2,1,8,7,5,1.0d0)
      END IF
      IF ((h9b .le. h10b) .and. (p13b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p13b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p13b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,3,2,1,8,7,6,-1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h10b .lt. h9b) .and. (h9b .le. h11b) .a
     &nd. (p7b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p13b-1),8,4,2,3,1,7,6,5,-1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h10b .lt. h9b) .and. (h9b .le. h11b) .a
     &nd. (p6b .le. p13b) .and. (p13b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p13b
     &-1),int_mb(k_range+p7b-1),7,4,2,3,1,8,6,5,1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h10b .lt. h9b) .and. (h9b .le. h11b) .a
     &nd. (p5b .le. p13b) .and. (p13b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p13b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,2,3,1,8,7,5,-1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h10b .lt. h9b) .and. (h9b .le. h11b) .a
     &nd. (p13b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p13b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p13b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,2,3,1,8,7,6,1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h11b .lt. h9b) .and. (p7b .le. p13b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p13b-1),8,3,2,4,1,7,6,5,1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h11b .lt. h9b) .and. (p6b .le. p13b) .a
     &nd. (p13b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p13b
     &-1),int_mb(k_range+p7b-1),7,3,2,4,1,8,6,5,-1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h11b .lt. h9b) .and. (p5b .le. p13b) .a
     &nd. (p13b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p13b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,3,2,4,1,8,7,5,1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h11b .lt. h9b) .and. (p13b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p13b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p13b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,3,2,4,1,8,7,6,-1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h9b .le. h11b) .and. (p7b .le. p13b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p13b-1),8,4,1,3,2,7,6,5,1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h9b .le. h11b) .and. (p6b .le. p13b) .a
     &nd. (p13b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p13b
     &-1),int_mb(k_range+p7b-1),7,4,1,3,2,8,6,5,-1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h9b .le. h11b) .and. (p5b .le. p13b) .a
     &nd. (p13b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p13b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,1,3,2,8,7,5,1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h9b .le. h11b) .and. (p13b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p13b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p13b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,1,3,2,8,7,6,-1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h8b .le. h11b) .and. (h11b .lt. h9b) .a
     &nd. (p7b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p13b-1),8,3,1,4,2,7,6,5,-1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h8b .le. h11b) .and. (h11b .lt. h9b) .a
     &nd. (p6b .le. p13b) .and. (p13b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p13b
     &-1),int_mb(k_range+p7b-1),7,3,1,4,2,8,6,5,1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h8b .le. h11b) .and. (h11b .lt. h9b) .a
     &nd. (p5b .le. p13b) .and. (p13b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p13b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,3,1,4,2,8,7,5,-1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h8b .le. h11b) .and. (h11b .lt. h9b) .a
     &nd. (p13b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p13b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p13b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,3,1,4,2,8,7,6,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (p7b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p13b-1),8,2,1,4,3,7,6,5,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (p6b .le. p13b) .and. (p13b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p13b
     &-1),int_mb(k_range+p7b-1),7,2,1,4,3,8,6,5,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (p5b .le. p13b) .and. (p13b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p13b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,2,1,4,3,8,7,5,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (p13b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p13b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p13b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,2,1,4,3,8,7,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_
     &3',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_6_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b
     &-1),3,2,4,1,-1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p13b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (h10b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_6_
     &3',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_6_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_7(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 h1 )_ytt + = -1/6 * Sum ( h6 h7 h8 p13 p14 ) * t ( p3 p13 p14 h6 h7 h8 )_t * i2 ( h6 h7 h8 h1 p13 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p13b
      INTEGER p14b
      INTEGER h6b
      INTEGER h7b
      INTEGER h8b
      INTEGER p3b_1
      INTEGER p13b_1
      INTEGER p14b_1
      INTEGER h6b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h1b_2
      INTEGER p13b_2
      INTEGER p14b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1
     &).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep_
     &y,ieor(irrep_t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-
     &1) .eq. int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p13b-1),ieor(int_mb
     &(k_sym+p14b-1),ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),i
     &nt_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p13b,p14b,h6b,h7b,h8b,p3b_1,p13b_1,p14b_
     &1,h6b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_6(h6b,h7b,h8b,h1b,p13b,p14b,h6b_2,h7b_2,h8b_2,
     &h1b_2,p13b_2,p14b_2)
      dim_common = int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1) * int
     &_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h1b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_7',2,MA_ERR)
      IF ((p14b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p13b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p14b-1),int_mb(k_range+p3b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),3,6,5,4,2,1,1.0d0)
      END IF
      IF ((p13b .lt. p3b) .and. (p3b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p14b_1 - no
     &ab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p13b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p14b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),2,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p14b_1 - no
     &ab - 1 + nvab * (p13b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+p14b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),1,6,5,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_7',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (h1b_2 - 1 + noa
     &b * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+p14b-1),4,3,2,1,6,5,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p13b .eq. p14b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h6b .eq. h7b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(n
     &subh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_
     &b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_7',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_7',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_7',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p3b-1),2,1,-1.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_7',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_7_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h7 h8 h1 p13 p14 )_yt + = 1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h6 h7 h8 p5 p13 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p13b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER p13b_2
      INTEGER p14b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1)+
     &int_mb(k_spin+p14b-1).ne.12)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p13b-1),in
     &t_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h8b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p13b-1) * int_
     &mb(k_range+p14b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p5b,h1b,p5b_1,h1b_1)
      CALL TCE_RESTRICTED_6(h6b,h7b,h8b,p13b,p14b,p5b,h6b_2,h7b_2,h8b_2,
     &p13b_2,p14b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+h8b-1) * int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_7_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p5b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_7_1',5,MA_ERR)
      IF ((p5b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+p14b-1),6,5,3,2,1,4,1.0d0)
      END IF
      IF ((p13b .lt. p5b) .and. (p5b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p13b_2 - noab - 
     &1 + nvab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+p13b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p14b-1),6,4,3,2,1,5,-1.0d0)
      END IF
      IF ((p14b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p13b_2 - noab - 
     &1 + nvab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+p13b-1
     &),int_mb(k_range+p14b-1),int_mb(k_range+p5b-1),5,4,3,2,1,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_
     &1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_7_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_7_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_7_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p13b - noab - 1 + nvab * (h1b - 1 + noab * (h
     &8b - 1 + noab * (h7b - 1 + noab * (h6b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_7_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_4_7_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h7 h8 h1 p13 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p13b
      INTEGER p14b
      length = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p13b-1),in
     &t_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1)+
     &int_mb(k_spin+p14b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p13b-1),in
     &t_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1)+
     &int_mb(k_spin+p14b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p14b - noab - 1 + nvab * (p13b - noab - 
     &1 + nvab * (h1b - 1 + noab * (h8b - 1 + noab * (h7b - 1 + noab * (
     &h6b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_
     &mb(k_range+h8b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p13b-1)
     & * int_mb(k_range+p14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_7_2(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h7 h8 h1 p13 p14 )_yt + = 1/2 * Sum ( h12 p10 p11 ) * t ( p10 p11 h1 h12 )_t * y ( h6 h7 h8 h12 p10 p11 p13 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p13b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p11b
      INTEGER h12b
      INTEGER p10b_1
      INTEGER p11b_1
      INTEGER h1b_1
      INTEGER h12b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h12b_2
      INTEGER p13b_2
      INTEGER p14b_2
      INTEGER p10b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1)+
     &int_mb(k_spin+p14b-1).ne.12)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p13b-1),in
     &t_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h8b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p13b-1) * int_
     &mb(k_range+p14b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO p11b = p10b,noab+nvab
      DO h12b = 1,noab
      IF (int_mb(k_spin+p10b-1)+int_mb(k_spin+p11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p10b-1),ieor(int_mb(k_sym+p11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h12b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p10b,p11b,h1b,h12b,p10b_1,p11b_1,h1b_1,h12b_
     &1)
      CALL TCE_RESTRICTED_8(h6b,h7b,h8b,h12b,p13b,p14b,p10b,p11b,h6b_2,h
     &7b_2,h8b_2,h12b_2,p13b_2,p14b_2,p10b_2,p11b_2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+p11b-1) * int
     &_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+h8b-1) * int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_7_2',2,MA_ERR)
      IF ((h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (p11b_1 - noab - 1 + nvab * (p1
     &0b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h1b
     &-1),4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p11b_1 - noab - 1 + nvab * (p1
     &0b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+h1b-1),int_mb(k_range+h12b
     &-1),3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_
     &2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_7_2',5,MA_ERR)
      IF ((h12b .lt. h6b) .and. (p11b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p11b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p13
     &b-1),int_mb(k_range+p14b-1),8,7,4,3,2,1,6,5,-1.0d0)
      END IF
      IF ((h12b .lt. h6b) .and. (p10b .le. p13b) .and. (p13b .lt. p11b) 
     &.and. (p11b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p13b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p13b-1),int_mb(k_range+p11
     &b-1),int_mb(k_range+p14b-1),8,6,4,3,2,1,7,5,1.0d0)
      END IF
      IF ((h12b .lt. h6b) .and. (p10b .le. p13b) .and. (p14b .lt. p11b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p13b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p13b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p11b-1),7,6,4,3,2,1,8,5,-1.0d0)
      END IF
      IF ((h12b .lt. h6b) .and. (p13b .lt. p10b) .and. (p11b .le. p14b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p10b-1),int_mb(k_range+p11
     &b-1),int_mb(k_range+p14b-1),8,5,4,3,2,1,7,6,-1.0d0)
      END IF
      IF ((h12b .lt. h6b) .and. (p13b .lt. p10b) .and. (p10b .le. p14b) 
     &.and. (p14b .lt. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p10b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p11b-1),7,5,4,3,2,1,8,6,1.0d0)
      END IF
      IF ((h12b .lt. h6b) .and. (p14b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p14b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p14b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p11b-1),6,5,4,3,2,1,8,7,-1.0d0)
      END IF
      IF ((h6b .le. h12b) .and. (h12b .lt. h7b) .and. (p11b .le. p13b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p11b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p13
     &b-1),int_mb(k_range+p14b-1),8,7,4,3,1,2,6,5,1.0d0)
      END IF
      IF ((h6b .le. h12b) .and. (h12b .lt. h7b) .and. (p10b .le. p13b) .
     &and. (p13b .lt. p11b) .and. (p11b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p13b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p13b-1),int_mb(k_range+p11
     &b-1),int_mb(k_range+p14b-1),8,6,4,3,1,2,7,5,-1.0d0)
      END IF
      IF ((h6b .le. h12b) .and. (h12b .lt. h7b) .and. (p10b .le. p13b) .
     &and. (p14b .lt. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p13b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p13b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p11b-1),7,6,4,3,1,2,8,5,1.0d0)
      END IF
      IF ((h6b .le. h12b) .and. (h12b .lt. h7b) .and. (p13b .lt. p10b) .
     &and. (p11b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p10b-1),int_mb(k_range+p11
     &b-1),int_mb(k_range+p14b-1),8,5,4,3,1,2,7,6,1.0d0)
      END IF
      IF ((h6b .le. h12b) .and. (h12b .lt. h7b) .and. (p13b .lt. p10b) .
     &and. (p10b .le. p14b) .and. (p14b .lt. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p10b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p11b-1),7,5,4,3,1,2,8,6,-1.0d0)
      END IF
      IF ((h6b .le. h12b) .and. (h12b .lt. h7b) .and. (p14b .lt. p10b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p14b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p14b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p11b-1),6,5,4,3,1,2,8,7,1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p11b .le. p13b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p11b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p13
     &b-1),int_mb(k_range+p14b-1),8,7,4,2,1,3,6,5,-1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p10b .le. p13b) .
     &and. (p13b .lt. p11b) .and. (p11b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p13b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p13b-1),int_mb(k_range+p11
     &b-1),int_mb(k_range+p14b-1),8,6,4,2,1,3,7,5,1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p10b .le. p13b) .
     &and. (p14b .lt. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p13b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p13b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p11b-1),7,6,4,2,1,3,8,5,-1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p13b .lt. p10b) .
     &and. (p11b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p10b-1),int_mb(k_range+p11
     &b-1),int_mb(k_range+p14b-1),8,5,4,2,1,3,7,6,-1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p13b .lt. p10b) .
     &and. (p10b .le. p14b) .and. (p14b .lt. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p10b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p11b-1),7,5,4,2,1,3,8,6,1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p14b .lt. p10b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p14b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p14b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p11b-1),6,5,4,2,1,3,8,7,-1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (p11b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p11b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p13
     &b-1),int_mb(k_range+p14b-1),8,7,3,2,1,4,6,5,1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (p10b .le. p13b) .and. (p13b .lt. p11b) 
     &.and. (p11b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p13b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p13b-1),int_mb(k_range+p11
     &b-1),int_mb(k_range+p14b-1),8,6,3,2,1,4,7,5,-1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (p10b .le. p13b) .and. (p14b .lt. p11b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p13b_2 - noab -
     & 1 + nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p13b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p11b-1),7,6,3,2,1,4,8,5,1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (p13b .lt. p10b) .and. (p11b .le. p14b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p10b-1),int_mb(k_range+p11
     &b-1),int_mb(k_range+p14b-1),8,5,3,2,1,4,7,6,1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (p13b .lt. p10b) .and. (p10b .le. p14b) 
     &.and. (p14b .lt. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p10b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p11b-1),7,5,3,2,1,4,8,6,-1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (p14b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p14b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p14b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p11b-1),6,5,3,2,1,4,8,7,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_
     &2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p10b .eq. p11b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_7_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_7_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_7_2',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,1.0d0/2
     &.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p13b - noab - 1 + nvab * (h1b - 1 + noab * (h
     &8b - 1 + noab * (h7b - 1 + noab * (h6b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_7_
     &2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_7_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_8(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 h1 )_ytt + = 1/72 * Sum ( h9 h10 h11 h12 p6 p7 p8 ) * t ( p3 p6 p7 p8 h9 h10 h11 h12 )_t * i2 ( h9 h10 h11 h12 h1 p6 p7 p8 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p3b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER h1b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(4)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1
     &).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep_
     &y,ieor(irrep_t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b
     &-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+h9b-1),ieo
     &r(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+h12b
     &-1)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p3b,p6b,p7b,p8b,h9b,h10b,h11b,h12b,p3b_1,p6b
     &_1,p7b_1,p8b_1,h9b_1,h10b_1,h11b_1,h12b_1)
      CALL TCE_RESTRICTED_8(h9b,h10b,h11b,h12b,h1b,p6b,p7b,p8b,h9b_2,h10
     &b_2,h11b_2,h12b_2,h1b_2,p6b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_m
     &b(k_range+p8b-1) * int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) 
     &* int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h1b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_8',2,MA_ERR)
      IF ((p8b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 
     &1 + noab * (p3b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),4,8,7,6,5,3,2,1,-1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (p3b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 
     &1 + noab * (p8b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (
     &p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p3b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),3,8,7,6,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 
     &1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (
     &p3b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),2,8,7,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 
     &1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (
     &p6b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),1,8,7,6,5,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_8',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1 + no
     &ab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),5,4,3,2,1,8,7,6,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      nsubh(4) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,144.0d0/FACTORIA
     &L(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIA
     &L(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(nsubh(3))/FACTORIAL(nsub
     &h(4)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d
     &0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_8',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_8',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_8',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p3b-1),2,1,1.0d0/72.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_8',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_4_8_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h9 h10 h11 h12 h1 p6 p7 p8 )_yt + = -1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h9 h10 h11 h12 p5 p6 p7 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h9b
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h1b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).n
     &e.16)) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p
     &6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb(k_sym+h1b-1),
     &ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+p8b
     &-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_r
     &ange+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_range+h1b-1) * in
     &t_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1
     &)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p5b,h1b,p5b_1,h1b_1)
      CALL TCE_RESTRICTED_8(h9b,h10b,h11b,h12b,p6b,p7b,p8b,p5b,h9b_2,h10
     &b_2,h11b_2,h12b_2,p6b_2,p7b_2,p8b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_range+p6b-1)
     & * int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_8_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p5b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_8_1',5,MA_ERR)
      IF ((p5b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),8,7,6,4,3,2,1,5,1.0d0)
      END IF
      IF ((p6b .lt. p5b) .and. (p5b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p6b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),8,7,5,4,3,2,1,6,-1.0d0)
      END IF
      IF ((p7b .lt. p5b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (p6b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p8b-1),8,6,5,4,3,2,1,7,1.0d0)
      END IF
      IF ((p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (p6b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p5b-1),7,6,5,4,3,2,1,8,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8_
     &1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_8_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_8_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_4_8_1',9,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p6b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h10b-1),int_mb(k_range+h9b
     &-1),int_mb(k_range+h1b-1),7,6,5,4,8,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (p7b - noab - 1 + nvab * (p6b - noab - 1 + nvab
     & * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1 + noab * (h10b -
     & 1 + noab * (h9b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_4_8_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_4_8_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h9 h10 h11 h12 h1 p6 p7 p8 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h9b
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      length = 0
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p
     &6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb(k_sym+h1b-1),
     &ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+p8b
     &-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h1b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).n
     &e.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_4_8_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p
     &6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb(k_sym+h1b-1),
     &ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+p8b
     &-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h1b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).n
     &e.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p8b - noab - 1 + nvab * (p7b - noab - 1 
     &+ nvab * (p6b - noab - 1 + nvab * (h1b - 1 + noab * (h12b - 1 + no
     &ab * (h11b - 1 + noab * (h10b - 1 + noab * (h9b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int
     &_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_range+h1b-
     &1) * int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_mb(k_rang
     &e+p8b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = -1 * P( 2 ) * Sum ( h13 ) * t ( p3 h13 )_t * i1 ( h13 p4 h1 h2 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h13b
      INTEGER p3b_1
      INTEGER h13b_1
      INTEGER p4b_2
      INTEGER h13b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h13b = 1,noab
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h13b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h13b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p3b,h13b,p3b_1,h13b_1)
      CALL TCE_RESTRICTED_4(p4b,h13b,h1b,h2b,p4b_2,h13b_2,h1b_2,h2b_2)
      dim_common = int_mb(k_range+h13b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (p3b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h13b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h2b_2
     & - 1 + noab * (h1b_2 - 1 + noab * (h13b_2 - 1 + noab * (p4b_2 - no
     &ab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5',6
     &,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5',9,MA_ERR)
      IF ((p3b .le. p4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p3b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,3,4,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p3b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_1(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_yt + = -1 * Sum ( p5 ) * t ( p3 p5 h1 h2 )_t * y ( h13 p5 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h13b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p5b,h1b,h2b,p3b_1,p5b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_2(h13b,p5b,h13b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_1',2,MA_ERR)
      IF ((p5b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,1,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_1'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (h13b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+p5b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_1'
     &,6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1
     &),4,1,3,2,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_1(l_a_offset,k_a_offset,si
     &ze)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = h2b - 1 + noab * (h1b - 1 + noab * (h13b
     & - 1 + noab * (p3b - noab - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int
     &_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_2(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_yt + = 1/2 * Sum ( h7 p5 p6 ) * t ( p3 p5 p6 h1 h2 h7 )_t * y ( h7 h13 p5 p6 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h7b_1
      INTEGER h13b_2
      INTEGER h7b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h7b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h7b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p5b,p6b,h1b,h2b,h7b,p3b_1,p5b_1,p6b_1,h1
     &b_1,h2b_1,h7b_1)
      CALL TCE_RESTRICTED_4(h13b,h7b,p5b,p6b,h13b_2,h7b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_2',2,MA_ERR)
      IF ((p6b .lt. p3b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,3,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h1b .le. h7b) .and. (h7b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),6,4,3,5,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),5,4,3,6,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,2,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h7b) .and.
     & (h7b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),6,4,2,5,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),5,4,2,6,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,1,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h7b) .and. (h7b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),6,4,1,5,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),5,4,1,6,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_2'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_2',5,MA_ERR)
      IF ((h7b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab
     & * (h7b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),2,1,4,3,1.0d0)
      END IF
      IF ((h13b .lt. h7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab 
     &* (h13b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),1,2,4,3,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_2'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1
     &),4,1,3,2,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_2'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_3(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_yt + = -1/12 * Sum ( h8 h9 p5 p6 p7 ) * t ( p3 p5 p6 p7 h1 h2 h8 h9 )_t * y ( h8 h9 h13 p5 p6 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h13b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     &+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-
     &1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h8b-1),int_mb(k_sym+h9b-1)
     &))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p3b,p5b,p6b,p7b,h1b,h2b,h8b,h9b,p3b_1,p5b_1,
     &p6b_1,p7b_1,h1b_1,h2b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_6(h13b,h8b,h9b,p5b,p6b,p7b,h13b_2,h8b_2,h9b_2,
     &p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_3',2,MA_ERR)
      IF ((p7b .lt. p3b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,4,6,5,3,2,1,-1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,6,4,7,5,3,2,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h8b .lt. h1b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,6,4,8,5,3,2,1,-1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h1b .le. h8b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,5,4,7,6,3,2,1,-1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h1b .le. h8b) .and. (h8b .lt. h2b) .and.
     & (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,5,4,8,6,3,2,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,5,4,8,7,3,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,3,6,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,6,3,7,5,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h8b .lt. h1b) .and.
     & (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,6,3,8,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h1b .le. h8b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,5,3,7,6,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h1b .le. h8b) .and.
     & (h8b .lt. h2b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,5,3,8,6,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,5,3,8,7,4,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,2,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,6,2,7,5,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h8b .lt. h1b) .and.
     & (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,6,2,8,5,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h8b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,5,2,7,6,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h8b) .and.
     & (h8b .lt. h2b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,5,2,8,6,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,5,2,8,7,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,1,6,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,6,1,7,5,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h8b .lt. h1b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,6,1,8,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h8b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,5,1,7,6,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h8b) .and. (h8b .lt. h2b) .and.
     & (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,5,1,8,6,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,5,1,8,7,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_3'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_3',5,MA_ERR)
      IF ((h9b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h13b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),3,2,1,6,5,4,1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),2,3,1,6,5,4,-1.0d0)
      END IF
      IF ((h13b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h13b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),1,3,2,6,5,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_3'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1
     &),4,1,3,2,-1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_3'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_ytt + = 1/4 * Sum ( h14 ) * t ( p3 h14 )_t * i2 ( h13 h14 h1 h2 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h14b
      INTEGER p3b_1
      INTEGER h14b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h14b = 1,noab
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+h14b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+h14b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p3b,h14b,p3b_1,h14b_1)
      CALL TCE_RESTRICTED_4(h13b,h14b,h1b,h2b,h13b_2,h14b_2,h1b_2,h2b_2)
      dim_common = int_mb(k_range+h14b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (p3b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h14b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4',5,MA_ERR)
      IF ((h14b .lt. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h2b_2
     & - 1 + noab * (h1b_2 - 1 + noab * (h13b_2 - 1 + noab * (h14b_2 - 1
     &)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-
     &1),4,3,2,1,-1.0d0)
      END IF
      IF ((h13b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h2b_2
     & - 1 + noab * (h1b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1
     &)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-
     &1),4,3,1,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4'
     &,6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h13b-1),int_mb(k_range+p3b-1
     &),4,3,2,1,1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h14 h1 h2 )_yt + = -1 * Sum ( p7 p8 ) * t ( p7 p8 h1 h2 )_t * y ( h13 h14 p7 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p7b,p8b,h1b,h2b,p7b_1,p8b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(h13b,h14b,p7b,p8b,h13b_2,h14b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab
     & * (h13b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-
     &1),2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &1',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h14b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-
     &1),2,1,4,3,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h14b - 1 + noab * (h13b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_4_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h14 h1 h2 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER h2b
      length = 0
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = h2b - 1 + noab * (h1b - 1 + noab * (h14b
     & - 1 + noab * (h13b - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * in
     &t_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_2(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h14 h1 h2 )_yt + = -1/3 * Sum ( h10 p7 p8 p9 ) * t ( p7 p8 p9 h1 h2 h10 )_t * y ( h10 h13 h14 p7 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER p9b
      INTEGER h10b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h10b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h10b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h10b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+p9b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h10b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p7b,p8b,p9b,h1b,h2b,h10b,p7b_1,p8b_1,p9b_1,h
     &1b_1,h2b_1,h10b_1)
      CALL TCE_RESTRICTED_6(h13b,h14b,h10b,p7b,p8b,p9b,h13b_2,h14b_2,h10
     &b_2,p7b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+p9b-1) * int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_2',2,MA_ERR)
      IF ((h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - no
     &ab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h10b) .and. (h10b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - no
     &ab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),6,4,5,3,2,1,-1.0d0)
      END IF
      IF ((h2b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - no
     &ab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),5,4,6,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_2',5,MA_ERR)
      IF ((h10b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h14b_2 - 1 + noab * (h13b_2 - 1 + noab * (h10b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),3,2,1,6,5,4,1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (h10b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h14b_2 - 1 + noab * (h10b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h14b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),3,1,2,6,5,4,-1.0d0
     &)
      END IF
      IF ((h14b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h10b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),2,1,3,6,5,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,6.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3)),dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h14b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-
     &1),2,1,4,3,-1.0d0/3.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h14b - 1 + noab * (h13b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_3(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h14 h1 h2 )_yt + = -1/24 * Sum ( h11 h12 p7 p8 p9 p10 ) * t ( p7 p8 p9 p10 h1 h2 h11 h12 )_t * y ( h11 h12 h13 h14 p7 p8 p9 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER p9b
      INTEGER p10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(4)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p10b = p9b,noab+nvab
      DO h11b = 1,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)
     &+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b
     &-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+p9b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+h12b
     &-1)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p7b,p8b,p9b,p10b,h1b,h2b,h11b,h12b,p7b_1,p8b
     &_1,p9b_1,p10b_1,h1b_1,h2b_1,h11b_1,h12b_1)
      CALL TCE_RESTRICTED_8(h13b,h14b,h11b,h12b,p7b,p8b,p9b,p10b,h13b_2,
     &h14b_2,h11b_2,h12b_2,p7b_2,p8b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+p9b-1) * int_mb(k_range+p10b-1) * int_mb(k_range+h11b-1)
     & * int_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_3',2,MA_ERR)
      IF ((h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1
     & + noab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h1b
     &-1),int_mb(k_range+h2b-1),8,7,6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h11b .lt. h1b) .and. (h1b .le. h12b) .and. (h12b .lt. h2b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1
     & + noab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h2b-1),8,6,7,5,4,3,2,1,-1.0d0)
      END IF
      IF ((h11b .lt. h1b) .and. (h2b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1
     & + noab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-
     &1),int_mb(k_range+h12b-1),7,6,8,5,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h11b) .and. (h12b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h2b-1),8,5,7,6,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h11b) .and. (h11b .lt. h2b) .and. (h2b .le. h12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),int_mb(k_range+h2b-
     &1),int_mb(k_range+h12b-1),7,5,8,6,4,3,2,1,-1.0d0)
      END IF
      IF ((h2b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),6,5,8,7,4,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &3',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_3',5,MA_ERR)
      IF ((h12b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),4,3,2,1,8,7,6,5,1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h13b .lt. h12b) .and. (h12b .le. h14b)
     &) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),4,2,3,1,8,7,6,5,-1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h14b .lt. h12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p7b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),3,2,4,1,8,7,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (h12b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),4,1,3,2,8,7,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (h11b .le. h14b) .and. (h14b .lt. h12b)
     &) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p7b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h14b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),3,1,4,2,8,7,6,5,-1.0d0)
      END IF
      IF ((h14b .lt. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p7b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),2,1,4,3,8,7,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &3',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      nsuperp(4) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,48.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsuperp(4))/FACTORIAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_so
     &rt),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),
     &dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h14b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-
     &1),2,1,4,3,-1.0d0/24.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h14b - 1 + noab * (h13b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &3',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_4(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h14 h1 h2 )_ytt + = -1 * P( 2 ) * Sum ( p5 ) * t ( p5 h1 )_t * i3 ( h13 h14 h2 p5 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h2b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p5b,h1b,p5b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h13b,h14b,h2b,p5b,h13b_2,h14b_2,h2b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p5b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (h2b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13
     &b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h2b-1),int_mb(k_range+p5b-
     &1),3,2,1,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h14b - 1 + noab * (h13b - 1)))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),3,2,1,4,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h14b - 1 + noab * (h13b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_4_1(d_a,k_a_offset,d_b,k_b_offs
     &et,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h13 h14 h1 p5 )_yt + = 1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h13 h14 p5 p6 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p5b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      IF (int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p6b,h1b,p6b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h13b,h14b,p5b,p6b,h13b_2,h14b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p6b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_1',5,MA_ERR)
      IF ((p6b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab
     & * (h13b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-
     &1),4,2,1,3,-1.0d0)
      END IF
      IF ((p5b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab
     & * (h13b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p5b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h14b - 1 + noab * (h13b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_4_4_1(l_a_offset,k_a_offse
     &t,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h13 h14 h1 p5 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      length = 0
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p5b - noab - 1 + nvab * (h1b - 1 + noab 
     &* (h14b - 1 + noab * (h13b - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * in
     &t_mb(k_range+h1b-1) * int_mb(k_range+p5b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_4_2(d_a,k_a_offset,d_b,k_b_offs
     &et,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h13 h14 h1 p5 )_yt + = 3/4 * Sum ( h10 p8 p9 ) * t ( p8 p9 h1 h10 )_t * i4 ( h10 h13 h14 p5 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER h10b
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h10b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h10b_2
      INTEGER p5b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p5b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p8b,p9b,h1b,h10b,p8b_1,p9b_1,h1b_1,h10b_1)
      CALL TCE_RESTRICTED_6(h13b,h14b,h10b,p5b,p8b,p9b,h13b_2,h14b_2,h10
     &b_2,p5b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_m
     &b(k_range+h10b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_2',2,MA_ERR)
      IF ((h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_2',5,MA_ERR)
      IF ((h10b .le. h13b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h14b_2 - 1 + noab * (h13b_2 - 1 + noab * (h10b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),6,3,2,1,5,4,1.0d0)
      END IF
      IF ((h10b .le. h13b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h14b_2 - 1 + noab * (h13b_2 - 1 + noab * (h10b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),5,3,2,1,6,4,-1.0d0
     &)
      END IF
      IF ((h10b .le. h13b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h14b_2 - 1 + noab * (h13b_2 - 1 + noab * (h10b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (h10b .le. h14b) .and. (p9b .lt. p5b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h14b_2 - 1 + noab * (h10b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h14b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),6,3,1,2,5,4,-1.0d0
     &)
      END IF
      IF ((h13b .lt. h10b) .and. (h10b .le. h14b) .and. (p8b .lt. p5b) .
     &and. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h14b_2 - 1 + noab * (h10b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h14b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),5,3,1,2,6,4,1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (h10b .le. h14b) .and. (p5b .le. p8b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h14b_2 - 1 + noab * (h10b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h14b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),4,3,1,2,6,5,-1.0d0
     &)
      END IF
      IF ((h14b .lt. h10b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h10b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),6,2,1,3,5,4,1.0d0)
      END IF
      IF ((h14b .lt. h10b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h10b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),5,2,1,3,6,4,-1.0d0
     &)
      END IF
      IF ((h14b .lt. h10b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h10b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),4,2,1,3,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,3.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p5b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h14b - 1 + noab * (h13b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_4_2_1(d_a,k_a_offset,d_c,k_c_of
     &fset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h10 h13 h14 p5 p8 p9 )_y + = 1 * y ( h10 h13 h14 p5 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p8b
      INTEGER p9b
      INTEGER dimc
      INTEGER h10b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER p5b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h13b = h10b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1
     &)+int_mb(k_spin+p9b-1).ne.12)) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p
     &9b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_m
     &b(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p8b-1),
     &int_mb(k_sym+p9b-1)))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h13b-1) * int_mb(k_
     &range+h14b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p8b-1) * in
     &t_mb(k_range+p9b-1)
      CALL TCE_RESTRICTED_6(h10b,h13b,h14b,p5b,p8b,p9b,h10b_1,h13b_1,h14
     &b_1,p5b_1,p8b_1,p9b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h13b-1) * int_
     &mb(k_range+h14b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p8b-1)
     & * int_mb(k_range+p9b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_2_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p9b_1
     & - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 
     &+ nvab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (h10b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_2_1',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_2_1',3,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+h14b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (p8b - noab - 1 + nvab * (p5b - noab - 1 + nvab
     & * (h14b - 1 + noab * (h13b - 1 + noab * (h10b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_2_1',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_2_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_4_4_2_1(l_a_offset,k_a_off
     &set,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h10 h13 h14 p5 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h10b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p8b
      INTEGER p9b
      length = 0
      DO h10b = 1,noab
      DO h13b = h10b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p
     &9b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_m
     &b(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p8b-1),
     &int_mb(k_sym+p9b-1)))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1
     &)+int_mb(k_spin+p9b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_2_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h10b = 1,noab
      DO h13b = h10b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p
     &9b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_m
     &b(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p8b-1),
     &int_mb(k_sym+p9b-1)))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1
     &)+int_mb(k_spin+p9b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p9b - noab - 1 + nvab * (p8b - noab - 1 
     &+ nvab * (p5b - noab - 1 + nvab * (h14b - 1 + noab * (h13b - 1 + n
     &oab * (h10b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h10b-1) * int_mb(k_range+h13b-1) * in
     &t_mb(k_range+h14b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p8b-
     &1) * int_mb(k_range+p9b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_4_2_2(d_a,k_a_offset,d_c,k_c_of
     &fset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h10 h13 h14 p5 p8 p9 )_y + = 1/3 * y ( h10 h13 h14 p5 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p8b
      INTEGER p9b
      INTEGER dimc
      INTEGER h10b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER p5b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h13b = h10b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1
     &)+int_mb(k_spin+p9b-1).ne.12)) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p
     &9b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_m
     &b(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p8b-1),
     &int_mb(k_sym+p9b-1)))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h13b-1) * int_mb(k_
     &range+h14b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p8b-1) * in
     &t_mb(k_range+p9b-1)
      CALL TCE_RESTRICTED_6(h10b,h13b,h14b,p5b,p8b,p9b,h10b_1,h13b_1,h14
     &b_1,p5b_1,p8b_1,p9b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h13b-1) * int_
     &mb(k_range+h14b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p8b-1)
     & * int_mb(k_range+p9b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_2_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_2_2',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p9b_1
     & - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 
     &+ nvab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (h10b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_2_2',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_2_2',3,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+h14b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),6,5,4,3,2,1,1.0d0/
     &3.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (p8b - noab - 1 + nvab * (p5b - noab - 1 + nvab
     & * (h14b - 1 + noab * (h13b - 1 + noab * (h10b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_2_2',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_2_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_4_3(d_a,k_a_offset,d_b,k_b_offs
     &et,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h13 h14 h1 p5 )_yt + = 1/8 * Sum ( h11 h12 p8 p9 p10 ) * t ( p8 p9 p10 h1 h11 h12 )_t * i4 ( h11 h12 h13 h14 p5 p8 p9 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER p10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p5b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p5b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p10b = p9b,noab+nvab
      DO h11b = 1,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1
     &) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1
     &2b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+p10b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h11b-1),i
     &nt_mb(k_sym+h12b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p8b,p9b,p10b,h1b,h11b,h12b,p8b_1,p9b_1,p10b_
     &1,h1b_1,h11b_1,h12b_1)
      CALL TCE_RESTRICTED_8(h13b,h14b,h11b,h12b,p5b,p8b,p9b,p10b,h13b_2,
     &h14b_2,h11b_2,h12b_2,p5b_2,p8b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_m
     &b(k_range+p10b-1) * int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1
     &)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_3',2,MA_ERR)
      IF ((h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h11b .lt. h1b) .and. (h1b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),5,6,4,3,2,1,-1.0d0
     &)
      END IF
      IF ((h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),4,6,5,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_3',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_3',5,MA_ERR)
      IF ((h12b .le. h13b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p1
     &0b-1),int_mb(k_range+p5b-1),8,4,3,2,1,7,6,5,-1.0d0)
      END IF
      IF ((h12b .le. h13b) .and. (p9b .lt. p5b) .and. (p5b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5
     &b-1),int_mb(k_range+p10b-1),7,4,3,2,1,8,6,5,1.0d0)
      END IF
      IF ((h12b .le. h13b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),6,4,3,2,1,8,7,5,-1.0d0)
      END IF
      IF ((h12b .le. h13b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),5,4,3,2,1,8,7,6,1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h13b .lt. h12b) .and. (h12b .le. h14b)
     & .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p1
     &0b-1),int_mb(k_range+p5b-1),8,4,2,3,1,7,6,5,1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h13b .lt. h12b) .and. (h12b .le. h14b)
     & .and. (p9b .lt. p5b) .and. (p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5
     &b-1),int_mb(k_range+p10b-1),7,4,2,3,1,8,6,5,-1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h13b .lt. h12b) .and. (h12b .le. h14b)
     & .and. (p8b .lt. p5b) .and. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),6,4,2,3,1,8,7,5,1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h13b .lt. h12b) .and. (h12b .le. h14b)
     & .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),5,4,2,3,1,8,7,6,-1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h14b .lt. h12b) .and. (p10b .lt. p5b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p1
     &0b-1),int_mb(k_range+p5b-1),8,3,2,4,1,7,6,5,-1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h14b .lt. h12b) .and. (p9b .lt. p5b) .
     &and. (p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5
     &b-1),int_mb(k_range+p10b-1),7,3,2,4,1,8,6,5,1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h14b .lt. h12b) .and. (p8b .lt. p5b) .
     &and. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),6,3,2,4,1,8,7,5,-1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h14b .lt. h12b) .and. (p5b .le. p8b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),5,3,2,4,1,8,7,6,1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (h12b .le. h14b) .and. (p10b .lt. p5b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p1
     &0b-1),int_mb(k_range+p5b-1),8,4,1,3,2,7,6,5,-1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (h12b .le. h14b) .and. (p9b .lt. p5b) .
     &and. (p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5
     &b-1),int_mb(k_range+p10b-1),7,4,1,3,2,8,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (h12b .le. h14b) .and. (p8b .lt. p5b) .
     &and. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),6,4,1,3,2,8,7,5,-1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (h12b .le. h14b) .and. (p5b .le. p8b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),5,4,1,3,2,8,7,6,1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (h11b .le. h14b) .and. (h14b .lt. h12b)
     & .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h14b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p1
     &0b-1),int_mb(k_range+p5b-1),8,3,1,4,2,7,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (h11b .le. h14b) .and. (h14b .lt. h12b)
     & .and. (p9b .lt. p5b) .and. (p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h14b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5
     &b-1),int_mb(k_range+p10b-1),7,3,1,4,2,8,6,5,-1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (h11b .le. h14b) .and. (h14b .lt. h12b)
     & .and. (p8b .lt. p5b) .and. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h14b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),6,3,1,4,2,8,7,5,1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (h11b .le. h14b) .and. (h14b .lt. h12b)
     & .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h14b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),5,3,1,4,2,8,7,6,-1.0d0)
      END IF
      IF ((h14b .lt. h11b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p1
     &0b-1),int_mb(k_range+p5b-1),8,2,1,4,3,7,6,5,-1.0d0)
      END IF
      IF ((h14b .lt. h11b) .and. (p9b .lt. p5b) .and. (p5b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5
     &b-1),int_mb(k_range+p10b-1),7,2,1,4,3,8,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h11b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),6,2,1,4,3,8,7,5,-1.0d0)
      END IF
      IF ((h14b .lt. h11b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),5,2,1,4,3,8,7,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_3',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,1.0d0/8.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p5b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h14b - 1 + noab * (h13b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_3',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_4_3_1(d_a,k_a_offset,d_c,k_c_of
     &fset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h11 h12 h13 h14 p5 p8 p9 p10 )_y + = 1 * y ( h11 h12 h13 h14 p5 p8 p9 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p8b
      INTEGER p9b
      INTEGER p10b
      INTEGER dimc
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER p5b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p10b = p9b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1)
     &.ne.16)) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &0b-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1) * i
     &nt_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_range+p10b
     &-1)
      CALL TCE_RESTRICTED_8(h11b,h12b,h13b,h14b,p5b,p8b,p9b,p10b,h11b_1,
     &h12b_1,h13b_1,h14b_1,p5b_1,p8b_1,p9b_1,p10b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1
     &) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_range
     &+p10b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_3_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_3_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p10b_
     &1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1
     & + nvab * (p5b_1 - noab - 1 + nvab * (h14b_1 - 1 + noab * (h13b_1 
     &- 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_3_1',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_3_1',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h11b-1),8,7,6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (p9b - noab - 1 + nvab * (p8b - noab - 1 + nva
     &b * (p5b - noab - 1 + nvab * (h14b - 1 + noab * (h13b - 1 + noab *
     & (h12b - 1 + noab * (h11b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_3_1',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_3_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_4_4_3_1(l_a_offset,k_a_off
     &set,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h11 h12 h13 h14 p5 p8 p9 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h11b
      INTEGER h12b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p8b
      INTEGER p9b
      INTEGER p10b
      length = 0
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p10b = p9b,noab+nvab
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &0b-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1)
     &.ne.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_3_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p10b = p9b,noab+nvab
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &0b-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1)
     &.ne.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p10b - noab - 1 + nvab * (p9b - noab - 1
     & + nvab * (p8b - noab - 1 + nvab * (p5b - noab - 1 + nvab * (h14b 
     &- 1 + noab * (h13b - 1 + noab * (h12b - 1 + noab * (h11b - 1))))))
     &)
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * in
     &t_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b
     &-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_ran
     &ge+p10b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_4_3_2(d_a,k_a_offset,d_c,k_c_of
     &fset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h11 h12 h13 h14 p5 p8 p9 p10 )_y + = 1/3 * y ( h11 h12 h13 h14 p5 p8 p9 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p8b
      INTEGER p9b
      INTEGER p10b
      INTEGER dimc
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER p5b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p10b = p9b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1)
     &.ne.16)) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &0b-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1) * i
     &nt_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_range+p10b
     &-1)
      CALL TCE_RESTRICTED_8(h11b,h12b,h13b,h14b,p5b,p8b,p9b,p10b,h11b_1,
     &h12b_1,h13b_1,h14b_1,p5b_1,p8b_1,p9b_1,p10b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1
     &) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_range
     &+p10b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_4_3_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_3_2',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p10b_
     &1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1
     & + nvab * (p5b_1 - noab - 1 + nvab * (h14b_1 - 1 + noab * (h13b_1 
     &- 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14
     &b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_3_2',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_4_3_2',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h11b-1),8,7,6,5,4,3,2,1,1.0d0/3.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (p9b - noab - 1 + nvab * (p8b - noab - 1 + nva
     &b * (p5b - noab - 1 + nvab * (h14b - 1 + noab * (h13b - 1 + noab *
     & (h12b - 1 + noab * (h11b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &4_3_2',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_4_3_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_5(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h14 h1 h2 )_ytt + = -1/8 * P( 2 ) * Sum ( h7 p5 p6 ) * t ( p5 p6 h1 h7 )_t * i3 ( h7 h13 h14 h2 p5 p6 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h7b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h7b_2
      INTEGER h2b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_5',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h7b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h7b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h1b,h7b,p5b_1,p6b_1,h1b_1,h7b_1)
      CALL TCE_RESTRICTED_6(h13b,h14b,h7b,h2b,p5b,p6b,h13b_2,h14b_2,h7b_
     &2,h2b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_5',2,MA_ERR)
      IF ((h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h1b-1),int_mb(k_range+h7b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &5',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_5',5,MA_ERR)
      IF ((h7b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab 
     &* (h14b_2 - 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h2b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (h7b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab 
     &* (h14b_2 - 1 + noab * (h7b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h14b-1),int_mb(k_range+h2b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,1,2,6,5,-1.0d0)
      END IF
      IF ((h14b .lt. h7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab 
     &* (h7b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,2,1,3,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &5',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_5',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_5',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_5',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,-1.0d0/8.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h14b - 1 + noab * (h13b - 1)))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),3,2,1,4,1.0d0/8.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h14b - 1 + noab * (h13b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &5',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_5',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_5_1(d_a,k_a_offset,d_b,k_b_offs
     &et,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h7 h13 h14 h1 p5 p6 )_yt + = -1 * Sum ( h10 p8 p9 ) * t ( p8 p9 h1 h10 )_t * i4 ( h7 h10 h13 h14 p5 p6 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER h10b
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h10b_1
      INTEGER h7b_2
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h10b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h13b = h7b,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p6b-1).ne.12)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h14b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),i
     &nt_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h14b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * int
     &_mb(k_range+p6b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_5_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p8b,p9b,h1b,h10b,p8b_1,p9b_1,h1b_1,h10b_1)
      CALL TCE_RESTRICTED_8(h7b,h13b,h14b,h10b,p5b,p6b,p8b,p9b,h7b_2,h13
     &b_2,h14b_2,h10b_2,p5b_2,p6b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_m
     &b(k_range+h10b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h13b-1) * int_m
     &b(k_range+h14b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_5_1',2,MA_ERR)
      IF ((h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &5_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_5_1',5,MA_ERR)
      IF ((h10b .lt. h7b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,4,3,2,1,6,5,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b) .and
     &. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,6,4,3,2,1,7,5,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (p8b .lt. p5b) .and. (p6b .le. p9b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,6,4,3,2,1,8,5,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (p5b .le. p8b) .and. (p9b .lt. p6b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,5,4,3,2,1,7,6,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (p5b .le. p8b) .and. (p8b .lt. p6b) .and
     &. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,5,4,3,2,1,8,6,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),6,5,4,3,2,1,8,7,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .le. h13b) .and. (p9b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,4,3,1,2,6,5,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .le. h13b) .and. (p8b .lt. p5b) .a
     &nd. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,6,4,3,1,2,7,5,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .le. h13b) .and. (p8b .lt. p5b) .a
     &nd. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,6,4,3,1,2,8,5,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .le. h13b) .and. (p5b .le. p8b) .a
     &nd. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,5,4,3,1,2,7,6,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .le. h13b) .and. (p5b .le. p8b) .a
     &nd. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,5,4,3,1,2,8,6,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .le. h13b) .and. (p6b .le. p8b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),6,5,4,3,1,2,8,7,1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (h10b .le. h14b) .and. (p9b .lt. p5b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,4,2,1,3,6,5,-1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (h10b .le. h14b) .and. (p8b .lt. p5b) .
     &and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,6,4,2,1,3,7,5,1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (h10b .le. h14b) .and. (p8b .lt. p5b) .
     &and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,6,4,2,1,3,8,5,-1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (h10b .le. h14b) .and. (p5b .le. p8b) .
     &and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,5,4,2,1,3,7,6,-1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (h10b .le. h14b) .and. (p5b .le. p8b) .
     &and. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,5,4,2,1,3,8,6,1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (h10b .le. h14b) .and. (p6b .le. p8b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),6,5,4,2,1,3,8,7,-1.0d0)
      END IF
      IF ((h14b .lt. h10b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h14b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,3,2,1,4,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h10b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b) .an
     &d. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h14b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,6,3,2,1,4,7,5,-1.0d0)
      END IF
      IF ((h14b .lt. h10b) .and. (p8b .lt. p5b) .and. (p6b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h14b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,6,3,2,1,4,8,5,1.0d0)
      END IF
      IF ((h14b .lt. h10b) .and. (p5b .le. p8b) .and. (p9b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h14b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,5,3,2,1,4,7,6,1.0d0)
      END IF
      IF ((h14b .lt. h10b) .and. (p5b .le. p8b) .and. (p8b .lt. p6b) .an
     &d. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h14b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,5,3,2,1,4,8,6,-1.0d0)
      END IF
      IF ((h14b .lt. h10b) .and. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h14b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),6,5,3,2,1,4,8,7,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &5_1',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_5_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_5_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_5_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h14b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p6b -
     & noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h14
     &b - 1 + noab * (h13b - 1 + noab * (h7b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &5_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_5_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_4_5_1(l_a_offset,k_a_offse
     &t,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h7 h13 h14 h1 p5 p6 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h7b
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      length = 0
      DO h7b = 1,noab
      DO h13b = h7b,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h14b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),i
     &nt_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p6b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_5_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h7b = 1,noab
      DO h13b = h7b,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h14b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),i
     &nt_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p6b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p6b - noab - 1 + nvab * (p5b - noab - 1 
     &+ nvab * (h1b - 1 + noab * (h14b - 1 + noab * (h13b - 1 + noab * (
     &h7b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h7b-1) * int_mb(k_range+h13b-1) * int
     &_mb(k_range+h14b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1
     &) * int_mb(k_range+p6b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_5_1_1(d_a,k_a_offset,d_c,k_c_of
     &fset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h7 h10 h13 h14 p5 p6 p8 p9 )_y + = 1 * y ( h7 h10 h13 h14 p5 p6 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h10b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p6b
      INTEGER p8b
      INTEGER p9b
      INTEGER dimc
      INTEGER h7b_1
      INTEGER h10b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h10b = h7b,noab
      DO h13b = h10b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1).n
     &e.16)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p
     &6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),
     &ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p9b
     &-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h10b-1) * int_mb(k_r
     &ange+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1) * in
     &t_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1
     &)
      CALL TCE_RESTRICTED_8(h7b,h10b,h13b,h14b,p5b,p6b,p8b,p9b,h7b_1,h10
     &b_1,h13b_1,h14b_1,p5b_1,p6b_1,p8b_1,p9b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h10b-1) * int_m
     &b(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1)
     & * int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+
     &p9b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_5_1_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_5_1_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p9b_1
     & - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 
     &+ nvab * (p5b_1 - noab - 1 + nvab * (h14b_1 - 1 + noab * (h13b_1 -
     & 1 + noab * (h10b_1 - 1 + noab * (h7b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &5_1_1',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_5_1_1',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+h7b-1),8,7,6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (p8b - noab - 1 + nvab * (p6b - noab - 1 + nvab
     & * (p5b - noab - 1 + nvab * (h14b - 1 + noab * (h13b - 1 + noab * 
     &(h10b - 1 + noab * (h7b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &5_1_1',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_5_1_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_4_5_1_1(l_a_offset,k_a_off
     &set,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h7 h10 h13 h14 p5 p6 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h7b
      INTEGER h10b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p6b
      INTEGER p8b
      INTEGER p9b
      length = 0
      DO h7b = 1,noab
      DO h10b = h7b,noab
      DO h13b = h10b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p
     &6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),
     &ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p9b
     &-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1).n
     &e.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_5_1_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h7b = 1,noab
      DO h10b = h7b,noab
      DO h13b = h10b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p
     &6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),
     &ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p9b
     &-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1).n
     &e.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p9b - noab - 1 + nvab * (p8b - noab - 1 
     &+ nvab * (p6b - noab - 1 + nvab * (p5b - noab - 1 + nvab * (h14b -
     & 1 + noab * (h13b - 1 + noab * (h10b - 1 + noab * (h7b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h7b-1) * int_mb(k_range+h10b-1) * int
     &_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-
     &1) * int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int_mb(k_rang
     &e+p9b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_4_5_1_2(d_a,k_a_offset,d_c,k_c_of
     &fset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h7 h10 h13 h14 p5 p6 p8 p9 )_y + = 1 * y ( h7 h10 h13 h14 p5 p6 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h10b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p6b
      INTEGER p8b
      INTEGER p9b
      INTEGER dimc
      INTEGER h7b_1
      INTEGER h10b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h10b = h7b,noab
      DO h13b = h10b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1).n
     &e.16)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p
     &6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),
     &ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p9b
     &-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h10b-1) * int_mb(k_r
     &ange+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1) * in
     &t_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1
     &)
      CALL TCE_RESTRICTED_8(h7b,h10b,h13b,h14b,p5b,p6b,p8b,p9b,h7b_1,h10
     &b_1,h13b_1,h14b_1,p5b_1,p6b_1,p8b_1,p9b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h10b-1) * int_m
     &b(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1)
     & * int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+
     &p9b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_5_1_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_5_1_2',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p9b_1
     & - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 
     &+ nvab * (p5b_1 - noab - 1 + nvab * (h14b_1 - 1 + noab * (h13b_1 -
     & 1 + noab * (h10b_1 - 1 + noab * (h7b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &5_1_2',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_4_5_1_2',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+h7b-1),8,7,6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (p8b - noab - 1 + nvab * (p6b - noab - 1 + nvab
     & * (p5b - noab - 1 + nvab * (h14b - 1 + noab * (h13b - 1 + noab * 
     &(h10b - 1 + noab * (h7b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_4_
     &5_1_2',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_4_5_1_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_5(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_ytt + = -1 * P( 2 ) * Sum ( h11 p10 ) * t ( p3 p10 h1 h11 )_t * i2 ( h11 h13 h2 p10 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER h11b
      INTEGER p3b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h11b_1
      INTEGER h13b_2
      INTEGER h11b_2
      INTEGER h2b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO h11b = 1,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h11b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p10b,h1b,h11b,p3b_1,p10b_1,h1b_1,h11b_1)
      CALL TCE_RESTRICTED_4(h13b,h11b,h2b,p10b,h13b_2,h11b_2,h2b_2,p10b_
     &2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5',2,MA_ERR)
      IF ((p10b .lt. p3b) .and. (h11b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h11b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p10
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),4,2,3,1,1.0d0)
      END IF
      IF ((p10b .lt. p3b) .and. (h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p10
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-
     &1),3,2,4,1,-1.0d0)
      END IF
      IF ((p3b .le. p10b) .and. (h11b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),4,1,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p10b) .and. (h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-
     &1),3,1,4,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5',5,MA_ERR)
      IF ((h11b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h13b_2 - 1 + noab * (h1
     &1b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h2b-1),int_mb(k_range+p10b
     &-1),3,2,1,4,1.0d0)
      END IF
      IF ((h13b .lt. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h11b_2 - 1 + noab * (h1
     &3b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+p10b
     &-1),3,1,2,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5'
     &,6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1
     &),4,2,3,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1
     &),4,2,1,3,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_5_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h11 h13 h1 p10 )_yt + = -1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h11 h13 p5 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h13b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h11b_2
      INTEGER h13b_2
      INTEGER p10b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h13b = h11b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h13b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p5b,h1b,p5b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h11b,h13b,p10b,p5b,h11b_2,h13b_2,p10b_2,p5b_
     &2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h13b-1) * int_
     &mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p5b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5_1',5,MA_ERR)
      IF ((p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noa
     &b * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b
     &-1),4,2,1,3,1.0d0)
      END IF
      IF ((p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (h13b_2 - 1 + noa
     &b * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b
     &-1),3,2,1,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_
     &1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b
     &-1),3,2,4,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h13b - 1 + noab * (h11b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_5_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h11 h13 h1 p10 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h11b
      INTEGER h13b
      INTEGER h1b
      INTEGER p10b
      length = 0
      DO h11b = 1,noab
      DO h13b = h11b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h11b = 1,noab
      DO h13b = h11b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p10b - noab - 1 + nvab * (h1b - 1 + noab
     & * (h13b - 1 + noab * (h11b - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h11b-1) * int_mb(k_range+h13b-1) * in
     &t_mb(k_range+h1b-1) * int_mb(k_range+p10b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_5_2(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h11 h13 h1 p10 )_yt + = 1/2 * Sum ( h9 p7 p8 ) * t ( p7 p8 h1 h9 )_t * y ( h9 h11 h13 p7 p8 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h13b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h13b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h13b = h11b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h13b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p7b,p8b,h1b,h9b,p7b_1,p8b_1,h1b_1,h9b_1)
      CALL TCE_RESTRICTED_6(h11b,h13b,h9b,p10b,p7b,p8b,h11b_2,h13b_2,h9b
     &_2,p10b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h13b-1) * int_
     &mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5_2',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_
     &2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5_2',5,MA_ERR)
      IF ((h9b .le. h11b) .and. (p8b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h13b_2 - 1 + noab * (h11b_2 - 1 + noab * (h9b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p10b-1),6,3,2,1,5,4,1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p7b .le. p10b) .and. (p10b .lt. p8b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h13b_2 - 1 + noab * (h11b_2 - 1 + noab * (h9b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p8b-1),5,3,2,1,6,4,-1.0d0
     &)
      END IF
      IF ((h9b .le. h11b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (h13b_2 - 1 + noab * (h11b_2 - 1 + noab * (h9b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h11b .lt. h9b) .and. (h9b .le. h13b) .and. (p8b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h13b_2 - 1 + noab * (h9b_2 - 1 + noab * (h11b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p10b-1),6,3,1,2,5,4,-1.0d0
     &)
      END IF
      IF ((h11b .lt. h9b) .and. (h9b .le. h13b) .and. (p7b .le. p10b) .a
     &nd. (p10b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h13b_2 - 1 + noab * (h9b_2 - 1 + noab * (h11b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p8b-1),5,3,1,2,6,4,1.0d0)
      END IF
      IF ((h11b .lt. h9b) .and. (h9b .le. h13b) .and. (p10b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (h13b_2 - 1 + noab * (h9b_2 - 1 + noab * (h11b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,3,1,2,6,5,-1.0d0
     &)
      END IF
      IF ((h13b .lt. h9b) .and. (p8b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h9b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p10b-1),6,2,1,3,5,4,1.0d0)
      END IF
      IF ((h13b .lt. h9b) .and. (p7b .le. p10b) .and. (p10b .lt. p8b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h9b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p8b-1),5,2,1,3,6,4,-1.0d0
     &)
      END IF
      IF ((h13b .lt. h9b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,2,1,3,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_
     &2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b
     &-1),3,2,4,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h13b - 1 + noab * (h11b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_
     &2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_5_3(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h11 h13 h1 p10 )_yt + = -1/12 * Sum ( h8 h9 p5 p6 p7 ) * t ( p5 p6 p7 h1 h8 h9 )_t * y ( h8 h9 h11 h13 p5 p6 p7 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h13b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h13b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h13b = h11b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h13b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h8b-1),int
     &_mb(k_sym+h9b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p5b,p6b,p7b,h1b,h8b,h9b,p5b_1,p6b_1,p7b_1,h1
     &b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_8(h11b,h13b,h8b,h9b,p10b,p5b,p6b,p7b,h11b_2,h1
     &3b_2,h8b_2,h9b_2,p10b_2,p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h13b-1) * int_
     &mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5_3',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),5,6,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),4,6,5,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_
     &3',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5_3',5,MA_ERR)
      IF ((h9b .le. h11b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,4,3,2,1,7,6,5,1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p6b .le. p10b) .and. (p10b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,4,3,2,1,8,6,5,-1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,3,2,1,8,7,5,1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,3,2,1,8,7,6,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h13b) .a
     &nd. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,4,2,3,1,7,6,5,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h13b) .a
     &nd. (p6b .le. p10b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,4,2,3,1,8,6,5,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h13b) .a
     &nd. (p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,2,3,1,8,7,5,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h13b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,2,3,1,8,7,6,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h13b .lt. h9b) .and. (p7b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,3,2,4,1,7,6,5,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h13b .lt. h9b) .and. (p6b .le. p10b) .a
     &nd. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,3,2,4,1,8,6,5,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h13b .lt. h9b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,3,2,4,1,8,7,5,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h13b .lt. h9b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,3,2,4,1,8,7,6,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h13b) .and. (p7b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,4,1,3,2,7,6,5,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h13b) .and. (p6b .le. p10b) .a
     &nd. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,4,1,3,2,8,6,5,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h13b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,1,3,2,8,7,5,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h13b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,1,3,2,8,7,6,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h13b) .and. (h13b .lt. h9b) .a
     &nd. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,3,1,4,2,7,6,5,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h13b) .and. (h13b .lt. h9b) .a
     &nd. (p6b .le. p10b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,3,1,4,2,8,6,5,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h13b) .and. (h13b .lt. h9b) .a
     &nd. (p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,3,1,4,2,8,7,5,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h13b) .and. (h13b .lt. h9b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,3,1,4,2,8,7,6,1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,2,1,4,3,7,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (p6b .le. p10b) .and. (p10b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,2,1,4,3,8,6,5,-1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,2,1,4,3,8,7,5,1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h13b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,2,1,4,3,8,7,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_
     &3',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_5_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b
     &-1),3,2,4,1,-1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h13b - 1 + noab * (h11b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_5_
     &3',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_5_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_6(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_ytt + = -1/4 * P( 2 ) * Sum ( h6 h7 p12 p14 ) * t ( p3 p12 p14 h1 h6 h7 )_t * i2 ( h6 h7 h13 h2 p12 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p12b
      INTEGER p14b
      INTEGER h6b
      INTEGER h7b
      INTEGER p3b_1
      INTEGER p12b_1
      INTEGER p14b_1
      INTEGER h1b_1
      INTEGER h6b_1
      INTEGER h7b_1
      INTEGER h13b_2
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h2b_2
      INTEGER p12b_2
      INTEGER p14b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p12b = noab+1,noab+nvab
      DO p14b = p12b,noab+nvab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p12b-1)+int_mb(k_spin+p14b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h6b-1)+int_mb(k_spin+h7
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p12b-1),ieor(int_mb
     &(k_sym+p14b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h6b-1),i
     &nt_mb(k_sym+h7b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p12b,p14b,h1b,h6b,h7b,p3b_1,p12b_1,p14b_
     &1,h1b_1,h6b_1,h7b_1)
      CALL TCE_RESTRICTED_6(h13b,h6b,h7b,h2b,p12b,p14b,h13b_2,h6b_2,h7b_
     &2,h2b_2,p12b_2,p14b_2)
      dim_common = int_mb(k_range+p12b-1) * int_mb(k_range+p14b-1) * int
     &_mb(k_range+h6b-1) * int_mb(k_range+h7b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_6',2,MA_ERR)
      IF ((p14b .lt. p3b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p14b-1),int_mb(k_range+p3b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),6,3,5,4,2,1,1.0d0)
      END IF
      IF ((p14b .lt. p3b) .and. (h6b .lt. h1b) .and. (h1b .le. h7b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h6b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p14b-1),int_mb(k_range+p3b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),5,3,6,4,2,1,-1.0d0)
      END IF
      IF ((p14b .lt. p3b) .and. (h1b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p14b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),4,3,6,5,2,1,1.0d0)
      END IF
      IF ((p12b .lt. p3b) .and. (p3b .le. p14b) .and. (h7b .lt. h1b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p14b_1 - no
     &ab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p14b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),6,2,5,4,3,1,-1.0d0)
      END IF
      IF ((p12b .lt. p3b) .and. (p3b .le. p14b) .and. (h6b .lt. h1b) .an
     &d. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h6b_1 - 1 + noab * (p14b_1 - no
     &ab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p14b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),5,2,6,4,3,1,1.0d0)
      END IF
      IF ((p12b .lt. p3b) .and. (p3b .le. p14b) .and. (h1b .le. h6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (h1b_1 - 1 + noab * (p14b_1 - no
     &ab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p14b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),4,2,6,5,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p12b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p14b_1 - no
     &ab - 1 + nvab * (p12b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),6,1,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p12b) .and. (h6b .lt. h1b) .and. (h1b .le. h7b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h6b_1 - 1 + noab * (p14b_1 - no
     &ab - 1 + nvab * (p12b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),5,1,6,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p12b) .and. (h1b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (h1b_1 - 1 + noab * (p14b_1 - no
     &ab - 1 + nvab * (p12b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),4,1,6,5,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_6',5,MA_ERR)
      IF ((h7b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (h2b_2 - 1 + noa
     &b * (h13b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h6b .le. h13b) .and. (h13b .lt. h7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (h2b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),4,2,3,1,6,5,-1.0d0
     &)
      END IF
      IF ((h13b .lt. h6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (h2b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),4,1,3,2,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p12b .eq. p14b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h6b .eq. h7b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(ns
     &ubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_6',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_6',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_6',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1
     &),4,2,3,1,-1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1
     &),4,2,1,3,1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_6',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_6_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h7 h13 h1 p12 p14 )_yt + = 1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h6 h7 h13 p5 p12 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h13b
      INTEGER h1b
      INTEGER p12b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h13b_2
      INTEGER p12b_2
      INTEGER p14b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h13b = h7b,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      DO p14b = p12b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h13b-1
     &) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p12b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h13b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p12b-1) * int
     &_mb(k_range+p14b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p5b,h1b,p5b_1,h1b_1)
      CALL TCE_RESTRICTED_6(h6b,h7b,h13b,p12b,p14b,p5b,h6b_2,h7b_2,h13b_
     &2,p12b_2,p14b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+h13b-1) * int_mb(k_range+p12b-1) * int_mb(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_6_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p5b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_6_1',5,MA_ERR)
      IF ((p5b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (h13b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),6,5,3,2,1,4,1.0d0)
      END IF
      IF ((p12b .lt. p5b) .and. (p5b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p12b_2 - noab - 
     &1 + nvab * (h13b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p14b-1),6,4,3,2,1,5,-1.0d0
     &)
      END IF
      IF ((p14b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p12b_2 - noab - 
     &1 + nvab * (h13b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p14b-1),int_mb(k_range+p5b-1),5,4,3,2,1,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_
     &1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_6_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_6_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_6_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+h13b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p12b - noab - 1 + nvab * (h1b - 1 + noab * (h
     &13b - 1 + noab * (h7b - 1 + noab * (h6b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_6_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_6_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h7 h13 h1 p12 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h6b
      INTEGER h7b
      INTEGER h13b
      INTEGER h1b
      INTEGER p12b
      INTEGER p14b
      length = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h13b = h7b,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      DO p14b = p12b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h13b-1
     &) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p12b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h13b = h7b,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      DO p14b = p12b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h13b-1
     &) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p12b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p14b - noab - 1 + nvab * (p12b - noab - 
     &1 + nvab * (h1b - 1 + noab * (h13b - 1 + noab * (h7b - 1 + noab * 
     &(h6b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_
     &mb(k_range+h13b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p12b-1
     &) * int_mb(k_range+p14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_6_2(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h7 h13 h1 p12 p14 )_yt + = -1/2 * Sum ( h11 p9 p10 ) * t ( p9 p10 h1 h11 )_t * y ( h6 h7 h11 h13 p9 p10 p12 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h13b
      INTEGER h1b
      INTEGER p12b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p10b
      INTEGER h11b
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h11b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h13b_2
      INTEGER h11b_2
      INTEGER p12b_2
      INTEGER p14b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h13b = h7b,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      DO p14b = p12b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h13b-1
     &) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p12b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h13b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p12b-1) * int
     &_mb(k_range+p14b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO p10b = p9b,noab+nvab
      DO h11b = 1,noab
      IF (int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p9b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h11b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p9b,p10b,h1b,h11b,p9b_1,p10b_1,h1b_1,h11b_1)
      CALL TCE_RESTRICTED_8(h6b,h7b,h13b,h11b,p12b,p14b,p9b,p10b,h6b_2,h
     &7b_2,h13b_2,h11b_2,p12b_2,p14b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+p10b-1) * int_
     &mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+h13b-1) * int_mb(k_range+p12b-1) * int_mb(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_6_2',2,MA_ERR)
      IF ((h11b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-
     &1),3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_
     &2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_6_2',5,MA_ERR)
      IF ((h11b .lt. h6b) .and. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p14b-1),8,7,4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (p9b .le. p12b) .and. (p12b .lt. p10b) .
     &and. (p10b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p12b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p14b-1),8,6,4,3,2,1,7,5,-1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (p9b .le. p12b) .and. (p14b .lt. p10b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p12b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p10b-1),7,6,4,3,2,1,8,5,1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (p12b .lt. p9b) .and. (p10b .le. p14b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p14b-1),8,5,4,3,2,1,7,6,1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (p12b .lt. p9b) .and. (p9b .le. p14b) .a
     &nd. (p14b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p10b-1),7,5,4,3,2,1,8,6,-1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (p14b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p14b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),6,5,4,3,2,1,8,7,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p10b .le. p12b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p14b-1),8,7,4,3,1,2,6,5,-1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p9b .le. p12b) .a
     &nd. (p12b .lt. p10b) .and. (p10b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p12b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p14b-1),8,6,4,3,1,2,7,5,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p9b .le. p12b) .a
     &nd. (p14b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p12b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p10b-1),7,6,4,3,1,2,8,5,-1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p12b .lt. p9b) .a
     &nd. (p10b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p14b-1),8,5,4,3,1,2,7,6,-1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p12b .lt. p9b) .a
     &nd. (p9b .le. p14b) .and. (p14b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p10b-1),7,5,4,3,1,2,8,6,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p14b .lt. p9b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p14b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2
     & - 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),6,5,4,3,1,2,8,7,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .le. h13b) .and. (p10b .le. p12b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p14b-1),8,7,4,2,1,3,6,5,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .le. h13b) .and. (p9b .le. p12b) .
     &and. (p12b .lt. p10b) .and. (p10b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p12b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p14b-1),8,6,4,2,1,3,7,5,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .le. h13b) .and. (p9b .le. p12b) .
     &and. (p14b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p12b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p10b-1),7,6,4,2,1,3,8,5,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .le. h13b) .and. (p12b .lt. p9b) .
     &and. (p10b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p14b-1),8,5,4,2,1,3,7,6,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .le. h13b) .and. (p12b .lt. p9b) .
     &and. (p9b .le. p14b) .and. (p14b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p10b-1),7,5,4,2,1,3,8,6,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .le. h13b) .and. (p14b .lt. p9b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p14b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),6,5,4,2,1,3,8,7,1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p14b-1),8,7,3,2,1,4,6,5,-1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (p9b .le. p12b) .and. (p12b .lt. p10b) 
     &.and. (p10b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p12b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p14b-1),8,6,3,2,1,4,7,5,1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (p9b .le. p12b) .and. (p14b .lt. p10b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p12b_2 - noab -
     & 1 + nvab * (p9b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p10b-1),7,6,3,2,1,4,8,5,-1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (p12b .lt. p9b) .and. (p10b .le. p14b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p14b-1),8,5,3,2,1,4,7,6,-1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (p12b .lt. p9b) .and. (p9b .le. p14b) .
     &and. (p14b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p10b-1),7,5,3,2,1,4,8,6,1.0d0)
      END IF
      IF ((h13b .lt. h11b) .and. (p14b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p14b_2 - noab - 
     &1 + nvab * (p12b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_
     &2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p14b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p10b-1),6,5,3,2,1,4,8,7,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_
     &2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_6_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_6_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_6_2',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+h13b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,-1.0d0
     &/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p12b - noab - 1 + nvab * (h1b - 1 + noab * (h
     &13b - 1 + noab * (h7b - 1 + noab * (h6b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_6_
     &2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_6_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_7(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_ytt + = -1/4 * Sum ( p12 p10 ) * t ( p10 p12 h1 h2 )_t * i2 ( h13 p3 p10 p12 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p12b
      INTEGER p10b_1
      INTEGER p12b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p3b_2
      INTEGER h13b_2
      INTEGER p10b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO p12b = p10b,noab+nvab
      IF (int_mb(k_spin+p10b-1)+int_mb(k_spin+p12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p10b-1),ieor(int_mb(k_sym+p12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p10b,p12b,h1b,h2b,p10b_1,p12b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(p3b,h13b,p10b,p12b,p3b_2,h13b_2,p10b_2,p12b_
     &2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+p12b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_7',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p12b_1 - noab - 1 + nvab * (p10
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-
     &1),4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_7',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (h13b_2 - 1 + no
     &ab * (p3b_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b
     &-1),2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p10b .eq. p12b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_7',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_7',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_7',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),2,1,4,3,-1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_7',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_7_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 p3 p10 p12 )_yt + = 1 * Sum ( h8 h9 p7 ) * t ( p3 p7 h8 h9 )_t * y ( h8 h9 h13 p7 p10 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER p10b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p3b_1
      INTEGER p7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h13b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p12b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO p10b = noab+1,noab+nvab
      DO p12b = p10b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+p10b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &p10b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+p10b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+p10b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &8b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h8b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p7b,h8b,h9b,p3b_1,p7b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_6(h13b,h8b,h9b,p10b,p12b,p7b,h13b_2,h8b_2,h9b_
     &2,p10b_2,p12b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+p10b-1) * int_
     &mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_7_1',2,MA_ERR)
      IF ((p7b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_7_1',5,MA_ERR)
      IF ((h9b .le. h13b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (h13b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),int_mb(k_range+p7b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p12b-1),6,5,3,2,1,4,1.0d0)
      END IF
      IF ((h9b .le. h13b) .and. (p10b .lt. p7b) .and. (p7b .le. p12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (h13b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p12b-1),6,4,3,2,1,5,-1.0d0
     &)
      END IF
      IF ((h9b .le. h13b) .and. (p12b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (h13b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p7b-1),5,4,3,2,1,6,1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b) .and. (p7b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (h9b_2 - 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h9b-1),int_mb(k_range+p7b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p12b-1),6,5,2,3,1,4,-1.0d0
     &)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b) .and. (p10b .lt. p7b) .a
     &nd. (p7b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (h9b_2 - 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h9b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p12b-1),6,4,2,3,1,5,1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b) .and. (p12b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (h9b_2 - 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h9b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p7b-1),5,4,2,3,1,6,-1.0d0
     &)
      END IF
      IF ((h13b .lt. h8b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p7b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p12b-1),6,5,1,3,2,4,1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (p10b .lt. p7b) .and. (p7b .le. p12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p12b-1),6,4,1,3,2,5,-1.0d0
     &)
      END IF
      IF ((h13b .lt. h8b) .and. (p12b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h13b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p7b-1),5,4,1,3,2,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_
     &1',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_7_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_7_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_7_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+h13b-1),int_mb(k_range+p3b
     &-1),4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p10b - noab - 1 + nvab * (h13b - 1 + noab * (
     &p3b - noab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_7_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_7_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 p3 p10 p12 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h13b
      INTEGER p10b
      INTEGER p12b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO p10b = noab+1,noab+nvab
      DO p12b = p10b,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+
     &p10b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb
     &(k_sym+p10b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-
     &1)+int_mb(k_spin+p10b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO p10b = noab+1,noab+nvab
      DO p12b = p10b,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+
     &p10b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb
     &(k_sym+p10b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-
     &1)+int_mb(k_spin+p10b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p12b - noab - 1 + nvab * (p10b - noab - 
     &1 + nvab * (h13b - 1 + noab * (p3b - noab - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int
     &_mb(k_range+p10b-1) * int_mb(k_range+p12b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_7_2(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 p3 p10 p12 )_yt + = -1/6 * Sum ( h7 h8 h9 p5 p6 ) * t ( p3 p5 p6 h7 h8 h9 )_t * y ( h7 h8 h9 h13 p5 p6 p10 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER p10b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h13b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p12b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO p10b = noab+1,noab+nvab
      DO p12b = p10b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+p10b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &p10b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+p10b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+p10b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),int
     &_mb(k_sym+h9b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p5b,p6b,h7b,h8b,h9b,p3b_1,p5b_1,p6b_1,h7
     &b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_8(h13b,h7b,h8b,h9b,p10b,p12b,p5b,p6b,h13b_2,h7
     &b_2,h8b_2,h9b_2,p10b_2,p12b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+p10b-1) * int_
     &mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_7_2',2,MA_ERR)
      IF ((p6b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),3,6,5,4,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),2,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),1,6,5,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_
     &2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_7_2',5,MA_ERR)
      IF ((h9b .le. h13b) .and. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,7,4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h9b .le. h13b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b) .a
     &nd. (p6b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p12b-1),8,6,4,3,2,1,7,5,-1.0d0)
      END IF
      IF ((h9b .le. h13b) .and. (p5b .le. p10b) .and. (p12b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b
     &-1),int_mb(k_range+p6b-1),7,6,4,3,2,1,8,5,1.0d0)
      END IF
      IF ((h9b .le. h13b) .and. (p10b .lt. p5b) .and. (p6b .le. p12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p12b-1),8,5,4,3,2,1,7,6,1.0d0)
      END IF
      IF ((h9b .le. h13b) .and. (p10b .lt. p5b) .and. (p5b .le. p12b) .a
     &nd. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b
     &-1),int_mb(k_range+p6b-1),7,5,4,3,2,1,8,6,-1.0d0)
      END IF
      IF ((h9b .le. h13b) .and. (p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p12b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h13b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p12b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),6,5,4,3,2,1,8,7,1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b) .and. (p6b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,7,3,4,2,1,6,5,-1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b) .and. (p6b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p12b-1),8,6,3,4,2,1,7,5,1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b) .and. (p5b .le. p10b) .a
     &nd. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b
     &-1),int_mb(k_range+p6b-1),7,6,3,4,2,1,8,5,-1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b) .and. (p10b .lt. p5b) .a
     &nd. (p6b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p12b-1),8,5,3,4,2,1,7,6,-1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b) .and. (p10b .lt. p5b) .a
     &nd. (p5b .le. p12b) .and. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b
     &-1),int_mb(k_range+p6b-1),7,5,3,4,2,1,8,6,1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b) .and. (p12b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p12b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h13b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p12b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),6,5,3,4,2,1,8,7,-1.0d0)
      END IF
      IF ((h7b .le. h13b) .and. (h13b .lt. h8b) .and. (p6b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,7,2,4,3,1,6,5,1.0d0)
      END IF
      IF ((h7b .le. h13b) .and. (h13b .lt. h8b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b) .and. (p6b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p12b-1),8,6,2,4,3,1,7,5,-1.0d0)
      END IF
      IF ((h7b .le. h13b) .and. (h13b .lt. h8b) .and. (p5b .le. p10b) .a
     &nd. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b
     &-1),int_mb(k_range+p6b-1),7,6,2,4,3,1,8,5,1.0d0)
      END IF
      IF ((h7b .le. h13b) .and. (h13b .lt. h8b) .and. (p10b .lt. p5b) .a
     &nd. (p6b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p12b-1),8,5,2,4,3,1,7,6,1.0d0)
      END IF
      IF ((h7b .le. h13b) .and. (h13b .lt. h8b) .and. (p10b .lt. p5b) .a
     &nd. (p5b .le. p12b) .and. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b
     &-1),int_mb(k_range+p6b-1),7,5,2,4,3,1,8,6,-1.0d0)
      END IF
      IF ((h7b .le. h13b) .and. (h13b .lt. h8b) .and. (p12b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p12b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p12b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),6,5,2,4,3,1,8,7,1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,7,1,4,3,2,6,5,-1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b) .a
     &nd. (p6b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p12b-1),8,6,1,4,3,2,7,5,1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p5b .le. p10b) .and. (p12b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b
     &-1),int_mb(k_range+p6b-1),7,6,1,4,3,2,8,5,-1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p10b .lt. p5b) .and. (p6b .le. p12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p12b-1),8,5,1,4,3,2,7,6,-1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p10b .lt. p5b) .and. (p5b .le. p12b) .a
     &nd. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b
     &-1),int_mb(k_range+p6b-1),7,5,1,4,3,2,8,6,1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p12b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p12b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),6,5,1,4,3,2,8,7,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_
     &2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(n
     &subh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_
     &b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_7_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_7_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_7_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+h13b-1),int_mb(k_range+p3b
     &-1),4,3,2,1,-1.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p10b - noab - 1 + nvab * (h13b - 1 + noab * (
     &p3b - noab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_7_
     &2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_7_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_8(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_ytt + = -1/36 * P( 2 ) * Sum ( h10 h11 h12 p7 p8 p9 ) * t ( p3 p7 p8 p9 h1 h10 h11 h12 )_t * i2 ( h10 h11 h12 h13 h2 p7 p8 p9 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER p9b
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p3b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h13b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER h2b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)
     &+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h10b
     &-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+h12b
     &-1)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p3b,p7b,p8b,p9b,h1b,h10b,h11b,h12b,p3b_1,p7b
     &_1,p8b_1,p9b_1,h1b_1,h10b_1,h11b_1,h12b_1)
      CALL TCE_RESTRICTED_8(h13b,h10b,h11b,h12b,h2b,p7b,p8b,p9b,h13b_2,h
     &10b_2,h11b_2,h12b_2,h2b_2,p7b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+p9b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1)
     & * int_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_8',2,MA_ERR)
      IF ((p9b .lt. p3b) .and. (h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p3b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h1b-1),8,4,7,6,5,3,2,1,1.0d0)
      END IF
      IF ((p9b .lt. p3b) .and. (h11b .lt. h1b) .and. (h1b .le. h12b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p3b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+h12b-1),7,4,8,6,5,3,2,1,-1.0d0)
      END IF
      IF ((p9b .lt. p3b) .and. (h10b .lt. h1b) .and. (h1b .le. h11b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p3b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),6,4,8,7,5,3,2,1,1.0d0)
      END IF
      IF ((p9b .lt. p3b) .and. (h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 
     &1 + noab * (p3b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),5,4,8,7,6,3,2,1,-1.0d0)
      END IF
      IF ((p8b .lt. p3b) .and. (p3b .le. p9b) .and. (h12b .lt. h1b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p3b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h1b-1),8,3,7,6,5,4,2,1,-1.0d0)
      END IF
      IF ((p8b .lt. p3b) .and. (p3b .le. p9b) .and. (h11b .lt. h1b) .and
     &. (h1b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p3b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+h12b-1),7,3,8,6,5,4,2,1,1.0d0)
      END IF
      IF ((p8b .lt. p3b) .and. (p3b .le. p9b) .and. (h10b .lt. h1b) .and
     &. (h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p3b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),6,3,8,7,5,4,2,1,-1.0d0)
      END IF
      IF ((p8b .lt. p3b) .and. (p3b .le. p9b) .and. (h1b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (
     &p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p3b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),5,3,8,7,6,4,2,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (p3b .le. p8b) .and. (h12b .lt. h1b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h1b-1),8,2,7,6,5,4,3,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (p3b .le. p8b) .and. (h11b .lt. h1b) .and
     &. (h1b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+h12b-1),7,2,8,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (p3b .le. p8b) .and. (h10b .lt. h1b) .and
     &. (h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),6,2,8,7,5,4,3,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (p3b .le. p8b) .and. (h1b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),5,2,8,7,6,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p7b) .and. (h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h1b-1),8,1,7,6,5,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p7b) .and. (h11b .lt. h1b) .and. (h1b .le. h12b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+h12b-1),7,1,8,6,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p7b) .and. (h10b .lt. h1b) .and. (h1b .le. h11b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),6,1,8,7,5,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p7b) .and. (h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 
     &1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (
     &p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),5,1,8,7,6,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_8',5,MA_ERR)
      IF ((h12b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h2b_2 - 1 + noab * (h13b_2 - 1 + noab * (h12b_2 - 1 + no
     &ab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+h2b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p9b-1),5,4,3,2,1,8,7,6,1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h13b .lt. h12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h2b_2 - 1 + noab * (h12b_2 - 1 + noab * (h13b_2 - 1 + no
     &ab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h2b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p9b-1),5,3,4,2,1,8,7,6,-1.0d0)
      END IF
      IF ((h10b .le. h13b) .and. (h13b .lt. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h2b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1 + no
     &ab * (h13b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h2b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p9b-1),5,2,4,3,1,8,7,6,1.0d0)
      END IF
      IF ((h13b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h2b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1 + no
     &ab * (h10b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h2b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p9b-1),5,1,4,3,2,8,7,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,36.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort
     &),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),di
     &ma_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_8',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_8',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_8',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1
     &),4,2,3,1,-1.0d0/36.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1
     &),4,2,1,3,1.0d0/36.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_8',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_8_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h10 h11 h12 h13 h1 p7 p8 p9 )_yt + = -1 * Sum ( p5 ) * t ( p5 h1 )_t * y ( h10 h11 h12 h13 p5 p7 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h13b
      INTEGER h1b
      INTEGER p7b
      INTEGER p8b
      INTEGER p9b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER h13b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1).
     &ne.16)) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+
     &p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1)
     &,ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p9
     &b-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_
     &range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1) * i
     &nt_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-
     &1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p5b,h1b,p5b_1,h1b_1)
      CALL TCE_RESTRICTED_8(h10b,h11b,h12b,h13b,p7b,p8b,p9b,p5b,h10b_2,h
     &11b_2,h12b_2,h13b_2,p7b_2,p8b_2,p9b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p7b-1
     &) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_8_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p5b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_8_1',5,MA_ERR)
      IF ((p5b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p9b-1),8,7,6,4,3,2,1,5,1.0d0)
      END IF
      IF ((p7b .lt. p5b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p7b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p9b-1),8,7,5,4,3,2,1,6,-1.0d0)
      END IF
      IF ((p8b .lt. p5b) .and. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p7b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5
     &b-1),int_mb(k_range+p9b-1),8,6,5,4,3,2,1,7,1.0d0)
      END IF
      IF ((p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p7b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p5b-1),7,6,5,4,3,2,1,8,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8_
     &1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_8_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_8_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_8_1',9,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_mb(k_range+h13b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h11b-1),int_mb(k_range+h10
     &b-1),int_mb(k_range+h1b-1),7,6,5,4,8,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (p8b - noab - 1 + nvab * (p7b - noab - 1 + nvab
     & * (h1b - 1 + noab * (h13b - 1 + noab * (h12b - 1 + noab * (h11b -
     & 1 + noab * (h10b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_8_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_8_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h10 h11 h12 h13 h1 p7 p8 p9 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h13b
      INTEGER h1b
      INTEGER p7b
      INTEGER p8b
      INTEGER p9b
      length = 0
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+
     &p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1)
     &,ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p9
     &b-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1).
     &ne.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_8_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+
     &p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1)
     &,ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p9
     &b-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1).
     &ne.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p9b - noab - 1 + nvab * (p8b - noab - 1 
     &+ nvab * (p7b - noab - 1 + nvab * (h1b - 1 + noab * (h13b - 1 + no
     &ab * (h12b - 1 + noab * (h11b - 1 + noab * (h10b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * in
     &t_mb(k_range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+h1b
     &-1) * int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_mb(k_ran
     &ge+p9b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_9(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_ytt + = 1/12 * Sum ( h8 p5 p6 p7 ) * t ( p5 p6 p7 h1 h2 h8 )_t * i2 ( h8 h13 p3 p5 p6 p7 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h8b_1
      INTEGER p3b_2
      INTEGER h13b_2
      INTEGER h8b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p5b,p6b,p7b,h1b,h2b,h8b,p5b_1,p6b_1,p7b_1,h1
     &b_1,h2b_1,h8b_1)
      CALL TCE_RESTRICTED_6(p3b,h13b,h8b,p5b,p6b,p7b,p3b_2,h13b_2,h8b_2,
     &p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_9',2,MA_ERR)
      IF ((h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),6,4,5,3,2,1,-1.0d0)
      END IF
      IF ((h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),5,4,6,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_9',5,MA_ERR)
      IF ((h8b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h13b_2 - 1 + noab * (h8b_2 - 1 + noab * (p3b_2 - noab - 
     &1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),3,1,2,6,5,4,1.0d0)
      END IF
      IF ((h13b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h8b_2 - 1 + noab * (h13b_2 - 1 + noab * (p3b_2 - noab - 
     &1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),2,1,3,6,5,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,6.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3)),dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_9',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_9',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_9',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),2,1,4,3,1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_9',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_9_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h8 h13 p3 p5 p6 p7 )_yt + = -1 * Sum ( h10 h11 p9 ) * t ( p3 p9 h10 h11 )_t * y ( h8 h10 h11 h13 p5 p6 p7 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h8b
      INTEGER h13b
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER h10b
      INTEGER h11b
      INTEGER p3b_1
      INTEGER p9b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h8b_2
      INTEGER h13b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h13b = h8b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+
     &int_mb(k_spin+p7b-1).ne.12)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h13b-1
     &) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),in
     &t_mb(k_sym+p7b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h13b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_
     &mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO h10b = 1,noab
      DO h11b = h10b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h
     &10b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+h10b-1),int_mb(k_sym+h11b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p9b,h10b,h11b,p3b_1,p9b_1,h10b_1,h11b_1)
      CALL TCE_RESTRICTED_8(h8b,h13b,h10b,h11b,p5b,p6b,p7b,p9b,h8b_2,h13
     &b_2,h10b_2,h11b_2,p5b_2,p6b_2,p7b_2,p9b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+h10b-1) * int_
     &mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h13b-1) * int_m
     &b(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_9_1',2,MA_ERR)
      IF ((p9b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_9_1',5,MA_ERR)
      IF ((h11b .lt. h8b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,4,3,2,1,5,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,4,3,2,1,6,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (p6b .le. p9b) .and. (p9b .lt. p7b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p7b-1),8,6,5,4,3,2,1,7,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (p7b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p9b-1),7,6,5,4,3,2,1,8,1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h8b .le. h11b) .and. (h11b .le. h13b) .
     &and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,4,2,3,1,5,1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h8b .le. h11b) .and. (h11b .le. h13b) .
     &and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,4,2,3,1,6,-1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h8b .le. h11b) .and. (h11b .le. h13b) .
     &and. (p6b .le. p9b) .and. (p9b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p7b-1),8,6,5,4,2,3,1,7,1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h8b .le. h11b) .and. (h11b .le. h13b) .
     &and. (p7b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p9b-1),7,6,5,4,2,3,1,8,-1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h13b .lt. h11b) .and. (p9b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p9b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,3,2,4,1,5,-1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h13b .lt. h11b) .and. (p5b .le. p9b) .a
     &nd. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,3,2,4,1,6,1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h13b .lt. h11b) .and. (p6b .le. p9b) .a
     &nd. (p9b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p7b-1),8,6,5,3,2,4,1,7,-1.0d0)
      END IF
      IF ((h10b .lt. h8b) .and. (h13b .lt. h11b) .and. (p7b .le. p9b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p9b-1),7,6,5,3,2,4,1,8,1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h11b .le. h13b) .and. (p9b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p9b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,4,1,3,2,5,-1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h11b .le. h13b) .and. (p5b .le. p9b) .a
     &nd. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,4,1,3,2,6,1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h11b .le. h13b) .and. (p6b .le. p9b) .a
     &nd. (p9b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p7b-1),8,6,5,4,1,3,2,7,-1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h11b .le. h13b) .and. (p7b .le. p9b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p9b-1),7,6,5,4,1,3,2,8,1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h10b .le. h13b) .and. (h13b .lt. h11b) 
     &.and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p9b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,3,1,4,2,5,1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h10b .le. h13b) .and. (h13b .lt. h11b) 
     &.and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,3,1,4,2,6,-1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h10b .le. h13b) .and. (h13b .lt. h11b) 
     &.and. (p6b .le. p9b) .and. (p9b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p7b-1),8,6,5,3,1,4,2,7,1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (h10b .le. h13b) .and. (h13b .lt. h11b) 
     &.and. (p7b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p9b-1),7,6,5,3,1,4,2,8,-1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p9b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,2,1,4,3,5,-1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,2,1,4,3,6,1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (p6b .le. p9b) .and. (p9b .lt. p7b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p7b-1),8,6,5,2,1,4,3,7,-1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (p7b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p9b-1),7,6,5,2,1,4,3,8,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9_
     &1',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_9_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_9_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_9_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+p3b-1),6,5,4,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (p6b - noab - 1 + nvab * (p5b - noab - 1 + nvab
     & * (h13b - 1 + noab * (h8b - 1 + noab * (p3b - noab - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_9_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_9_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h8 h13 p3 p5 p6 p7 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h8b
      INTEGER h13b
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h13b = h8b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-1
     &) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),in
     &t_mb(k_sym+p7b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+
     &int_mb(k_spin+p7b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_9_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h13b = h8b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-1
     &) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),in
     &t_mb(k_sym+p7b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+
     &int_mb(k_spin+p7b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p7b - noab - 1 + nvab * (p6b - noab - 1 
     &+ nvab * (p5b - noab - 1 + nvab * (h13b - 1 + noab * (h8b - 1 + no
     &ab * (p3b - noab - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h13b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
     & * int_mb(k_range+p7b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 p3 h1 h2 )_yttt + = -3/16 * P( 2 ) * Sum ( p14 ) * t ( p14 h1 )_t * i2 ( h13 p3 h2 p14 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p14b
      INTEGER p14b_1
      INTEGER h1b_1
      INTEGER p3b_2
      INTEGER h13b_2
      INTEGER h2b_2
      INTEGER p14b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,ieor(irrep_t,irrep_t)))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p14b = noab+1,noab+nvab
      IF (int_mb(k_spin+p14b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p14b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p14b,h1b,p14b_1,h1b_1)
      CALL TCE_RESTRICTED_4(p3b,h13b,h2b,p14b,p3b_2,h13b_2,h2b_2,p14b_2)
      dim_common = int_mb(k_range+p14b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_m
     &b(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p14b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h13b_2 - 1 + noab * (p3
     &b_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h2b-1),int_mb(k_range+p14b-
     &1),3,2,1,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1
     &),3,2,4,1,-3.0d0/16.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1
     &),3,2,1,4,3.0d0/16.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h13b - 1 + noab * (p3b - noab - 1))
     &)))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_1(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 p3 h1 p14 )_ytt + = -1 * Sum ( h9 h10 p8 ) * t ( p3 p8 h9 h10 )_t * i3 ( h9 h10 h13 h1 p8 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER h9b
      INTEGER h10b
      INTEGER p3b_1
      INTEGER p8b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h13b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h1b_2
      INTEGER p14b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO p14b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p14b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p14b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p14b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p8b,h9b,h10b,p3b_1,p8b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_6(h13b,h9b,h10b,h1b,p14b,p8b,h13b_2,h9b_2,h10b
     &_2,h1b_2,p14b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1) * int_m
     &b(k_range+h10b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1',2,MA_ERR)
      IF ((p8b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1',5,MA_ERR)
      IF ((h10b .le. h13b) .and. (p8b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h13b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p14b-1),6,4,3,2,1,5,1.0d0)
      END IF
      IF ((h10b .le. h13b) .and. (p14b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h13b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p14b-1),int_mb(k_range+p8b-1),5,4,3,2,1,6,-1.0d0
     &)
      END IF
      IF ((h9b .le. h13b) .and. (h13b .lt. h10b) .and. (p8b .le. p14b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h10b_2 - 1 + noab * (h13b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p14b-1),6,4,2,3,1,5,-1.0d0
     &)
      END IF
      IF ((h9b .le. h13b) .and. (h13b .lt. h10b) .and. (p14b .lt. p8b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h10b_2 - 1 + noab * (h13b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p14b-1),int_mb(k_range+p8b-1),5,4,2,3,1,6,1.0d0)
      END IF
      IF ((h13b .lt. h9b) .and. (p8b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h10b_2 - 1 + noab * (h9b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p14b-1),6,4,1,3,2,5,1.0d0)
      END IF
      IF ((h13b .lt. h9b) .and. (p14b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h10b_2 - 1 + noab * (h9b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p14b-1),int_mb(k_range+p8b-1),5,4,1,3,2,6,-1.0d0
     &)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h13b-1),int_mb(k_range+p3b-
     &1),4,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_10_1(l_a_offset,k_a_offset
     &,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 p3 h1 p14 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER p14b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO p14b = noab+1,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p14b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p14b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO p14b = noab+1,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p14b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+p3b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p14b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p14b - noab - 1 + nvab * (h1b - 1 + noab
     & * (h13b - 1 + noab * (p3b - noab - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int
     &_mb(k_range+h1b-1) * int_mb(k_range+p14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_1_1(d_a,k_a_offset,d_b,k_b_off
     &set,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h9 h10 h13 h1 p8 p14 )_yt + = -1 * Sum ( p6 ) * t ( p6 h1 )_t * i4 ( h9 h10 h13 p6 p8 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h9b
      INTEGER h10b
      INTEGER h13b
      INTEGER h1b
      INTEGER p8b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h13b_2
      INTEGER p8b_2
      INTEGER p14b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p8b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_r
     &ange+h13b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p8b-1) * int
     &_mb(k_range+p14b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      IF (int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p6b,h1b,p6b_1,h1b_1)
      CALL TCE_RESTRICTED_6(h9b,h10b,h13b,p8b,p14b,p6b,h9b_2,h10b_2,h13b
     &_2,p8b_2,p14b_2,p6b_2)
      dim_common = int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_m
     &b(k_range+h13b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p6b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_1',5,MA_ERR)
      IF ((p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (h13b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p14b-1),6,5,3,2,1,4,1.0d0)
      END IF
      IF ((p8b .lt. p6b) .and. (p6b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h13b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+p8b-
     &1),int_mb(k_range+p6b-1),int_mb(k_range+p14b-1),6,4,3,2,1,5,-1.0d0
     &)
      END IF
      IF ((p14b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h13b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+p8b-
     &1),int_mb(k_range+p14b-1),int_mb(k_range+p6b-1),5,4,3,2,1,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,-1.0d0
     &)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p8b - noab - 1 + nvab * (h1b - 1 + noab * (h1
     &3b - 1 + noab * (h10b - 1 + noab * (h9b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_10_1_1(l_a_offset,k_a_offs
     &et,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h9 h10 h13 h1 p8 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h9b
      INTEGER h10b
      INTEGER h13b
      INTEGER h1b
      INTEGER p8b
      INTEGER p14b
      length = 0
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p8b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p8b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p14b - noab - 1 + nvab * (p8b - noab - 1
     & + nvab * (h1b - 1 + noab * (h13b - 1 + noab * (h10b - 1 + noab * 
     &(h9b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int
     &_mb(k_range+h13b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p8b-1
     &) * int_mb(k_range+p14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_1_1_1(d_a,k_a_offset,d_c,k_c_o
     &ffset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h9 h10 h13 p6 p8 p14 )_y + = 1 * y ( h9 h10 h13 p6 p8 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h9b
      INTEGER h10b
      INTEGER h13b
      INTEGER p6b
      INTEGER p8b
      INTEGER p14b
      INTEGER dimc
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h13b_1
      INTEGER p6b_1
      INTEGER p8b_1
      INTEGER p14b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO p6b = noab+1,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1) .eq. int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_r
     &ange+h13b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int
     &_mb(k_range+p14b-1)
      CALL TCE_RESTRICTED_6(h9b,h10b,h13b,p6b,p8b,p14b,h9b_1,h10b_1,h13b
     &_1,p6b_1,p8b_1,p14b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_m
     &b(k_range+h13b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) 
     &* int_mb(k_range+p14b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_1_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_1_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p14b_
     &1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p6b_1 - noab - 1
     & + nvab * (h13b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p14b-1),6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_1_1',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_1_1',3,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p8b - noab - 1 + nvab * (p6b - noab - 1 + nva
     &b * (h13b - 1 + noab * (h10b - 1 + noab * (h9b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_1_1',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1_1_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_10_1_1_1(l_a_offset,k_a_of
     &fset,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h9 h10 h13 p6 p8 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h9b
      INTEGER h10b
      INTEGER h13b
      INTEGER p6b
      INTEGER p8b
      INTEGER p14b
      length = 0
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO p6b = noab+1,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1) .eq. int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_1_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO p6b = noab+1,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1) .eq. int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p14b - noab - 1 + nvab * (p8b - noab - 1
     & + nvab * (p6b - noab - 1 + nvab * (h13b - 1 + noab * (h10b - 1 + 
     &noab * (h9b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int
     &_mb(k_range+h13b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1
     &) * int_mb(k_range+p14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_1_1_2(d_a,k_a_offset,d_c,k_c_o
     &ffset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h9 h10 h13 p6 p8 p14 )_y + = 1/3 * y ( h9 h10 h13 p6 p8 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h9b
      INTEGER h10b
      INTEGER h13b
      INTEGER p6b
      INTEGER p8b
      INTEGER p14b
      INTEGER dimc
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h13b_1
      INTEGER p6b_1
      INTEGER p8b_1
      INTEGER p14b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO p6b = noab+1,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1) .eq. int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_r
     &ange+h13b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int
     &_mb(k_range+p14b-1)
      CALL TCE_RESTRICTED_6(h9b,h10b,h13b,p6b,p8b,p14b,h9b_1,h10b_1,h13b
     &_1,p6b_1,p8b_1,p14b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_m
     &b(k_range+h13b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) 
     &* int_mb(k_range+p14b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_1_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_1_2',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p14b_
     &1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p6b_1 - noab - 1
     & + nvab * (h13b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p14b-1),6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_1_2',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_1_2',3,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),6,5,4,3,2,1,1.0d0/
     &3.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p8b - noab - 1 + nvab * (p6b - noab - 1 + nva
     &b * (h13b - 1 + noab * (h10b - 1 + noab * (h9b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_1_2',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1_1_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_1_2(d_a,k_a_offset,d_b,k_b_off
     &set,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h9 h10 h13 h1 p8 p14 )_yt + = 2/3 * Sum ( h7 p5 p6 ) * t ( p5 p6 h1 h7 )_t * i4 ( h7 h9 h10 h13 p5 p6 p8 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h9b
      INTEGER h10b
      INTEGER h13b
      INTEGER h1b
      INTEGER p8b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h7b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h13b_2
      INTEGER h7b_2
      INTEGER p8b_2
      INTEGER p14b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-
     &1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1)
     &+int_mb(k_spin+p14b-1).ne.12)) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p1
     &4b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb
     &(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p8b-1),i
     &nt_mb(k_sym+p14b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_r
     &ange+h13b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p8b-1) * int
     &_mb(k_range+p14b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h7b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h7b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h1b,h7b,p5b_1,p6b_1,h1b_1,h7b_1)
      CALL TCE_RESTRICTED_8(h9b,h10b,h13b,h7b,p8b,p14b,p5b,p6b,h9b_2,h10
     &b_2,h13b_2,h7b_2,p8b_2,p14b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_m
     &b(k_range+h13b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_2',2,MA_ERR)
      IF ((h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h1b-1),int_mb(k_range+h7b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_2',5,MA_ERR)
      IF ((h7b .le. h9b) .and. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-
     &1),int_mb(k_range+p14b-1),8,7,4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p5b .le. p8b) .and. (p8b .lt. p6b) .and.
     & (p6b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p14b-1),8,6,4,3,2,1,7,5,-1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p5b .le. p8b) .and. (p14b .lt. p6b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p14b
     &-1),int_mb(k_range+p6b-1),7,6,4,3,2,1,8,5,1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p8b .lt. p5b) .and. (p6b .le. p14b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p14b-1),8,5,4,3,2,1,7,6,1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p8b .lt. p5b) .and. (p5b .le. p14b) .and
     &. (p14b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p14b
     &-1),int_mb(k_range+p6b-1),7,5,4,3,2,1,8,6,-1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p14b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p14b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p14b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),6,5,4,3,2,1,8,7,1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .le. h10b) .and. (p6b .le. p8b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-
     &1),int_mb(k_range+p14b-1),8,7,4,3,1,2,6,5,-1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .le. h10b) .and. (p5b .le. p8b) .and
     &. (p8b .lt. p6b) .and. (p6b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p14b-1),8,6,4,3,1,2,7,5,1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .le. h10b) .and. (p5b .le. p8b) .and
     &. (p14b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p14b
     &-1),int_mb(k_range+p6b-1),7,6,4,3,1,2,8,5,-1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .le. h10b) .and. (p8b .lt. p5b) .and
     &. (p6b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p14b-1),8,5,4,3,1,2,7,6,-1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .le. h10b) .and. (p8b .lt. p5b) .and
     &. (p5b .le. p14b) .and. (p14b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p14b
     &-1),int_mb(k_range+p6b-1),7,5,4,3,1,2,8,6,1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .le. h10b) .and. (p14b .lt. p5b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p14b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p14b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),6,5,4,3,1,2,8,7,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h13b) .and. (p6b .le. p8b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-
     &1),int_mb(k_range+p14b-1),8,7,4,2,1,3,6,5,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h13b) .and. (p5b .le. p8b) .an
     &d. (p8b .lt. p6b) .and. (p6b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p14b-1),8,6,4,2,1,3,7,5,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h13b) .and. (p5b .le. p8b) .an
     &d. (p14b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p14b
     &-1),int_mb(k_range+p6b-1),7,6,4,2,1,3,8,5,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h13b) .and. (p8b .lt. p5b) .an
     &d. (p6b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p14b-1),8,5,4,2,1,3,7,6,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h13b) .and. (p8b .lt. p5b) .an
     &d. (p5b .le. p14b) .and. (p14b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p14b
     &-1),int_mb(k_range+p6b-1),7,5,4,2,1,3,8,6,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h13b) .and. (p14b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p14b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p14b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),6,5,4,2,1,3,8,7,1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-
     &1),int_mb(k_range+p14b-1),8,7,3,2,1,4,6,5,-1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p5b .le. p8b) .and. (p8b .lt. p6b) .and
     &. (p6b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p14b-1),8,6,3,2,1,4,7,5,1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p5b .le. p8b) .and. (p14b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p14b
     &-1),int_mb(k_range+p6b-1),7,6,3,2,1,4,8,5,-1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p8b .lt. p5b) .and. (p6b .le. p14b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p14b-1),8,5,3,2,1,4,7,6,-1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p8b .lt. p5b) .and. (p5b .le. p14b) .an
     &d. (p14b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p14b
     &-1),int_mb(k_range+p6b-1),7,5,3,2,1,4,8,6,1.0d0)
      END IF
      IF ((h13b .lt. h7b) .and. (p14b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p14b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p14b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),6,5,3,2,1,4,8,7,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_2',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,2.0d0/
     &3.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p8b - noab - 1 + nvab * (h1b - 1 + noab * (h1
     &3b - 1 + noab * (h10b - 1 + noab * (h9b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_1_2_1(d_a,k_a_offset,d_c,k_c_o
     &ffset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h7 h9 h10 h13 p5 p6 p8 p14 )_y + = 1 * y ( h7 h9 h10 h13 p5 p6 p8 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h9b
      INTEGER h10b
      INTEGER h13b
      INTEGER p5b
      INTEGER p6b
      INTEGER p8b
      INTEGER p14b
      INTEGER dimc
      INTEGER h7b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h13b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p8b_1
      INTEGER p14b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1
     &)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6
     &b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h10b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p5b-1),i
     &eor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h9b-1) * int_mb(k_ra
     &nge+h10b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p5b-1) * int
     &_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p14b-1
     &)
      CALL TCE_RESTRICTED_8(h7b,h9b,h10b,h13b,p5b,p6b,p8b,p14b,h7b_1,h9b
     &_1,h10b_1,h13b_1,p5b_1,p6b_1,p8b_1,p14b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+h10b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p5b-1) 
     &* int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p
     &14b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_2_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p14b_
     &1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p6b_1 - noab - 1
     & + nvab * (p5b_1 - noab - 1 + nvab * (h13b_1 - 1 + noab * (h10b_1 
     &- 1 + noab * (h9b_1 - 1 + noab * (h7b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-
     &1),int_mb(k_range+p14b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_2_1',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_2_1',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h9b
     &-1),int_mb(k_range+h7b-1),8,7,6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p8b - noab - 1 + nvab * (p6b - noab - 1 + nva
     &b * (p5b - noab - 1 + nvab * (h13b - 1 + noab * (h10b - 1 + noab *
     & (h9b - 1 + noab * (h7b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_2_1',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1_2_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_10_1_2_1(l_a_offset,k_a_of
     &fset,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h7 h9 h10 h13 p5 p6 p8 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h7b
      INTEGER h9b
      INTEGER h10b
      INTEGER h13b
      INTEGER p5b
      INTEGER p6b
      INTEGER p8b
      INTEGER p14b
      length = 0
      DO h7b = 1,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1
     &)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6
     &b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h10b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p5b-1),i
     &eor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_2_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h7b = 1,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1
     &)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6
     &b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h10b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p5b-1),i
     &eor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p14b - noab - 1 + nvab * (p8b - noab - 1
     & + nvab * (p6b - noab - 1 + nvab * (p5b - noab - 1 + nvab * (h13b 
     &- 1 + noab * (h10b - 1 + noab * (h9b - 1 + noab * (h7b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h7b-1) * int_mb(k_range+h9b-1) * int_
     &mb(k_range+h10b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p5b-1
     &) * int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int_mb(k_range
     &+p14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_1_2_2(d_a,k_a_offset,d_c,k_c_o
     &ffset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h7 h9 h10 h13 p5 p6 p8 p14 )_y + = 1 * y ( h7 h9 h10 h13 p5 p6 p8 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h9b
      INTEGER h10b
      INTEGER h13b
      INTEGER p5b
      INTEGER p6b
      INTEGER p8b
      INTEGER p14b
      INTEGER dimc
      INTEGER h7b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h13b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p8b_1
      INTEGER p14b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO h13b = h10b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p14b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1
     &)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6
     &b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h10b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p5b-1),i
     &eor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h9b-1) * int_mb(k_ra
     &nge+h10b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p5b-1) * int
     &_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p14b-1
     &)
      CALL TCE_RESTRICTED_8(h7b,h9b,h10b,h13b,p5b,p6b,p8b,p14b,h7b_1,h9b
     &_1,h10b_1,h13b_1,p5b_1,p6b_1,p8b_1,p14b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+h10b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p5b-1) 
     &* int_mb(k_range+p6b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p
     &14b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_1_2_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_2_2',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p14b_
     &1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p6b_1 - noab - 1
     & + nvab * (p5b_1 - noab - 1 + nvab * (h13b_1 - 1 + noab * (h10b_1 
     &- 1 + noab * (h9b_1 - 1 + noab * (h7b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-
     &1),int_mb(k_range+p14b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_2_2',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_1_2_2',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h9b
     &-1),int_mb(k_range+h7b-1),8,7,6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p8b - noab - 1 + nvab * (p6b - noab - 1 + nva
     &b * (p5b - noab - 1 + nvab * (h13b - 1 + noab * (h10b - 1 + noab *
     & (h9b - 1 + noab * (h7b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_1_2_2',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_1_2_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_2(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 p3 h1 p14 )_ytt + = 1/6 * Sum ( h10 h11 h12 p8 p9 ) * t ( p3 p8 p9 h10 h11 h12 )_t * i3 ( h10 h11 h12 h13 h1 p8 p9 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h13b
      INTEGER h1b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p3b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h13b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER h1b_2
      INTEGER p14b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h1b = 1,noab
      DO p14b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p14b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p14b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p14b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)
     & .eq. int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1
     &2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+p9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),i
     &nt_mb(k_sym+h12b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p8b,p9b,h10b,h11b,h12b,p3b_1,p8b_1,p9b_1
     &,h10b_1,h11b_1,h12b_1)
      CALL TCE_RESTRICTED_8(h13b,h10b,h11b,h12b,h1b,p14b,p8b,p9b,h13b_2,
     &h10b_2,h11b_2,h12b_2,h1b_2,p14b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_m
     &b(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1
     &)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_2',2,MA_ERR)
      IF ((p9b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (p3b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),3,6,5,4,2,1,1.0d0)
      END IF
      IF ((p8b .lt. p3b) .and. (p3b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - 
     &noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p8b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),2,6,5,4,3,1,-1.0d0
     &)
      END IF
      IF ((p3b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - 
     &noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),1,6,5,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_2',5,MA_ERR)
      IF ((h12b .le. h13b) .and. (p9b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h13b_2 - 1 + noab * (h12b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p14b-1),8,5,4,3,2,1,7,6,1.0d0)
      END IF
      IF ((h12b .le. h13b) .and. (p8b .le. p14b) .and. (p14b .lt. p9b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h13b_2 - 1 + noab * (h12b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p1
     &4b-1),int_mb(k_range+p9b-1),7,5,4,3,2,1,8,6,-1.0d0)
      END IF
      IF ((h12b .le. h13b) .and. (p14b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p14b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h13b_2 - 1 + noab * (h12b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p14b-1),int_mb(k_range+p
     &8b-1),int_mb(k_range+p9b-1),6,5,4,3,2,1,8,7,1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h13b .lt. h12b) .and. (p9b .le. p14b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h13b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p14b-1),8,5,3,4,2,1,7,6,-1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h13b .lt. h12b) .and. (p8b .le. p14b) 
     &.and. (p14b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h13b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p1
     &4b-1),int_mb(k_range+p9b-1),7,5,3,4,2,1,8,6,1.0d0)
      END IF
      IF ((h11b .le. h13b) .and. (h13b .lt. h12b) .and. (p14b .lt. p8b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p14b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h13b_2 - 1 + n
     &oab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h13b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p14b-1),int_mb(k_range+p
     &8b-1),int_mb(k_range+p9b-1),6,5,3,4,2,1,8,7,-1.0d0)
      END IF
      IF ((h10b .le. h13b) .and. (h13b .lt. h11b) .and. (p9b .le. p14b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1 + n
     &oab * (h13b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p14b-1),8,5,2,4,3,1,7,6,1.0d0)
      END IF
      IF ((h10b .le. h13b) .and. (h13b .lt. h11b) .and. (p8b .le. p14b) 
     &.and. (p14b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1 + n
     &oab * (h13b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p1
     &4b-1),int_mb(k_range+p9b-1),7,5,2,4,3,1,8,6,-1.0d0)
      END IF
      IF ((h10b .le. h13b) .and. (h13b .lt. h11b) .and. (p14b .lt. p8b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p14b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1 + n
     &oab * (h13b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p14b-1),int_mb(k_range+p
     &8b-1),int_mb(k_range+p9b-1),6,5,2,4,3,1,8,7,1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (p9b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1 + n
     &oab * (h10b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p14b-1),8,5,1,4,3,2,7,6,-1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (p8b .le. p14b) .and. (p14b .lt. p9b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1 + n
     &oab * (h10b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p1
     &4b-1),int_mb(k_range+p9b-1),7,5,1,4,3,2,8,6,1.0d0)
      END IF
      IF ((h13b .lt. h10b) .and. (p14b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p14b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1 + n
     &oab * (h10b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12
     &b-1),int_mb(k_range+h1b-1),int_mb(k_range+p14b-1),int_mb(k_range+p
     &8b-1),int_mb(k_range+p9b-1),6,5,1,4,3,2,8,7,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(n
     &subh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_
     &b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h13b-1),int_mb(k_range+p3b-
     &1),4,3,2,1,1.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h13b - 1 + noab * (p3b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_2_1(d_a,k_a_offset,d_b,k_b_off
     &set,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h10 h11 h12 h13 h1 p8 p9 p14 )_yt + = 1 * Sum ( p6 ) * t ( p6 h1 )_t * i4 ( h10 h11 h12 h13 p6 p8 p9 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h13b
      INTEGER h1b
      INTEGER p8b
      INTEGER p9b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER h13b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER p14b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p14b = p9b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)
     &.ne.16)) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &4b-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_
     &range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1) * i
     &nt_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_range+p14b
     &-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_2_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      IF (int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p6b,h1b,p6b_1,h1b_1)
      CALL TCE_RESTRICTED_8(h10b,h11b,h12b,h13b,p8b,p9b,p14b,p6b,h10b_2,
     &h11b_2,h12b_2,h13b_2,p8b_2,p9b_2,p14b_2,p6b_2)
      dim_common = int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p8b-1
     &) * int_mb(k_range+p9b-1) * int_mb(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_2_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_2_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p6b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_2_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_2_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_2_1',5,MA_ERR)
      IF ((p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p6b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p14b-1),8,7,6,4,3,2,1,5,1.0d0)
      END IF
      IF ((p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p14b-1),8,7,5,4,3,2,1,6,-1.0d0)
      END IF
      IF ((p9b .lt. p6b) .and. (p6b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6
     &b-1),int_mb(k_range+p14b-1),8,6,5,4,3,2,1,7,1.0d0)
      END IF
      IF ((p14b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p1
     &4b-1),int_mb(k_range+p6b-1),7,6,5,4,3,2,1,8,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_2_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_2_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_2_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_2_1',9,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p8b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1
     &0b-1),int_mb(k_range+h1b-1),7,6,5,4,8,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p9b - noab - 1 + nvab * (p8b - noab - 1 + nva
     &b * (h1b - 1 + noab * (h13b - 1 + noab * (h12b - 1 + noab * (h11b 
     &- 1 + noab * (h10b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_2_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_2_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_10_2_1(l_a_offset,k_a_offs
     &et,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h10 h11 h12 h13 h1 p8 p9 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h13b
      INTEGER h1b
      INTEGER p8b
      INTEGER p9b
      INTEGER p14b
      length = 0
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p14b = p9b,noab+nvab
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &4b-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)
     &.ne.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_2_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p14b = p9b,noab+nvab
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &4b-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)
     &.ne.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p14b - noab - 1 + nvab * (p9b - noab - 1
     & + nvab * (p8b - noab - 1 + nvab * (h1b - 1 + noab * (h13b - 1 + n
     &oab * (h12b - 1 + noab * (h11b - 1 + noab * (h10b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * in
     &t_mb(k_range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+h1b
     &-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_ran
     &ge+p14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_2_1_1(d_a,k_a_offset,d_c,k_c_o
     &ffset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h10 h11 h12 h13 p6 p8 p9 p14 )_y + = 1 * y ( h10 h11 h12 h13 p6 p8 p9 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h13b
      INTEGER p6b
      INTEGER p8b
      INTEGER p9b
      INTEGER p14b
      INTEGER dimc
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h13b_1
      INTEGER p6b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER p14b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO p6b = noab+1,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p14b = p9b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p6b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)
     &.ne.16)) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p6b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p6b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &4b-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_
     &range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p6b-1) * i
     &nt_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_range+p14b
     &-1)
      CALL TCE_RESTRICTED_8(h10b,h11b,h12b,h13b,p6b,p8b,p9b,p14b,h10b_1,
     &h11b_1,h12b_1,h13b_1,p6b_1,p8b_1,p9b_1,p14b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p6b-1
     &) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_range
     &+p14b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_2_1_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_2_1_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p14b_
     &1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1
     & + nvab * (p6b_1 - noab - 1 + nvab * (h13b_1 - 1 + noab * (h12b_1 
     &- 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p14b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_2_1_1',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_2_1_1',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+h11
     &b-1),int_mb(k_range+h10b-1),8,7,6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p9b - noab - 1 + nvab * (p8b - noab - 1 + nva
     &b * (p6b - noab - 1 + nvab * (h13b - 1 + noab * (h12b - 1 + noab *
     & (h11b - 1 + noab * (h10b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_2_1_1',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_2_1_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_5_10_2_1_1(l_a_offset,k_a_of
     &fset,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h10 h11 h12 h13 p6 p8 p9 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h13b
      INTEGER p6b
      INTEGER p8b
      INTEGER p9b
      INTEGER p14b
      length = 0
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO p6b = noab+1,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p14b = p9b,noab+nvab
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p6b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p6b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &4b-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p6b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)
     &.ne.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_2_1_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO p6b = noab+1,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p14b = p9b,noab+nvab
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p6b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p6b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &4b-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p6b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)
     &.ne.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p14b - noab - 1 + nvab * (p9b - noab - 1
     & + nvab * (p8b - noab - 1 + nvab * (p6b - noab - 1 + nvab * (h13b 
     &- 1 + noab * (h12b - 1 + noab * (h11b - 1 + noab * (h10b - 1))))))
     &)
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * in
     &t_mb(k_range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p6b
     &-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_ran
     &ge+p14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_5_10_2_1_2(d_a,k_a_offset,d_c,k_c_o
     &ffset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h10 h11 h12 h13 p6 p8 p9 p14 )_y + = 1/3 * y ( h10 h11 h12 h13 p6 p8 p9 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER h13b
      INTEGER p6b
      INTEGER p8b
      INTEGER p9b
      INTEGER p14b
      INTEGER dimc
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h13b_1
      INTEGER p6b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER p14b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      DO h13b = h12b,noab
      DO p6b = noab+1,noab+nvab
      DO p8b = p6b,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p14b = p9b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p6b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)
     &.ne.16)) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+p6b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p6b-1)
     &,ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+p1
     &4b-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_
     &range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p6b-1) * i
     &nt_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_range+p14b
     &-1)
      CALL TCE_RESTRICTED_8(h10b,h11b,h12b,h13b,p6b,p8b,p9b,p14b,h10b_1,
     &h11b_1,h12b_1,h13b_1,p6b_1,p8b_1,p9b_1,p14b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+p6b-1
     &) * int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_mb(k_range
     &+p14b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10_2_1_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_2_1_2',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p14b_
     &1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1
     & + nvab * (p6b_1 - noab - 1 + nvab * (h13b_1 - 1 + noab * (h12b_1 
     &- 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9
     &b-1),int_mb(k_range+p14b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_2_1_2',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_5_10_2_1_2',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+h11
     &b-1),int_mb(k_range+h10b-1),8,7,6,5,4,3,2,1,1.0d0/3.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p9b - noab - 1 + nvab * (p8b - noab - 1 + nva
     &b * (p6b - noab - 1 + nvab * (h13b - 1 + noab * (h12b - 1 + noab *
     & (h11b - 1 + noab * (h10b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_5_10
     &_2_1_2',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_5_10_2_1_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_6(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = -1 * P( 2 ) * Sum ( h13 ) * t ( p3 p4 h1 h13 )_t * i1 ( h13 h2 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h13b
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER h1b_1
      INTEGER h13b_1
      INTEGER h13b_2
      INTEGER h2b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h13b = 1,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h13b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h13b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p4b,h1b,h13b,p3b_1,p4b_1,h1b_1,h13b_1)
      CALL TCE_RESTRICTED_2(h13b,h2b,h13b_2,h2b_2)
      dim_common = int_mb(k_range+h13b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb
     &(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6',2,MA_ERR)
      IF ((h13b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h13b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-1
     &),4,2,1,3,-1.0d0)
      END IF
      IF ((h1b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h13b-1
     &),3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h2b_2
     & - 1 + noab * (h13b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h2b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6',6
     &,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,1,2,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_6_1(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 h1 )_yt + = 1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h13 p6 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h13b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      IF (int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p6b,h1b,p6b_1,h1b_1)
      CALL TCE_RESTRICTED_2(h13b,p6b,h13b_2,p6b_2)
      dim_common = int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p6b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_1'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (h13b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+p6b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_1'
     &,6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_1',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h1b-1),1,2,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h13b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_6_1(l_a_offset,k_a_offset,si
     &ze)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 h1 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h13b
      INTEGER h1b
      length = 0
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = h1b - 1 + noab * (h13b - 1)
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_6_2(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 h1 )_yt + = -1/2 * Sum ( h8 p6 p7 ) * t ( p6 p7 h1 h8 )_t * y ( h8 h13 p6 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h13b_2
      INTEGER h8b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p6b,p7b,h1b,h8b,p6b_1,p7b_1,h1b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h13b,h8b,p6b,p7b,h13b_2,h8b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_m
     &b(k_range+h8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_2',2,MA_ERR)
      IF ((h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p6b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p6b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_2'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_2',5,MA_ERR)
      IF ((h8b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab
     & * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),2,1,4,3,1.0d0)
      END IF
      IF ((h13b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab 
     &* (h13b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),1,2,4,3,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_2'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h1b-1),1,2,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h13b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_2'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_6_3(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 h1 )_yt + = 1/12 * Sum ( h8 h9 p5 p6 p7 ) * t ( p5 p6 p7 h1 h8 h9 )_t * y ( h8 h9 h13 p5 p6 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h13b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h8b-1),int
     &_mb(k_sym+h9b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p5b,p6b,p7b,h1b,h8b,h9b,p5b_1,p6b_1,p7b_1,h1
     &b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_6(h13b,h8b,h9b,p5b,p6b,p7b,h13b_2,h8b_2,h9b_2,
     &p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_3',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),5,6,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),4,6,5,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_3'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_3',5,MA_ERR)
      IF ((h9b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h13b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h13b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),3,2,1,6,5,4,1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (h13b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),2,3,1,6,5,4,-1.0d0)
      END IF
      IF ((h13b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h13b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),1,3,2,6,5,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_3'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_3',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h1b-1),1,2,1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h13b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_3'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_6_4(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 h1 )_yt + = -1/144 * Sum ( h9 h10 h11 p5 p6 p7 p8 ) * t ( p5 p6 p7 p8 h1 h9 h10 h11 )_t * y ( h9 h10 h11 h13 p5 p6 p7 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER h10b
      INTEGER h11b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h13b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(4)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h1b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      DO h11b = h10b,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h9b-
     &1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+h11b-
     &1)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p5b,p6b,p7b,p8b,h1b,h9b,h10b,h11b,p5b_1,p6b_
     &1,p7b_1,p8b_1,h1b_1,h9b_1,h10b_1,h11b_1)
      CALL TCE_RESTRICTED_8(h13b,h9b,h10b,h11b,p5b,p6b,p7b,p8b,h13b_2,h9
     &b_2,h10b_2,h11b_2,p5b_2,p6b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1) *
     & int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_4',2,MA_ERR)
      IF ((h11b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1
     & + noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p
     &6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),8,7,6,5,4,3,2,1,-1.0d0)
      END IF
      IF ((h10b .lt. h1b) .and. (h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1
     & + noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p
     &6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h11b-1),7,8,6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h9b .lt. h1b) .and. (h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1
     & + noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p
     &6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),6,8,7,5,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p
     &6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),5,8,7,6,4,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_4'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_6_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_4',5,MA_ERR)
      IF ((h11b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h13b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),4,3,2,1,8,7,6,5,1.0d0)
      END IF
      IF ((h10b .le. h13b) .and. (h13b .lt. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h13b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),3,4,2,1,8,7,6,5,-1.0d0)
      END IF
      IF ((h9b .le. h13b) .and. (h13b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h13b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),2,4,3,1,8,7,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h9b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),1,4,3,2,8,7,6,5,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_4'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      nsuperp(4) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,144.0d0/FACTORIA
     &L(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIA
     &L(nsuperp(4))/FACTORIAL(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(ns
     &ubh(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_6_4',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h1b-1),1,2,-1.0d0/144.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h13b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_6_4'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_6_4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_7(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/2 * P( 2 ) * Sum ( h6 h7 p5 ) * t ( p3 p4 p5 h1 h6 h7 )_t * i1 ( h6 h7 h2 p5 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER h6b
      INTEGER h7b
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h6b_1
      INTEGER h7b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h2b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+p5b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h6b-1),int
     &_mb(k_sym+h7b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p4b,p5b,h1b,h6b,h7b,p3b_1,p4b_1,p5b_1,h1
     &b_1,h6b_1,h7b_1)
      CALL TCE_RESTRICTED_4(h6b,h7b,h2b,p5b,h6b_2,h7b_2,h2b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+h6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb
     &(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7',2,MA_ERR)
      IF ((p5b .lt. p3b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),6,3,2,5,4,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (h6b .lt. h1b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h6b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),5,3,2,6,4,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (h1b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),4,3,2,6,5,1,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),6,3,1,5,4,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (h6b .lt. h1b) .and.
     & (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h6b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),5,3,1,6,4,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (h1b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),4,3,1,6,5,2,-1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),6,2,1,5,4,3,1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h6b .lt. h1b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h6b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),5,2,1,6,4,3,-1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h1b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),4,2,1,6,5,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (h2b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_
     &2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),int_mb(k_range+p5b-1)
     &,3,2,1,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7',6
     &,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h6b .eq. h7b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,1,2,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_7_1(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h6 h7 h1 p5 )_yt + = -1 * Sum ( p8 ) * t ( p8 h1 )_t * y ( h6 h7 p5 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h1b
      INTEGER p5b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER p5b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p5b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h1b,p8b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h6b,h7b,p5b,p8b,h6b_2,h7b_2,p5b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7_1'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7_1',5,MA_ERR)
      IF ((p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab 
     &* (h6b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1)
     &,4,2,1,3,-1.0d0)
      END IF
      IF ((p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab 
     &* (h6b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1)
     &,3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7_1'
     &,6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1)
     &,3,2,4,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p5b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h7b - 1 + noab * (h6b - 1)))
     &))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_7_1(l_a_offset,k_a_offset,si
     &ze)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h6 h7 h1 p5 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h6b
      INTEGER h7b
      INTEGER h1b
      INTEGER p5b
      length = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p5b - noab - 1 + nvab * (h1b - 1 + noab 
     &* (h7b - 1 + noab * (h6b - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p5b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_7_2(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h6 h7 h1 p5 )_yt + = -1/2 * Sum ( h10 p8 p9 ) * t ( p8 p9 h1 h10 )_t * y ( h6 h7 h10 p5 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h1b
      INTEGER p5b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER h10b
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h10b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h10b_2
      INTEGER p5b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p5b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p8b,p9b,h1b,h10b,p8b_1,p9b_1,h1b_1,h10b_1)
      CALL TCE_RESTRICTED_6(h6b,h7b,h10b,p5b,p8b,p9b,h6b_2,h7b_2,h10b_2,
     &p5b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_m
     &b(k_range+h10b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7_2',2,MA_ERR)
      IF ((h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7_2'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7_2',5,MA_ERR)
      IF ((h10b .lt. h6b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h10b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),6,3,2,1,5,4,1.0d0)
      END IF
      IF ((h10b .lt. h6b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h10b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),5,3,2,1,6,4,-1.0d0)
      END IF
      IF ((h10b .lt. h6b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h10b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h6b .le. h10b) .and. (h10b .lt. h7b) .and. (p9b .lt. p5b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h10b_2 - 1 + noab * (h6b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),6,3,1,2,5,4,-1.0d0)
      END IF
      IF ((h6b .le. h10b) .and. (h10b .lt. h7b) .and. (p8b .lt. p5b) .an
     &d. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h10b_2 - 1 + noab * (h6b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),5,3,1,2,6,4,1.0d0)
      END IF
      IF ((h6b .le. h10b) .and. (h10b .lt. h7b) .and. (p5b .le. p8b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h10b_2 - 1 + noab * (h6b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),4,3,1,2,6,5,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),6,2,1,3,5,4,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),5,2,1,3,6,4,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),4,2,1,3,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7_2'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1)
     &,3,2,4,1,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p5b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h7b - 1 + noab * (h6b - 1)))
     &))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7_2'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_7_3(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h6 h7 h1 p5 )_yt + = -1/12 * Sum ( h11 h12 p8 p9 p10 ) * t ( p8 p9 p10 h1 h11 h12 )_t * y ( h6 h7 h11 h12 p5 p8 p9 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h1b
      INTEGER p5b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER p10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p5b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1).ne.8)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p5b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p5b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p5b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO p10b = p9b,noab+nvab
      DO h11b = 1,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1
     &) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1
     &2b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+p10b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h11b-1),i
     &nt_mb(k_sym+h12b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p8b,p9b,p10b,h1b,h11b,h12b,p8b_1,p9b_1,p10b_
     &1,h1b_1,h11b_1,h12b_1)
      CALL TCE_RESTRICTED_8(h6b,h7b,h11b,h12b,p5b,p8b,p9b,p10b,h6b_2,h7b
     &_2,h11b_2,h12b_2,p5b_2,p8b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_m
     &b(k_range+p10b-1) * int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1
     &)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7_3',2,MA_ERR)
      IF ((h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h11b .lt. h1b) .and. (h1b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),5,6,4,3,2,1,-1.0d0
     &)
      END IF
      IF ((h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),4,6,5,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7_3'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_7_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7_3',5,MA_ERR)
      IF ((h12b .lt. h6b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h6b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p5b-1),8,4,3,2,1,7,6,5,-1.0d0)
      END IF
      IF ((h12b .lt. h6b) .and. (p9b .lt. p5b) .and. (p5b .le. p10b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h6b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p10b-1),7,4,3,2,1,8,6,5,1.0d0)
      END IF
      IF ((h12b .lt. h6b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h6b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,4,3,2,1,8,7,5,-1.0d0)
      END IF
      IF ((h12b .lt. h6b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h6b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),5,4,3,2,1,8,7,6,1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (h6b .le. h12b) .and. (h12b .lt. h7b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p5b-1),8,4,2,3,1,7,6,5,1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (h6b .le. h12b) .and. (h12b .lt. h7b) .a
     &nd. (p9b .lt. p5b) .and. (p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p10b-1),7,4,2,3,1,8,6,5,-1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (h6b .le. h12b) .and. (h12b .lt. h7b) .a
     &nd. (p8b .lt. p5b) .and. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,4,2,3,1,8,7,5,1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (h6b .le. h12b) .and. (h12b .lt. h7b) .a
     &nd. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),5,4,2,3,1,8,7,6,-1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (h7b .le. h12b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p5b-1),8,3,2,4,1,7,6,5,-1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (h7b .le. h12b) .and. (p9b .lt. p5b) .an
     &d. (p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p10b-1),7,3,2,4,1,8,6,5,1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (h7b .le. h12b) .and. (p8b .lt. p5b) .an
     &d. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,3,2,4,1,8,7,5,-1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (h7b .le. h12b) .and. (p5b .le. p8b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),5,3,2,4,1,8,7,6,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h12b .lt. h7b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p5b-1),8,4,1,3,2,7,6,5,-1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h12b .lt. h7b) .and. (p9b .lt. p5b) .an
     &d. (p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p10b-1),7,4,1,3,2,8,6,5,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h12b .lt. h7b) .and. (p8b .lt. p5b) .an
     &d. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,4,1,3,2,8,7,5,-1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h12b .lt. h7b) .and. (p5b .le. p8b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),5,4,1,3,2,8,7,6,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (h7b .le. h12b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p5b-1),8,3,1,4,2,7,6,5,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (h7b .le. h12b) .a
     &nd. (p9b .lt. p5b) .and. (p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p10b-1),7,3,1,4,2,8,6,5,-1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (h7b .le. h12b) .a
     &nd. (p8b .lt. p5b) .and. (p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,3,1,4,2,8,7,5,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (h7b .le. h12b) .a
     &nd. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),5,3,1,4,2,8,7,6,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p5b-1),8,2,1,4,3,7,6,5,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (p9b .lt. p5b) .and. (p5b .le. p10b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p10b-1),7,2,1,4,3,8,6,5,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,2,1,4,3,8,7,5,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),5,2,1,4,3,8,7,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7_3'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_7_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1)
     &,3,2,4,1,-1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p5b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h7b - 1 + noab * (h6b - 1)))
     &))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_7_3'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_7_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_8(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/2 * P( 2 ) * Sum ( p13 ) * t ( p3 p13 h1 h2 )_t * i1 ( p4 p13 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p13b
      INTEGER p3b_1
      INTEGER p13b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p4b_2
      INTEGER p13b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p13b = noab+1,noab+nvab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p13b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p13b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p13b,h1b,h2b,p3b_1,p13b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_2(p4b,p13b,p4b_2,p13b_2)
      dim_common = int_mb(k_range+p13b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8',2,MA_ERR)
      IF ((p13b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p13b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,2,1,-1.0d0)
      END IF
      IF ((p3b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p13b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,1,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p4b_2 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p13b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8',6
     &,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8',9,MA_ERR)
      IF ((p3b .le. p4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,4,1,3,2,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p3b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,1,4,3,2,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p3b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_8_1(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 p13 )_yt + = -1 * Sum ( h7 h8 p6 ) * t ( p3 p6 h7 h8 )_t * y ( h7 h8 p6 p13 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p13b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER p3b_1
      INTEGER p6b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER p13b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p13b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p13b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+p13b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p13b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &7b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h7b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p6b,h7b,h8b,p3b_1,p6b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h7b,h8b,p13b,p6b,h7b_2,h8b_2,p13b_2,p6b_2)
      dim_common = int_mb(k_range+p6b-1) * int_mb(k_range+h7b-1) * int_m
     &b(k_range+h8b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8_1',2,MA_ERR)
      IF ((p6b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p6b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8_1'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8_1',5,MA_ERR)
      IF ((p6b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab
     & * (h7b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p6b-1),int_mb(k_range+p13b-1
     &),4,2,1,3,1.0d0)
      END IF
      IF ((p13b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab
     & * (h7b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p13b-1),int_mb(k_range+p6b-1
     &),3,2,1,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8_1'
     &,6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8_1',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p13b-1
     &),int_mb(k_range+p3b-1),2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p13b 
     &- noab - 1 + nvab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_8_1(l_a_offset,k_a_offset,si
     &ze)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 p13 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER p13b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO p13b = noab+1,noab+nvab
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+p13b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p13b-
     &1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO p13b = noab+1,noab+nvab
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+p13b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p13b-
     &1).ne.4)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p13b - noab - 1 + nvab * (p3b - noab - 1
     &)
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+p13b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_8_2(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 p13 )_yt + = 1/6 * Sum ( h7 h8 h9 p5 p6 ) * t ( p3 p5 p6 h7 h8 h9 )_t * y ( h7 h8 h9 p5 p6 p13 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p13b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p13b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p13b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p13b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+p13b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p13b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),int
     &_mb(k_sym+h9b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p5b,p6b,h7b,h8b,h9b,p3b_1,p5b_1,p6b_1,h7
     &b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_6(h7b,h8b,h9b,p13b,p5b,p6b,h7b_2,h8b_2,h9b_2,p
     &13b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8_2',2,MA_ERR)
      IF ((p6b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),3,6,5,4,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),2,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),1,6,5,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8_2'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8_2',5,MA_ERR)
      IF ((p6b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p13b-1),6,3,2,1,5,4,1.0d0)
      END IF
      IF ((p5b .le. p13b) .and. (p13b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+p6b-1),5,3,2,1,6,4,-1.0d0)
      END IF
      IF ((p13b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p13b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8_2'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(n
     &subh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_
     &b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p13b-1
     &),int_mb(k_range+p3b-1),2,1,1.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p13b 
     &- noab - 1 + nvab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8_2'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_8_3(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 p13 )_yt + = -1/72 * Sum ( h8 h9 h10 h11 p5 p6 p7 ) * t ( p3 p5 p6 p7 h8 h9 h10 h11 )_t * y ( h8 h9 h10 h11 p5 p6 p7 p13 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p13b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h10b
      INTEGER h11b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER p13b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(4)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p13b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p13b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+p13b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),int_mb(k_sym+p13b-1)) .eq. ieor(irrep
     &_y,irrep_t)) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p13b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      DO h10b = h9b,noab
      DO h11b = h10b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     &+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-
     &1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+h8b-1),ieo
     &r(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+h11b-
     &1)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p3b,p5b,p6b,p7b,h8b,h9b,h10b,h11b,p3b_1,p5b_
     &1,p6b_1,p7b_1,h8b_1,h9b_1,h10b_1,h11b_1)
      CALL TCE_RESTRICTED_8(h8b,h9b,h10b,h11b,p13b,p5b,p6b,p7b,h8b_2,h9b
     &_2,h10b_2,h11b_2,p13b_2,p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1) *
     & int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8_3',2,MA_ERR)
      IF ((p7b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1
     & + noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p
     &6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),4,8,7,6,5,3,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1
     & + noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p
     &6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),3,8,7,6,5,4,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1
     & + noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p
     &3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),2,8,7,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1
     & + noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p
     &5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),1,8,7,6,5,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8_3'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_8_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8_3',5,MA_ERR)
      IF ((p7b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p13b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p13b-1),8,4,3,2,1,7,6,5,1.0d0)
      END IF
      IF ((p6b .le. p13b) .and. (p13b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p13b
     &-1),int_mb(k_range+p7b-1),7,4,3,2,1,8,6,5,-1.0d0)
      END IF
      IF ((p5b .le. p13b) .and. (p13b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p13b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p13b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,3,2,1,8,7,5,1.0d0)
      END IF
      IF ((p13b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p13b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p13b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,3,2,1,8,7,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8_3'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      nsubh(4) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,144.0d0/FACTORIA
     &L(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIA
     &L(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(nsubh(3))/FACTORIAL(nsub
     &h(4)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d
     &0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_8_3',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p13b-1
     &),int_mb(k_range+p3b-1),2,1,-1.0d0/72.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p13b 
     &- noab - 1 + nvab * (p3b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_8_3'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_8_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_9(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/4 * Sum ( h15 h14 ) * t ( p3 p4 h14 h15 )_t * i1 ( h14 h15 h1 h2 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h14b
      INTEGER h15b
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER h14b_1
      INTEGER h15b_1
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h14b = 1,noab
      DO h15b = h14b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &14b-1)+int_mb(k_spin+h15b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h14b-1),int_mb(k_sym+h15b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p4b,h14b,h15b,p3b_1,p4b_1,h14b_1,h15b_1)
      CALL TCE_RESTRICTED_4(h14b,h15b,h1b,h2b,h14b_2,h15b_2,h1b_2,h2b_2)
      dim_common = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b-
     &1),2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h2b_2
     & - 1 + noab * (h1b_2 - 1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1
     &)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-
     &1),4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9',6
     &,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h14b .eq. h15b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,-1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_9_1(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 h15 h1 h2 )_yt + = -1 * Sum ( p5 p6 ) * t ( p5 p6 h1 h2 )_t * y ( h14 h15 p5 p6 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h1b,h2b,p5b_1,p6b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(h14b,h15b,p5b,p6b,h14b_2,h15b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_1'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab
     & * (h14b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_1'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-
     &1),2,1,4,3,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_9_1(l_a_offset,k_a_offset,si
     &ze)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 h15 h1 h2 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      length = 0
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = h2b - 1 + noab * (h1b - 1 + noab * (h15b
     & - 1 + noab * (h14b - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * in
     &t_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_9_2(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 h15 h1 h2 )_yt + = -1/3 * Sum ( h8 p5 p6 p7 ) * t ( p5 p6 p7 h1 h2 h8 )_t * y ( h8 h14 h15 p5 p6 p7 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h8b_1
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h8b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p5b,p6b,p7b,h1b,h2b,h8b,p5b_1,p6b_1,p7b_1,h1
     &b_1,h2b_1,h8b_1)
      CALL TCE_RESTRICTED_6(h14b,h15b,h8b,p5b,p6b,p7b,h14b_2,h15b_2,h8b_
     &2,p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_2',2,MA_ERR)
      IF ((h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),6,4,5,3,2,1,-1.0d0)
      END IF
      IF ((h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),5,4,6,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_2'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_2',5,MA_ERR)
      IF ((h8b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),3,2,1,6,5,4,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h8b .le. h15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h15b_2 - 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h15b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),3,1,2,6,5,4,-1.0d0)
      END IF
      IF ((h15b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h8b_2 - 1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),2,1,3,6,5,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_2'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,6.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3)),dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-
     &1),2,1,4,3,-1.0d0/3.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_2'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_9_3(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 h15 h1 h2 )_yt + = -1/24 * Sum ( h9 h10 p5 p6 p7 p8 ) * t ( p5 p6 p7 p8 h1 h2 h9 h10 )_t * y ( h9 h10 h14 h15 p5 p6 p7 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER h10b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(4)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-
     &1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h9b-1),int_mb(k_sym+h10b-1
     &)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p5b,p6b,p7b,p8b,h1b,h2b,h9b,h10b,p5b_1,p6b_1
     &,p7b_1,p8b_1,h1b_1,h2b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_8(h14b,h15b,h9b,h10b,p5b,p6b,p7b,p8b,h14b_2,h1
     &5b_2,h9b_2,h10b_2,p5b_2,p6b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1) *
     & int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_3',2,MA_ERR)
      IF ((h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),8,7,6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h9b .lt. h1b) .and. (h1b .le. h10b) .and. (h10b .lt. h2b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),8,6,7,5,4,3,2,1,-1.0d0)
      END IF
      IF ((h9b .lt. h1b) .and. (h2b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),7,6,8,5,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h9b) .and. (h10b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),8,5,7,6,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h9b) .and. (h9b .lt. h2b) .and. (h2b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),7,5,8,6,4,3,2,1,-1.0d0)
      END IF
      IF ((h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),6,5,8,7,4,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_3'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_3',5,MA_ERR)
      IF ((h10b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),4,3,2,1,8,7,6,5,1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (h14b .lt. h10b) .and. (h10b .le. h15b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h10b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),4,2,3,1,8,7,6,5,-1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (h15b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),3,2,4,1,8,7,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h9b) .and. (h10b .le. h15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h10b_2 -
     & 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),4,1,3,2,8,7,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h9b) .and. (h9b .le. h15b) .and. (h15b .lt. h10b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),3,1,4,2,8,7,6,5,-1.0d0)
      END IF
      IF ((h15b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 - 
     &1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p8b-1),2,1,4,3,8,7,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_3'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      nsuperp(4) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,48.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsuperp(4))/FACTORIAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_so
     &rt),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),
     &dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-
     &1),2,1,4,3,-1.0d0/24.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_3'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_9_4(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 h15 h1 h2 )_ytt + = -1 * P( 2 ) * Sum ( p10 ) * t ( p10 h1 )_t * i2 ( h14 h15 h2 p10 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h2b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      dimc = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p10b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p10b,h1b,p10b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h14b,h15b,h2b,p10b,h14b_2,h15b_2,h2b_2,p10b_
     &2)
      dim_common = int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_
     &mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p10b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h15b_2 - 1 + noab * (h1
     &4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h2b-1),int_mb(k_range+p10b
     &-1),3,2,1,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4'
     &,6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h15b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1)))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h15b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b-
     &1),3,2,1,4,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h15b - 1 + noab * (h14b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_9_4_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h14 h15 h1 p10 )_yt + = -1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h14 h15 p6 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER p10b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      IF (int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p6b,h1b,p6b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h14b,h15b,p10b,p6b,h14b_2,h15b_2,p10b_2,p6b_
     &2)
      dim_common = int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_
     &mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p6b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4_1',5,MA_ERR)
      IF ((p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (h15b_2 - 1 + noa
     &b * (h14b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),4,2,1,3,1.0d0)
      END IF
      IF ((p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noa
     &b * (h14b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),3,2,1,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_
     &1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b
     &-1),3,2,4,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_9_4_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h14 h15 h1 p10 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER p10b
      length = 0
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p10b - noab - 1 + nvab * (h1b - 1 + noab
     & * (h15b - 1 + noab * (h14b - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * in
     &t_mb(k_range+h1b-1) * int_mb(k_range+p10b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_9_4_2(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h14 h15 h1 p10 )_yt + = 1 * Sum ( h9 p7 p8 ) * t ( p7 p8 h1 h9 )_t * y ( h9 h14 h15 p7 p8 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p7b,p8b,h1b,h9b,p7b_1,p8b_1,h1b_1,h9b_1)
      CALL TCE_RESTRICTED_6(h14b,h15b,h9b,p10b,p7b,p8b,h14b_2,h15b_2,h9b
     &_2,p10b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_
     &mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4_2',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_
     &2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4_2',5,MA_ERR)
      IF ((h9b .le. h14b) .and. (p8b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p10b-1),6,3,2,1,5,4,1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (p7b .le. p10b) .and. (p10b .lt. p8b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p8b-1),5,3,2,1,6,4,-1.0d0
     &)
      END IF
      IF ((h9b .le. h14b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h9b) .and. (h9b .le. h15b) .and. (p8b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h15b_2 - 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p10b-1),6,3,1,2,5,4,-1.0d0
     &)
      END IF
      IF ((h14b .lt. h9b) .and. (h9b .le. h15b) .and. (p7b .le. p10b) .a
     &nd. (p10b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h15b_2 - 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p8b-1),5,3,1,2,6,4,1.0d0)
      END IF
      IF ((h14b .lt. h9b) .and. (h9b .le. h15b) .and. (p10b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (h15b_2 - 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,3,1,2,6,5,-1.0d0
     &)
      END IF
      IF ((h15b .lt. h9b) .and. (p8b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h9b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p8b-1),int_mb(k_range+p10b-1),6,2,1,3,5,4,1.0d0)
      END IF
      IF ((h15b .lt. h9b) .and. (p7b .le. p10b) .and. (p10b .lt. p8b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h9b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p8b-1),5,2,1,3,6,4,-1.0d0
     &)
      END IF
      IF ((h15b .lt. h9b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,2,1,3,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_
     &2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b
     &-1),3,2,4,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_
     &2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_9_4_3(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h14 h15 h1 p10 )_yt + = -1/6 * Sum ( h8 h9 p5 p6 p7 ) * t ( p5 p6 p7 h1 h8 h9 )_t * y ( h8 h9 h14 h15 p5 p6 p7 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t))
     & THEN
      dimc = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h8b-1),int
     &_mb(k_sym+h9b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p5b,p6b,p7b,h1b,h8b,h9b,p5b_1,p6b_1,p7b_1,h1
     &b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_8(h14b,h15b,h8b,h9b,p10b,p5b,p6b,p7b,h14b_2,h1
     &5b_2,h8b_2,h9b_2,p10b_2,p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_
     &mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4_3',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),5,6,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),4,6,5,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_
     &3',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4_3',5,MA_ERR)
      IF ((h9b .le. h14b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,4,3,2,1,7,6,5,1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (p6b .le. p10b) .and. (p10b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,4,3,2,1,8,6,5,-1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,3,2,1,8,7,5,1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,3,2,1,8,7,6,-1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (h9b .le. h15b) .a
     &nd. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,4,2,3,1,7,6,5,-1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (h9b .le. h15b) .a
     &nd. (p6b .le. p10b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,4,2,3,1,8,6,5,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (h9b .le. h15b) .a
     &nd. (p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,2,3,1,8,7,5,-1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (h9b .le. h15b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,2,3,1,8,7,6,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h15b .lt. h9b) .and. (p7b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,3,2,4,1,7,6,5,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h15b .lt. h9b) .and. (p6b .le. p10b) .a
     &nd. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,3,2,4,1,8,6,5,-1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h15b .lt. h9b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,3,2,4,1,8,7,5,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h15b .lt. h9b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,3,2,4,1,8,7,6,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h9b .le. h15b) .and. (p7b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,4,1,3,2,7,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h9b .le. h15b) .and. (p6b .le. p10b) .a
     &nd. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,4,1,3,2,8,6,5,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h9b .le. h15b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,1,3,2,8,7,5,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h9b .le. h15b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,1,3,2,8,7,6,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h8b .le. h15b) .and. (h15b .lt. h9b) .a
     &nd. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h15b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,3,1,4,2,7,6,5,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h8b .le. h15b) .and. (h15b .lt. h9b) .a
     &nd. (p6b .le. p10b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h15b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,3,1,4,2,8,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h8b .le. h15b) .and. (h15b .lt. h9b) .a
     &nd. (p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h15b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,3,1,4,2,8,7,5,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h8b .le. h15b) .and. (h15b .lt. h9b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h15b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,3,1,4,2,8,7,6,1.0d0)
      END IF
      IF ((h15b .lt. h8b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),8,2,1,4,3,7,6,5,1.0d0)
      END IF
      IF ((h15b .lt. h8b) .and. (p6b .le. p10b) .and. (p10b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),7,2,1,4,3,8,6,5,-1.0d0)
      END IF
      IF ((h15b .lt. h8b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,2,1,4,3,8,7,5,1.0d0)
      END IF
      IF ((h15b .lt. h8b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,2,1,4,3,8,7,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_
     &3',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_4_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b
     &-1),3,2,4,1,-1.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_4_
     &3',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_4_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_9_5(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 h15 h1 h2 )_ytt + = -1/4 * P( 2 ) * Sum ( h9 p7 p8 ) * t ( p7 p8 h1 h9 )_t * i2 ( h9 h14 h15 h2 p7 p8 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h9b_2
      INTEGER h2b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h14b = 1,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      dimc = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p7b,p8b,h1b,h9b,p7b_1,p8b_1,h1b_1,h9b_1)
      CALL TCE_RESTRICTED_6(h14b,h15b,h9b,h2b,p7b,p8b,h14b_2,h15b_2,h9b_
     &2,h2b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h15b-1) * int_
     &mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_5',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_5',5,MA_ERR)
      IF ((h9b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab 
     &* (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h2b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h9b) .and. (h9b .le. h15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab 
     &* (h15b_2 - 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1),int_mb(k_range+h2b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,3,1,2,6,5,-1.0d0)
      END IF
      IF ((h15b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab 
     &* (h9b_2 - 1 + noab * (h15b_2 - 1 + noab * (h14b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),4,2,1,3,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5'
     &,6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_5',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_5',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_5',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h15b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,-1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1)))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h15b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b-
     &1),3,2,1,4,1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h15b - 1 + noab * (h14b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_5',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_9_5_1(d_a,k_a_offset,d_b,k_b_offset
     &,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h9 h14 h15 h1 p7 p8 )_yt + = -1 * Sum ( h12 p10 p11 ) * t ( p10 p11 h1 h12 )_t * y ( h9 h12 h14 h15 p7 p8 p10 p11 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h9b
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER p7b
      INTEGER p8b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p11b
      INTEGER h12b
      INTEGER p10b_1
      INTEGER p11b_1
      INTEGER h1b_1
      INTEGER h12b_1
      INTEGER h9b_2
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h12b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER p10b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h9b = 1,noab
      DO h14b = h9b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h14b-
     &1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1).ne.12)) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb
     &(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p7b-1),i
     &nt_mb(k_sym+p8b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h9b-1) * int_mb(k_range+h14b-1) * int_mb(k_r
     &ange+h15b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p7b-1) * int
     &_mb(k_range+p8b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO p11b = p10b,noab+nvab
      DO h12b = 1,noab
      IF (int_mb(k_spin+p10b-1)+int_mb(k_spin+p11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p10b-1),ieor(int_mb(k_sym+p11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h12b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p10b,p11b,h1b,h12b,p10b_1,p11b_1,h1b_1,h12b_
     &1)
      CALL TCE_RESTRICTED_8(h9b,h14b,h15b,h12b,p7b,p8b,p10b,p11b,h9b_2,h
     &14b_2,h15b_2,h12b_2,p7b_2,p8b_2,p10b_2,p11b_2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+p11b-1) * int
     &_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h14b-1) * int_m
     &b(k_range+h15b-1) * int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_5_1',2,MA_ERR)
      IF ((h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (p11b_1 - noab - 1 + nvab * (p1
     &0b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h1b
     &-1),4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p11b_1 - noab - 1 + nvab * (p1
     &0b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+h1b-1),int_mb(k_range+h12b
     &-1),3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5_
     &1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_5_1',5,MA_ERR)
      IF ((h12b .lt. h9b) .and. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h9b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p
     &7b-1),int_mb(k_range+p8b-1),8,7,4,3,2,1,6,5,-1.0d0)
      END IF
      IF ((h12b .lt. h9b) .and. (p10b .lt. p7b) .and. (p7b .le. p11b) .a
     &nd. (p11b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h9b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p1
     &1b-1),int_mb(k_range+p8b-1),8,6,4,3,2,1,7,5,1.0d0)
      END IF
      IF ((h12b .lt. h9b) .and. (p10b .lt. p7b) .and. (p8b .le. p11b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h9b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p11b-1),7,6,4,3,2,1,8,5,-1.0d0)
      END IF
      IF ((h12b .lt. h9b) .and. (p7b .le. p10b) .and. (p11b .lt. p8b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h9b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1),int_mb(k_range+p1
     &1b-1),int_mb(k_range+p8b-1),8,5,4,3,2,1,7,6,-1.0d0)
      END IF
      IF ((h12b .lt. h9b) .and. (p7b .le. p10b) .and. (p10b .lt. p8b) .a
     &nd. (p8b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h9b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p11b-1),7,5,4,3,2,1,8,6,1.0d0)
      END IF
      IF ((h12b .lt. h9b) .and. (p8b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p8b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h9b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p11b-1),6,5,4,3,2,1,8,7,-1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (h12b .le. h14b) .and. (p11b .lt. p7b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p
     &7b-1),int_mb(k_range+p8b-1),8,7,4,3,1,2,6,5,1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (h12b .le. h14b) .and. (p10b .lt. p7b) .
     &and. (p7b .le. p11b) .and. (p11b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p1
     &1b-1),int_mb(k_range+p8b-1),8,6,4,3,1,2,7,5,-1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (h12b .le. h14b) .and. (p10b .lt. p7b) .
     &and. (p8b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p11b-1),7,6,4,3,1,2,8,5,1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (h12b .le. h14b) .and. (p7b .le. p10b) .
     &and. (p11b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1),int_mb(k_range+p1
     &1b-1),int_mb(k_range+p8b-1),8,5,4,3,1,2,7,6,1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (h12b .le. h14b) .and. (p7b .le. p10b) .
     &and. (p10b .lt. p8b) .and. (p8b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p11b-1),7,5,4,3,1,2,8,6,-1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (h12b .le. h14b) .and. (p8b .le. p10b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p8b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2
     & - 1 + noab * (h12b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p11b-1),6,5,4,3,1,2,8,7,1.0d0)
      END IF
      IF ((h14b .lt. h12b) .and. (h12b .le. h15b) .and. (p11b .lt. p7b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h12b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h12b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p
     &7b-1),int_mb(k_range+p8b-1),8,7,4,2,1,3,6,5,-1.0d0)
      END IF
      IF ((h14b .lt. h12b) .and. (h12b .le. h15b) .and. (p10b .lt. p7b) 
     &.and. (p7b .le. p11b) .and. (p11b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h12b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h12b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p1
     &1b-1),int_mb(k_range+p8b-1),8,6,4,2,1,3,7,5,1.0d0)
      END IF
      IF ((h14b .lt. h12b) .and. (h12b .le. h15b) .and. (p10b .lt. p7b) 
     &.and. (p8b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h12b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h12b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p11b-1),7,6,4,2,1,3,8,5,-1.0d0)
      END IF
      IF ((h14b .lt. h12b) .and. (h12b .le. h15b) .and. (p7b .le. p10b) 
     &.and. (p11b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h12b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h12b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1),int_mb(k_range+p1
     &1b-1),int_mb(k_range+p8b-1),8,5,4,2,1,3,7,6,-1.0d0)
      END IF
      IF ((h14b .lt. h12b) .and. (h12b .le. h15b) .and. (p7b .le. p10b) 
     &.and. (p10b .lt. p8b) .and. (p8b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h12b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h12b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p11b-1),7,5,4,2,1,3,8,6,1.0d0)
      END IF
      IF ((h14b .lt. h12b) .and. (h12b .le. h15b) .and. (p8b .le. p10b))
     & THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p8b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h12b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h12b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p11b-1),6,5,4,2,1,3,8,7,-1.0d0)
      END IF
      IF ((h15b .lt. h12b) .and. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h15b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p
     &7b-1),int_mb(k_range+p8b-1),8,7,3,2,1,4,6,5,1.0d0)
      END IF
      IF ((h15b .lt. h12b) .and. (p10b .lt. p7b) .and. (p7b .le. p11b) .
     &and. (p11b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h15b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p1
     &1b-1),int_mb(k_range+p8b-1),8,6,3,2,1,4,7,5,-1.0d0)
      END IF
      IF ((h15b .lt. h12b) .and. (p10b .lt. p7b) .and. (p8b .le. p11b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h15b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p11b-1),7,6,3,2,1,4,8,5,1.0d0)
      END IF
      IF ((h15b .lt. h12b) .and. (p7b .le. p10b) .and. (p11b .lt. p8b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h15b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1),int_mb(k_range+p1
     &1b-1),int_mb(k_range+p8b-1),8,5,3,2,1,4,7,6,1.0d0)
      END IF
      IF ((h15b .lt. h12b) .and. (p7b .le. p10b) .and. (p10b .lt. p8b) .
     &and. (p8b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h15b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1),int_mb(k_range+p8
     &b-1),int_mb(k_range+p11b-1),7,5,3,2,1,4,8,6,-1.0d0)
      END IF
      IF ((h15b .lt. h12b) .and. (p8b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p8b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h15b_2
     & - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p10
     &b-1),int_mb(k_range+p11b-1),6,5,3,2,1,4,8,7,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5_
     &1',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p10b .eq. p11b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_5_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_5_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_9_5_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h15b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (p7b - noab - 1 + nvab * (h1b - 1 + noab * (h15
     &b - 1 + noab * (h14b - 1 + noab * (h9b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5_
     &1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_9_5_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_9_5_1(l_a_offset,k_a_offset,
     &size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h9 h14 h15 h1 p7 p8 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h9b
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER p7b
      INTEGER p8b
      length = 0
      DO h9b = 1,noab
      DO h14b = h9b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb
     &(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p7b-1),i
     &nt_mb(k_sym+p8b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h14b-
     &1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_9_5_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h9b = 1,noab
      DO h14b = h9b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb
     &(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p7b-1),i
     &nt_mb(k_sym+p8b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+h14b-
     &1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p8b - noab - 1 + nvab * (p7b - noab - 1 
     &+ nvab * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1 + noab * (
     &h9b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h9b-1) * int_mb(k_range+h14b-1) * int
     &_mb(k_range+h15b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p7b-1
     &) * int_mb(k_range+p8b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = 1/2 * P( 4 ) * Sum ( h14 p15 ) * t ( p3 p15 h1 h14 )_t * i1 ( h14 p4 h2 p15 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p15b
      INTEGER h14b
      INTEGER p3b_1
      INTEGER p15b_1
      INTEGER h1b_1
      INTEGER h14b_1
      INTEGER p4b_2
      INTEGER h14b_2
      INTEGER h2b_2
      INTEGER p15b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p15b = noab+1,noab+nvab
      DO h14b = 1,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p15b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h14b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p15b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h14b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p15b,h1b,h14b,p3b_1,p15b_1,h1b_1,h14b_1)
      CALL TCE_RESTRICTED_4(p4b,h14b,h2b,p15b,p4b_2,h14b_2,h2b_2,p15b_2)
      dim_common = int_mb(k_range+p15b-1) * int_mb(k_range+h14b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10',2,MA_ERR)
      IF ((p15b .lt. p3b) .and. (h14b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h14b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p15
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p15b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b-
     &1),4,2,3,1,1.0d0)
      END IF
      IF ((p15b .lt. p3b) .and. (h1b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p15
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p15b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1),int_mb(k_range+h14b-
     &1),3,2,4,1,-1.0d0)
      END IF
      IF ((p3b .le. p15b) .and. (h14b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h14b_1 - 1 + noab * (p15b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p15b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b-
     &1),4,1,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p15b) .and. (h1b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p15b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p15b-1),int_mb(k_range+h1b-1),int_mb(k_range+h14b-
     &1),3,1,4,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h14b_2 - 1 + noab * (p4
     &b_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h2b-1),int_mb(k_range+p15b-
     &1),3,1,2,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10',
     &6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10',9,MA_ERR)
      IF ((p3b .le. p4b) .and. (h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,4,2,3,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((p3b .le. p4b) .and. (h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,4,2,1,3,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p3b) .and. (h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,2,4,3,1,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p3b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p3b) .and. (h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,2,4,1,3,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p3b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10_1(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 p3 h1 p15 )_yt + = 1 * Sum ( h8 p7 ) * t ( p3 p7 h1 h8 )_t * y ( h8 h14 p7 p15 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h14b
      INTEGER h1b
      INTEGER p15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER p3b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h14b_2
      INTEGER h8b_2
      INTEGER p15b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h14b = 1,noab
      DO h1b = 1,noab
      DO p15b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h14b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p15b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p15b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h14b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p15b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p7b,h1b,h8b,p3b_1,p7b_1,h1b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h14b,h8b,p15b,p7b,h14b_2,h8b_2,p15b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+p15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_1',2,MA_ERR)
      IF ((p7b .lt. p3b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,2,3,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,2,4,1,-1.0d0)
      END IF
      IF ((p3b .le. p7b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,1,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p7b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,1,4,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_1
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_1',5,MA_ERR)
      IF ((h8b .le. h14b) .and. (p7b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noa
     &b * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+p7b-1),int_mb(k_range+p15b-
     &1),4,2,1,3,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (p15b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (h14b_2 - 1 + noa
     &b * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+p15b-1),int_mb(k_range+p7b-
     &1),3,2,1,4,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p7b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab
     & * (h14b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+p7b-1),int_mb(k_range+p15b-
     &1),4,1,2,3,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p15b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab
     & * (h14b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+p15b-1),int_mb(k_range+p7b-
     &1),3,1,2,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_1
     &',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p15b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-
     &1),4,2,3,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p15b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h14b - 1 + noab * (p3b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_10_1(l_a_offset,k_a_offset,s
     &ize)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 p3 h1 p15 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h14b
      INTEGER h1b
      INTEGER p15b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h14b = 1,noab
      DO h1b = 1,noab
      DO p15b = noab+1,noab+nvab
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p15b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+p3b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p15b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h14b = 1,noab
      DO h1b = 1,noab
      DO p15b = noab+1,noab+nvab
      IF (int_mb(k_spin+h14b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p15b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h14b-1)+int_mb(k_spin+p3b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p15b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p15b - noab - 1 + nvab * (h1b - 1 + noab
     & * (h14b - 1 + noab * (p3b - noab - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h14b-1) * int
     &_mb(k_range+h1b-1) * int_mb(k_range+p15b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10_2(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 p3 h1 p15 )_yt + = 1/2 * Sum ( h7 h8 p5 p6 ) * t ( p3 p5 p6 h1 h7 h8 )_t * y ( h7 h8 h14 p5 p6 p15 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h14b
      INTEGER h1b
      INTEGER p15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h14b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER p15b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h14b = 1,noab
      DO h1b = 1,noab
      DO p15b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h14b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p15b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p15b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h14b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p15b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h7b-1),int
     &_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p5b,p6b,h1b,h7b,h8b,p3b_1,p5b_1,p6b_1,h1
     &b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_6(h14b,h7b,h8b,p15b,p5b,p6b,h14b_2,h7b_2,h8b_2
     &,p15b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+p15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_2',2,MA_ERR)
      IF ((p6b .lt. p3b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),6,3,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h7b .lt. h1b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),5,3,6,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,3,6,5,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),6,2,5,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h7b .lt. h1b) .and.
     & (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),5,2,6,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,2,6,5,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),6,1,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h7b .lt. h1b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),5,1,6,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,1,6,5,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_2
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_2',5,MA_ERR)
      IF ((h8b .le. h14b) .and. (p6b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h14b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p15b-1),6,3,2,1,5,4,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (p5b .le. p15b) .and. (p15b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h14b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p6b-1),5,3,2,1,6,4,-1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (p15b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (h14b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),int_mb(k_range+p15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h7b .le. h14b) .and. (h14b .lt. h8b) .and. (p6b .le. p15b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h8b_2 - 1 + noab * (h14b_2 - 1 + noab * (h7b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p15b-1),6,2,3,1,5,4,-1.0d0)
      END IF
      IF ((h7b .le. h14b) .and. (h14b .lt. h8b) .and. (p5b .le. p15b) .a
     &nd. (p15b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h8b_2 - 1 + noab * (h14b_2 - 1 + noab * (h7b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p6b-1),5,2,3,1,6,4,1.0d0)
      END IF
      IF ((h7b .le. h14b) .and. (h14b .lt. h8b) .and. (p15b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (h8b_2 - 1 + noab * (h14b_2 - 1 + noab * (h7b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),int_mb(k_range+p15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,2,3,1,6,5,-1.0d0)
      END IF
      IF ((h14b .lt. h7b) .and. (p6b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p15b-1),6,1,3,2,5,4,1.0d0)
      END IF
      IF ((h14b .lt. h7b) .and. (p5b .le. p15b) .and. (p15b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p6b-1),5,1,3,2,6,4,-1.0d0)
      END IF
      IF ((h14b .lt. h7b) .and. (p15b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h14b_2 - 1)))))
     &))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+p15b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,1,3,2,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_2
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(ns
     &ubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p15b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-
     &1),4,2,3,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p15b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h14b - 1 + noab * (p3b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_2
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10_3(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 p3 h1 p15 )_yt + = 1/18 * Sum ( h8 h9 h10 p5 p6 p7 ) * t ( p3 p5 p6 p7 h1 h8 h9 h10 )_t * y ( h8 h9 h10 h14 p5 p6 p7 p15 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h14b
      INTEGER h1b
      INTEGER p15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h10b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h14b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p15b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h14b = 1,noab
      DO h1b = 1,noab
      DO p15b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h14b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p15b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p15b-1)))) .eq. ieor(irrep_y,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h14b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p15b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     &+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h8b-
     &1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h9b-1),int_mb(k_sym+h10b-1
     &)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p3b,p5b,p6b,p7b,h1b,h8b,h9b,h10b,p3b_1,p5b_1
     &,p6b_1,p7b_1,h1b_1,h8b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_8(h14b,h8b,h9b,h10b,p15b,p5b,p6b,p7b,h14b_2,h8
     &b_2,h9b_2,h10b_2,p15b_2,p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1) *
     & int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+p15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_3',2,MA_ERR)
      IF ((p7b .lt. p3b) .and. (h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),8,4,7,6,5,3,2,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h9b .lt. h1b) .and. (h1b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),7,4,8,6,5,3,2,1,-1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),6,4,8,7,5,3,2,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),5,4,8,7,6,3,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h10b .lt. h1b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),8,3,7,6,5,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h9b .lt. h1b) .and.
     & (h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),7,3,8,6,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),6,3,8,7,5,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),5,3,8,7,6,4,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h10b .lt. h1b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),8,2,7,6,5,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h9b .lt. h1b) .and.
     & (h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),7,2,8,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),6,2,8,7,5,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),5,2,8,7,6,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),8,1,7,6,5,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h9b .lt. h1b) .and. (h1b .le. h10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),7,1,8,6,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),6,1,8,7,5,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5
     &b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),5,1,8,7,6,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_3
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_3',5,MA_ERR)
      IF ((h10b .le. h14b) .and. (p7b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p15b-1),8,4,3,2,1,7,6,5,1.0d0)
      END IF
      IF ((h10b .le. h14b) .and. (p6b .le. p15b) .and. (p15b .lt. p7b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p7b-1),7,4,3,2,1,8,6,5,-1.0d0)
      END IF
      IF ((h10b .le. h14b) .and. (p5b .le. p15b) .and. (p15b .lt. p6b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,4,3,2,1,8,7,5,1.0d0)
      END IF
      IF ((h10b .le. h14b) .and. (p15b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p15b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,4,3,2,1,8,7,6,-1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (h14b .lt. h10b) .and. (p7b .le. p15b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p15b-1),8,3,4,2,1,7,6,5,-1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (h14b .lt. h10b) .and. (p6b .le. p15b) .
     &and. (p15b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p7b-1),7,3,4,2,1,8,6,5,1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (h14b .lt. h10b) .and. (p5b .le. p15b) .
     &and. (p15b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,3,4,2,1,8,7,5,-1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (h14b .lt. h10b) .and. (p15b .lt. p5b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p15b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,3,4,2,1,8,7,6,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (p7b .le. p15b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p15b-1),8,2,4,3,1,7,6,5,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (p6b .le. p15b) .a
     &nd. (p15b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p7b-1),7,2,4,3,1,8,6,5,-1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (p5b .le. p15b) .a
     &nd. (p15b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,2,4,3,1,8,7,5,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (p15b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p15b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,2,4,3,1,8,7,6,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p7b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p15b-1),8,1,4,3,2,7,6,5,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p6b .le. p15b) .and. (p15b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p7b-1),7,1,4,3,2,8,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p5b .le. p15b) .and. (p15b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),6,1,4,3,2,8,7,5,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p15b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p15b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),5,1,4,3,2,8,7,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_3
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,36.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort
     &),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),di
     &ma_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p15b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-
     &1),4,2,3,1,1.0d0/18.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p15b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h14b - 1 + noab * (p3b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_3
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10_4(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 p3 h1 p15 )_ytt + = -1 * Sum ( h6 h13 p5 ) * t ( p3 p5 h6 h13 )_t * i2 ( h6 h13 h14 h1 p5 p15 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h14b
      INTEGER h1b
      INTEGER p15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER h6b
      INTEGER h13b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER h6b_1
      INTEGER h13b_1
      INTEGER h14b_2
      INTEGER h6b_2
      INTEGER h13b_2
      INTEGER h1b_2
      INTEGER p15b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h14b = 1,noab
      DO h1b = 1,noab
      DO p15b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h14b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p15b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p15b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h14b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p15b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO h6b = 1,noab
      DO h13b = h6b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &6b-1)+int_mb(k_spin+h13b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h6b-1),int_mb(k_sym+h13b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p5b,h6b,h13b,p3b_1,p5b_1,h6b_1,h13b_1)
      CALL TCE_RESTRICTED_6(h14b,h6b,h13b,h1b,p15b,p5b,h14b_2,h6b_2,h13b
     &_2,h1b_2,p15b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+h6b-1) * int_m
     &b(k_range+h13b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+p15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4',2,MA_ERR)
      IF ((p5b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h6b-1),int_mb(k_range+h13b-1
     &),2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h6b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h13b-1
     &),1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4',5,MA_ERR)
      IF ((h13b .le. h14b) .and. (p5b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h14b_2 - 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),6,4,3,2,1,5,1.0d0)
      END IF
      IF ((h13b .le. h14b) .and. (p15b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h14b_2 - 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-1),5,4,3,2,1,6,-1.0d0
     &)
      END IF
      IF ((h6b .le. h14b) .and. (h14b .lt. h13b) .and. (p5b .le. p15b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h13b_2 - 1 + noab * (h14b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),6,4,2,3,1,5,-1.0d0
     &)
      END IF
      IF ((h6b .le. h14b) .and. (h14b .lt. h13b) .and. (p15b .lt. p5b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h13b_2 - 1 + noab * (h14b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-1),5,4,2,3,1,6,1.0d0)
      END IF
      IF ((h14b .lt. h6b) .and. (p5b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h13b_2 - 1 + noab * (h6b_2 - 1 + noab * (h14b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),6,4,1,3,2,5,1.0d0)
      END IF
      IF ((h14b .lt. h6b) .and. (p15b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h13b_2 - 1 + noab * (h6b_2 - 1 + noab * (h14b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-
     &1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-1),5,4,1,3,2,6,-1.0d0
     &)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h6b .eq. h13b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p15b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h14b-1),int_mb(k_range+p3b-
     &1),4,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p15b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h14b - 1 + noab * (p3b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10_4_1(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h13 h14 h1 p5 p15 )_yt + = -1 * Sum ( p10 ) * t ( p10 h1 )_t * y ( h6 h13 h14 p5 p10 p15 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      INTEGER p15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h6b_2
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER p5b_2
      INTEGER p15b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h13b = h6b,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p15b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p15b-1).ne.12)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p1
     &5b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h14b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),i
     &nt_mb(k_sym+p15b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h14b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * int
     &_mb(k_range+p15b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p10b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p10b,h1b,p10b_1,h1b_1)
      CALL TCE_RESTRICTED_6(h6b,h13b,h14b,p5b,p15b,p10b,h6b_2,h13b_2,h14
     &b_2,p5b_2,p15b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h13b-1) * int_m
     &b(k_range+h14b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p10b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4_1',5,MA_ERR)
      IF ((p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (h14b_2 - 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),6,5,3,2,1,4,-1.0d
     &0)
      END IF
      IF ((p5b .le. p10b) .and. (p10b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (h14b_2 - 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p15b-1),6,4,3,2,1,5,1.0d0
     &)
      END IF
      IF ((p15b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (h14b_2 - 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p15b-1),int_mb(k_range+p10b-1),5,4,3,2,1,6,-1.0d
     &0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p15b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+h14b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,-1.0d0
     &)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p15b 
     &- noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h1
     &4b - 1 + noab * (h13b - 1 + noab * (h6b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_10_4_1(l_a_offset,k_a_offset
     &,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h13 h14 h1 p5 p15 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h6b
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      INTEGER p15b
      length = 0
      DO h6b = 1,noab
      DO h13b = h6b,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p15b = p5b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p1
     &5b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h14b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),i
     &nt_mb(k_sym+p15b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p15b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h6b = 1,noab
      DO h13b = h6b,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p15b = p5b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p1
     &5b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h14b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),i
     &nt_mb(k_sym+p15b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p15b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p15b - noab - 1 + nvab * (p5b - noab - 1
     & + nvab * (h1b - 1 + noab * (h14b - 1 + noab * (h13b - 1 + noab * 
     &(h6b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h6b-1) * int_mb(k_range+h13b-1) * int
     &_mb(k_range+h14b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1
     &) * int_mb(k_range+p15b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10_4_2(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h13 h14 h1 p5 p15 )_yt + = -1/4 * Sum ( h8 p16 p7 ) * t ( p7 p16 h1 h8 )_t * i3 ( h6 h8 h13 h14 p5 p7 p15 p16 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h13b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      INTEGER p15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p16b
      INTEGER h8b
      INTEGER p7b_1
      INTEGER p16b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h6b_2
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h8b_2
      INTEGER p5b_2
      INTEGER p15b_2
      INTEGER p7b_2
      INTEGER p16b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h13b = h6b,noab
      DO h14b = h13b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p15b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p15b-1).ne.12)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-
     &1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p1
     &5b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb
     &(k_sym+h14b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),i
     &nt_mb(k_sym+p15b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h13b-1) * int_mb(k_r
     &ange+h14b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * int
     &_mb(k_range+p15b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p16b = p7b,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p16b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p16b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p7b,p16b,h1b,h8b,p7b_1,p16b_1,h1b_1,h8b_1)
      CALL TCE_RESTRICTED_8(h6b,h13b,h14b,h8b,p5b,p15b,p7b,p16b,h6b_2,h1
     &3b_2,h14b_2,h8b_2,p5b_2,p15b_2,p7b_2,p16b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p16b-1) * int_
     &mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h13b-1) * int_m
     &b(k_range+h14b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4_2',2,MA_ERR)
      IF ((h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p16b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p16b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1
     &),4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p16b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p16b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1
     &),3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &_2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4_2',5,MA_ERR)
      IF ((h8b .lt. h6b) .and. (p16b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p16b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p16b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p15b-1),8,7,4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h8b .lt. h6b) .and. (p7b .lt. p5b) .and. (p5b .le. p16b) .and
     &. (p16b .lt. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p16b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p16b
     &-1),int_mb(k_range+p15b-1),8,6,4,3,2,1,7,5,-1.0d0)
      END IF
      IF ((h8b .lt. h6b) .and. (p7b .lt. p5b) .and. (p15b .le. p16b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p16b-1),7,6,4,3,2,1,8,5,1.0d0)
      END IF
      IF ((h8b .lt. h6b) .and. (p5b .le. p7b) .and. (p16b .lt. p15b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p16b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p16b
     &-1),int_mb(k_range+p15b-1),8,5,4,3,2,1,7,6,1.0d0)
      END IF
      IF ((h8b .lt. h6b) .and. (p5b .le. p7b) .and. (p7b .le. p15b) .and
     &. (p15b .le. p16b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p16b-1),7,5,4,3,2,1,8,6,-1.0d0)
      END IF
      IF ((h8b .lt. h6b) .and. (p15b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p15b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h6b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p16b-1),6,5,4,3,2,1,8,7,1.0d0)
      END IF
      IF ((h6b .le. h8b) .and. (h8b .le. h13b) .and. (p16b .lt. p5b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p16b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h8b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p16b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p15b-1),8,7,4,3,1,2,6,5,-1.0d0)
      END IF
      IF ((h6b .le. h8b) .and. (h8b .le. h13b) .and. (p7b .lt. p5b) .and
     &. (p5b .le. p16b) .and. (p16b .lt. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p16b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h8b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p16b
     &-1),int_mb(k_range+p15b-1),8,6,4,3,1,2,7,5,1.0d0)
      END IF
      IF ((h6b .le. h8b) .and. (h8b .le. h13b) .and. (p7b .lt. p5b) .and
     &. (p15b .le. p16b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h8b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p16b-1),7,6,4,3,1,2,8,5,-1.0d0)
      END IF
      IF ((h6b .le. h8b) .and. (h8b .le. h13b) .and. (p5b .le. p7b) .and
     &. (p16b .lt. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p16b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h8b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p16b
     &-1),int_mb(k_range+p15b-1),8,5,4,3,1,2,7,6,-1.0d0)
      END IF
      IF ((h6b .le. h8b) .and. (h8b .le. h13b) .and. (p5b .le. p7b) .and
     &. (p7b .le. p15b) .and. (p15b .le. p16b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h8b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p16b-1),7,5,4,3,1,2,8,6,1.0d0)
      END IF
      IF ((h6b .le. h8b) .and. (h8b .le. h13b) .and. (p15b .lt. p7b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p15b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h13b_2
     & - 1 + noab * (h8b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p16b-1),6,5,4,3,1,2,8,7,-1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (h8b .le. h14b) .and. (p16b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p16b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p16b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p15b-1),8,7,4,2,1,3,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (h8b .le. h14b) .and. (p7b .lt. p5b) .an
     &d. (p5b .le. p16b) .and. (p16b .lt. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p16b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p16b
     &-1),int_mb(k_range+p15b-1),8,6,4,2,1,3,7,5,-1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (h8b .le. h14b) .and. (p7b .lt. p5b) .an
     &d. (p15b .le. p16b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p16b-1),7,6,4,2,1,3,8,5,1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (h8b .le. h14b) .and. (p5b .le. p7b) .an
     &d. (p16b .lt. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p16b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p16b
     &-1),int_mb(k_range+p15b-1),8,5,4,2,1,3,7,6,1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (h8b .le. h14b) .and. (p5b .le. p7b) .an
     &d. (p7b .le. p15b) .and. (p15b .le. p16b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p16b-1),7,5,4,2,1,3,8,6,-1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (h8b .le. h14b) .and. (p15b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p15b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h8b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p16b-1),6,5,4,2,1,3,8,7,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p16b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p16b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p16b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p15b-1),8,7,3,2,1,4,6,5,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p7b .lt. p5b) .and. (p5b .le. p16b) .an
     &d. (p16b .lt. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p16b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p16b
     &-1),int_mb(k_range+p15b-1),8,6,3,2,1,4,7,5,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p7b .lt. p5b) .and. (p15b .le. p16b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p7b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p16b-1),7,6,3,2,1,4,8,5,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p5b .le. p7b) .and. (p16b .lt. p15b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p16b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p16b
     &-1),int_mb(k_range+p15b-1),8,5,3,2,1,4,7,6,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p5b .le. p7b) .and. (p7b .le. p15b) .an
     &d. (p15b .le. p16b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p7b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p16b-1),7,5,3,2,1,4,8,6,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (p15b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p16b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p15b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p16b-1),6,5,3,2,1,4,8,7,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &_2',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p16b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4_2',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p15b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+h14b-1),int_mb(k_range+h13b
     &-1),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,-1.0d0
     &/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p15b 
     &- noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h1
     &4b - 1 + noab * (h13b - 1 + noab * (h6b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &_2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10_4_2_1(d_a,k_a_offset,d_c,k_c_off
     &set)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h6 h8 h13 h14 p5 p7 p15 p16 )_y + = 1 * y ( h6 h8 h13 h14 p5 p7 p15 p16 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h8b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p7b
      INTEGER p15b
      INTEGER p16b
      INTEGER dimc
      INTEGER h6b_1
      INTEGER h8b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER p5b_1
      INTEGER p7b_1
      INTEGER p15b_1
      INTEGER p16b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h8b = h6b,noab
      DO h13b = h8b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p7b = p5b,noab+nvab
      DO p15b = p7b,noab+nvab
      DO p16b = p15b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p7b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p16b-1).
     &ne.16)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h13b-1
     &)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p7
     &b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p16b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),i
     &eor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p15b-1),int_mb(k_sym+p16
     &b-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1) * int
     &_mb(k_range+p7b-1) * int_mb(k_range+p15b-1) * int_mb(k_range+p16b-
     &1)
      CALL TCE_RESTRICTED_8(h6b,h8b,h13b,h14b,p5b,p7b,p15b,p16b,h6b_1,h8
     &b_1,h13b_1,h14b_1,p5b_1,p7b_1,p15b_1,p16b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1) 
     &* int_mb(k_range+p7b-1) * int_mb(k_range+p15b-1) * int_mb(k_range+
     &p16b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4_2_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p16b_
     &1 - noab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p7b_1 - noab - 
     &1 + nvab * (p5b_1 - noab - 1 + nvab * (h14b_1 - 1 + noab * (h13b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h6b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p16b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &_2_1',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4_2_1',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p16b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h8
     &b-1),int_mb(k_range+h6b-1),8,7,6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p16b 
     &- noab - 1 + nvab * (p15b - noab - 1 + nvab * (p7b - noab - 1 + nv
     &ab * (p5b - noab - 1 + nvab * (h14b - 1 + noab * (h13b - 1 + noab 
     &* (h8b - 1 + noab * (h6b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &_2_1',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4_2_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_10_4_2_1(l_a_offset,k_a_offs
     &et,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h6 h8 h13 h14 p5 p7 p15 p16 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h6b
      INTEGER h8b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p7b
      INTEGER p15b
      INTEGER p16b
      length = 0
      DO h6b = 1,noab
      DO h8b = h6b,noab
      DO h13b = h8b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p7b = p5b,noab+nvab
      DO p15b = p7b,noab+nvab
      DO p16b = p15b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h13b-1
     &)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p7
     &b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p16b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),i
     &eor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p15b-1),int_mb(k_sym+p16
     &b-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p7b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p16b-1).
     &ne.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4_2_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h6b = 1,noab
      DO h8b = h6b,noab
      DO h13b = h8b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p7b = p5b,noab+nvab
      DO p15b = p7b,noab+nvab
      DO p16b = p15b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h13b-1
     &)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p7
     &b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p16b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),i
     &eor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p15b-1),int_mb(k_sym+p16
     &b-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p7b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p16b-1).
     &ne.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p16b - noab - 1 + nvab * (p15b - noab - 
     &1 + nvab * (p7b - noab - 1 + nvab * (p5b - noab - 1 + nvab * (h14b
     & - 1 + noab * (h13b - 1 + noab * (h8b - 1 + noab * (h6b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h6b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1
     &) * int_mb(k_range+p7b-1) * int_mb(k_range+p15b-1) * int_mb(k_rang
     &e+p16b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10_4_2_2(d_a,k_a_offset,d_c,k_c_off
     &set)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h6 h8 h13 h14 p5 p7 p15 p16 )_y + = 1 * y ( h6 h8 h13 h14 p5 p7 p15 p16 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h8b
      INTEGER h13b
      INTEGER h14b
      INTEGER p5b
      INTEGER p7b
      INTEGER p15b
      INTEGER p16b
      INTEGER dimc
      INTEGER h6b_1
      INTEGER h8b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER p5b_1
      INTEGER p7b_1
      INTEGER p15b_1
      INTEGER p16b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h8b = h6b,noab
      DO h13b = h8b,noab
      DO h14b = h13b,noab
      DO p5b = noab+1,noab+nvab
      DO p7b = p5b,noab+nvab
      DO p15b = p7b,noab+nvab
      DO p16b = p15b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p7b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p16b-1).
     &ne.16)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h13b-1
     &)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p7
     &b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p16b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+p5b-1),i
     &eor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p15b-1),int_mb(k_sym+p16
     &b-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1) * int
     &_mb(k_range+p7b-1) * int_mb(k_range+p15b-1) * int_mb(k_range+p16b-
     &1)
      CALL TCE_RESTRICTED_8(h6b,h8b,h13b,h14b,p5b,p7b,p15b,p16b,h6b_1,h8
     &b_1,h13b_1,h14b_1,p5b_1,p7b_1,p15b_1,p16b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1) 
     &* int_mb(k_range+p7b-1) * int_mb(k_range+p15b-1) * int_mb(k_range+
     &p16b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4_2_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4_2_2',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p16b_
     &1 - noab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p7b_1 - noab - 
     &1 + nvab * (p5b_1 - noab - 1 + nvab * (h14b_1 - 1 + noab * (h13b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h6b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p15b
     &-1),int_mb(k_range+p16b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &_2_2',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_4_2_2',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p16b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p7b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+h14b-1),int_mb(k_range+h13b-1),int_mb(k_range+h8
     &b-1),int_mb(k_range+h6b-1),8,7,6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p16b 
     &- noab - 1 + nvab * (p15b - noab - 1 + nvab * (p7b - noab - 1 + nv
     &ab * (p5b - noab - 1 + nvab * (h14b - 1 + noab * (h13b - 1 + noab 
     &* (h8b - 1 + noab * (h6b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_4
     &_2_2',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_4_2_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10_5(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h14 p3 h1 p15 )_ytt + = 1/6 * Sum ( h7 h8 h9 p5 p6 ) * t ( p3 p5 p6 h7 h8 h9 )_t * i2 ( h7 h8 h9 h14 h1 p5 p6 p15 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h14b
      INTEGER h1b
      INTEGER p15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h14b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h1b_2
      INTEGER p15b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h14b = 1,noab
      DO h1b = 1,noab
      DO p15b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h14b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p15b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p15b-1)))) .eq. ieor(irrep_y,ieor(irrep
     &_t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h14b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p15b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),int
     &_mb(k_sym+h9b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p5b,p6b,h7b,h8b,h9b,p3b_1,p5b_1,p6b_1,h7
     &b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_8(h14b,h7b,h8b,h9b,h1b,p15b,p5b,p6b,h14b_2,h7b
     &_2,h8b_2,h9b_2,h1b_2,p15b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h14b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+p15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_5',2,MA_ERR)
      IF ((p6b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),3,6,5,4,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),2,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),1,6,5,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_5',5,MA_ERR)
      IF ((h9b .le. h14b) .and. (p6b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1 + no
     &ab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p15b-1),8,5,4,3,2,1,7,6,1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (p5b .le. p15b) .and. (p15b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1 + no
     &ab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-
     &1),int_mb(k_range+p6b-1),7,5,4,3,2,1,8,6,-1.0d0)
      END IF
      IF ((h9b .le. h14b) .and. (p15b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h14b_2 - 1 + noab * (h9b_2 - 1 + no
     &ab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),6,5,4,3,2,1,8,7,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (p6b .le. p15b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1 + no
     &ab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p15b-1),8,5,3,4,2,1,7,6,-1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (p5b .le. p15b) .a
     &nd. (p15b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1 + no
     &ab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-
     &1),int_mb(k_range+p6b-1),7,5,3,4,2,1,8,6,1.0d0)
      END IF
      IF ((h8b .le. h14b) .and. (h14b .lt. h9b) .and. (p15b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h9b_2 - 1 + noab * (h14b_2 - 1 + no
     &ab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),6,5,3,4,2,1,8,7,-1.0d0)
      END IF
      IF ((h7b .le. h14b) .and. (h14b .lt. h8b) .and. (p6b .le. p15b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h14b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p15b-1),8,5,2,4,3,1,7,6,1.0d0)
      END IF
      IF ((h7b .le. h14b) .and. (h14b .lt. h8b) .and. (p5b .le. p15b) .a
     &nd. (p15b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h14b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-
     &1),int_mb(k_range+p6b-1),7,5,2,4,3,1,8,6,-1.0d0)
      END IF
      IF ((h7b .le. h14b) .and. (h14b .lt. h8b) .and. (p15b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h14b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),6,5,2,4,3,1,8,7,1.0d0)
      END IF
      IF ((h14b .lt. h7b) .and. (p6b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1
     &),int_mb(k_range+p15b-1),8,5,1,4,3,2,7,6,-1.0d0)
      END IF
      IF ((h14b .lt. h7b) .and. (p5b .le. p15b) .and. (p15b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p15b-
     &1),int_mb(k_range+p6b-1),7,5,1,4,3,2,8,6,1.0d0)
      END IF
      IF ((h14b .lt. h7b) .and. (p15b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p15b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h14b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h14b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p15b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),6,5,1,4,3,2,8,7,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(n
     &subh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_
     &b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_5',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_5',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_5',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p15b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h14b-1),int_mb(k_range+p3b-
     &1),4,3,2,1,1.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p15b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h14b - 1 + noab * (p3b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_5',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_10_5_1(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h7 h8 h9 h14 h1 p5 p6 p15 )_yt + = -1 * Sum ( p12 ) * t ( p12 h1 )_t * y ( h7 h8 h9 h14 p5 p6 p12 p15 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      INTEGER p15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p12b
      INTEGER p12b_1
      INTEGER h1b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h14b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p15b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h14b = h9b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p15b = p6b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p15b-1).ne
     &.16)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b
     &-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+p15b-
     &1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+h1b-1) * int_
     &mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+p15b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+p12b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p12b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p12b,h1b,p12b_1,h1b_1)
      CALL TCE_RESTRICTED_8(h7b,h8b,h9b,h14b,p5b,p6b,p15b,p12b,h7b_2,h8b
     &_2,h9b_2,h14b_2,p5b_2,p6b_2,p15b_2,p12b_2)
      dim_common = int_mb(k_range+p12b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+p5b-1) *
     & int_mb(k_range+p6b-1) * int_mb(k_range+p15b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_5_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p12b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5
     &_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_5_1',5,MA_ERR)
      IF ((p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p12b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p15b-1),8,7,6,4,3,2,1,5,1.0d0)
      END IF
      IF ((p5b .le. p12b) .and. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p12b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p15b-1),8,7,5,4,3,2,1,6,-1.0d0)
      END IF
      IF ((p6b .le. p12b) .and. (p12b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p15b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p15b-1),8,6,5,4,3,2,1,7,1.0d0)
      END IF
      IF ((p15b .lt. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p15b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h14b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h14b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p15b-
     &1),int_mb(k_range+p12b-1),7,6,5,4,3,2,1,8,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5
     &_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_5_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_5_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_10_5_1',9,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p15b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_mb(k_range+h14b-
     &1),int_mb(k_range+h9b-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+h1b-1),7,6,5,4,8,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p15b 
     &- noab - 1 + nvab * (p6b - noab - 1 + nvab * (p5b - noab - 1 + nva
     &b * (h1b - 1 + noab * (h14b - 1 + noab * (h9b - 1 + noab * (h8b - 
     &1 + noab * (h7b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5
     &_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_10_5_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_10_5_1(l_a_offset,k_a_offset
     &,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h7 h8 h9 h14 h1 p5 p6 p15 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h14b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      INTEGER p15b
      length = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h14b = h9b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p15b = p6b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b
     &-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+p15b-
     &1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p15b-1).ne
     &.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_10_5_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h14b = h9b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p15b = p6b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b
     &-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p15b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+p15b-
     &1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p15b-1).ne
     &.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p15b - noab - 1 + nvab * (p6b - noab - 1
     & + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h14b - 1 + n
     &oab * (h9b - 1 + noab * (h8b - 1 + noab * (h7b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+h14b-1) * int_mb(k_range+h1b-1)
     & * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+
     &p15b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_11(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/12 * P( 2 ) * Sum ( h7 h8 h9 p5 p6 ) * t ( p3 p4 p5 p6 h1 h7 h8 h9 )_t * i1 ( h7 h8 h9 h2 p5 p6 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h2b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_11',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)
     &+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h7b-
     &1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),int_mb(k_sym+h9b-1)
     &))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p3b,p4b,p5b,p6b,h1b,h7b,h8b,h9b,p3b_1,p4b_1,
     &p5b_1,p6b_1,h1b_1,h7b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_6(h7b,h8b,h9b,h2b,p5b,p6b,h7b_2,h8b_2,h9b_2,h2
     &b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb
     &(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_11',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_11',2,MA_ERR)
      IF ((p6b .lt. p3b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h1b-1),8,4,3,7,6,5,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h9b-1),7,4,3,8,6,5,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h7b .lt. h1b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,4,3,8,7,5,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),5,4,3,8,7,6,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (p6b .lt. p4b) .and.
     & (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h1b-1),8,4,2,7,6,5,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (p6b .lt. p4b) .and.
     & (h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h9b-1),7,4,2,8,6,5,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (p6b .lt. p4b) .and.
     & (h7b .lt. h1b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,4,2,8,7,5,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (p6b .lt. p4b) .and.
     & (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),5,4,2,8,7,6,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p4b .le. p6b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h1b-1),8,3,2,7,6,5,4,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p4b .le. p6b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h9b-1),7,3,2,8,6,5,4,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p4b .le. p6b) .and. (h7b .lt. h1b) .and.
     & (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,3,2,8,7,5,4,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p4b .le. p6b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),5,3,2,8,7,6,4,1,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p6b .lt. p4b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h1b-1),8,4,1,7,6,5,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p6b .lt. p4b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h9b-1),7,4,1,8,6,5,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p6b .lt. p4b) .and. (h7b .lt. h1b) .and.
     & (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,4,1,8,7,5,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p6b .lt. p4b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),5,4,1,8,7,6,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (p4b .le. p6b) .and.
     & (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h1b-1),8,3,1,7,6,5,4,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (p4b .le. p6b) .and.
     & (h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h9b-1),7,3,1,8,6,5,4,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (p4b .le. p6b) .and.
     & (h7b .lt. h1b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,3,1,8,7,5,4,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b) .and. (p4b .le. p6b) .and.
     & (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),5,3,1,8,7,6,4,2,-1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h1b-1),8,2,1,7,6,5,4,3,-1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h9b-1),7,2,1,8,6,5,4,3,1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h7b .lt. h1b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,2,1,8,7,5,4,3,-1.0d0)
      END IF
      IF ((p4b .le. p5b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),5,2,1,8,7,6,4,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_11',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_11',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_11',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab 
     &* (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,2,1,6,5,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_11',
     &6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(n
     &subh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_
     &b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_11',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_11',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_11',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,-1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,1,2,1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_11',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_11',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_11_1(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 h8 h9 h1 p5 p6 )_yt + = 1 * Sum ( p10 ) * t ( p10 h1 )_t * y ( h7 h8 h9 p5 p6 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * int_m
     &b(k_range+p6b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_11_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p10b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p10b,h1b,p10b_1,h1b_1)
      CALL TCE_RESTRICTED_6(h7b,h8b,h9b,p5b,p6b,p10b,h7b_2,h8b_2,h9b_2,p
     &5b_2,p6b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_11_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_11_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p10b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_11_1
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_11_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_11_1',5,MA_ERR)
      IF ((p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),6,5,3,2,1,4,1.0d0)
      END IF
      IF ((p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p6b-1),6,4,3,2,1,5,-1.0d0)
      END IF
      IF ((p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p10b-1),5,4,3,2,1,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_11_1
     &',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_11_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_11_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_11_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p6b -
     & noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h9b
     & - 1 + noab * (h8b - 1 + noab * (h7b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_11_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_11_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_11_1(l_a_offset,k_a_offset,s
     &ize)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 h8 h9 h1 p5 p6 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      length = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_11_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p6b - noab - 1 + nvab * (p5b - noab - 1 
     &+ nvab * (h1b - 1 + noab * (h9b - 1 + noab * (h8b - 1 + noab * (h7
     &b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) 
     &* int_mb(k_range+p6b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_11_2(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 h8 h9 h1 p5 p6 )_yt + = 1/2 * Sum ( h12 p10 p11 ) * t ( p10 p11 h1 h12 )_t * y ( h7 h8 h9 h12 p5 p6 p10 p11 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p11b
      INTEGER h12b
      INTEGER p10b_1
      INTEGER p11b_1
      INTEGER h1b_1
      INTEGER h12b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h12b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p10b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * int_m
     &b(k_range+p6b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_11_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO p11b = p10b,noab+nvab
      DO h12b = 1,noab
      IF (int_mb(k_spin+p10b-1)+int_mb(k_spin+p11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p10b-1),ieor(int_mb(k_sym+p11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h12b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p10b,p11b,h1b,h12b,p10b_1,p11b_1,h1b_1,h12b_
     &1)
      CALL TCE_RESTRICTED_8(h7b,h8b,h9b,h12b,p5b,p6b,p10b,p11b,h7b_2,h8b
     &_2,h9b_2,h12b_2,p5b_2,p6b_2,p10b_2,p11b_2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+p11b-1) * int
     &_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_11_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_11_2',2,MA_ERR)
      IF ((h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (p11b_1 - noab - 1 + nvab * (p1
     &0b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h1b
     &-1),4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p11b_1 - noab - 1 + nvab * (p1
     &0b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+h1b-1),int_mb(k_range+h12b
     &-1),3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_11_2
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_11_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_11_2',5,MA_ERR)
      IF ((h12b .lt. h7b) .and. (p11b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,4,3,2,1,6,5,-1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p10b .lt. p5b) .and. (p5b .le. p11b) .a
     &nd. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p6b-1),8,6,4,3,2,1,7,5,1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p10b .lt. p5b) .and. (p6b .le. p11b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p11b-1),7,6,4,3,2,1,8,5,-1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p5b .le. p10b) .and. (p11b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p6b-1),8,5,4,3,2,1,7,6,-1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b) .a
     &nd. (p6b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p11b-1),7,5,4,3,2,1,8,6,1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h12b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p11b-1),6,5,4,3,2,1,8,7,-1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p11b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h12b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,4,3,1,2,6,5,1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p10b .lt. p5b) .a
     &nd. (p5b .le. p11b) .and. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h12b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p6b-1),8,6,4,3,1,2,7,5,-1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p10b .lt. p5b) .a
     &nd. (p6b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h12b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p11b-1),7,6,4,3,1,2,8,5,1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p5b .le. p10b) .a
     &nd. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h12b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p6b-1),8,5,4,3,1,2,7,6,1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b) .and. (p6b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h12b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p11b-1),7,5,4,3,1,2,8,6,-1.0d0)
      END IF
      IF ((h7b .le. h12b) .and. (h12b .lt. h8b) .and. (p6b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h12b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p11b-1),6,5,4,3,1,2,8,7,1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (h12b .lt. h9b) .and. (p11b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,4,2,1,3,6,5,-1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (h12b .lt. h9b) .and. (p10b .lt. p5b) .a
     &nd. (p5b .le. p11b) .and. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p6b-1),8,6,4,2,1,3,7,5,1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (h12b .lt. h9b) .and. (p10b .lt. p5b) .a
     &nd. (p6b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p11b-1),7,6,4,2,1,3,8,5,-1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (h12b .lt. h9b) .and. (p5b .le. p10b) .a
     &nd. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p6b-1),8,5,4,2,1,3,7,6,-1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (h12b .lt. h9b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b) .and. (p6b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p11b-1),7,5,4,2,1,3,8,6,1.0d0)
      END IF
      IF ((h8b .le. h12b) .and. (h12b .lt. h9b) .and. (p6b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p11b-1),6,5,4,2,1,3,8,7,-1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (p11b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p11b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,3,2,1,4,6,5,1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (p10b .lt. p5b) .and. (p5b .le. p11b) .a
     &nd. (p11b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p6b-1),8,6,3,2,1,4,7,5,-1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (p10b .lt. p5b) .and. (p6b .le. p11b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p11b-1),7,6,3,2,1,4,8,5,1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (p5b .le. p10b) .and. (p11b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p11b
     &-1),int_mb(k_range+p6b-1),8,5,3,2,1,4,7,6,1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b) .a
     &nd. (p6b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p11b-1),7,5,3,2,1,4,8,6,-1.0d0)
      END IF
      IF ((h9b .le. h12b) .and. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p11b-1),6,5,3,2,1,4,8,7,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_11_2
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p10b .eq. p11b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_11_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_11_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_11_2',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h9b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,1.0d0/2.0
     &d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p6b -
     & noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h9b
     & - 1 + noab * (h8b - 1 + noab * (h7b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_11_2
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_11_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_12(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/4 * P( 2 ) * Sum ( h7 p5 p6 ) * t ( p3 p5 p6 h1 h2 h7 )_t * i1 ( h7 p4 p5 p6 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h7b_1
      INTEGER p4b_2
      INTEGER h7b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_12',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h7b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h7b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p5b,p6b,h1b,h2b,h7b,p3b_1,p5b_1,p6b_1,h1
     &b_1,h2b_1,h7b_1)
      CALL TCE_RESTRICTED_4(p4b,h7b,p5b,p6b,p4b_2,h7b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_12',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_12',2,MA_ERR)
      IF ((p6b .lt. p3b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,3,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h1b .le. h7b) .and. (h7b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),6,4,3,5,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),5,4,3,6,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,2,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h7b) .and.
     & (h7b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),6,4,2,5,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),5,4,2,6,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,1,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h7b) .and. (h7b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),6,4,1,5,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),5,4,1,6,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_12',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_12',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_12',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab 
     &* (p4b_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,1,2,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_12',
     &6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_12',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_12',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_12',9,MA_ERR)
      IF ((p3b .le. p4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,4,1,3,2,-1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p3b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,1,4,3,2,1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p3b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_12',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_12',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_12_1(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 p3 p5 p6 )_yt + = -1 * Sum ( h9 h10 p8 ) * t ( p3 p8 h9 h10 )_t * y ( h7 h9 h10 p5 p6 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h7b
      INTEGER p5b
      INTEGER p6b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER h9b
      INTEGER h10b
      INTEGER p3b_1
      INTEGER p8b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h7b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h7b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h7b-1) .eq. int_mb(k_spin+p
     &5b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+p5b-1),int_mb(k_sym+p6b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+p5b-1) * int_mb(k_range+p6b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_12_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p8b,h9b,h10b,p3b_1,p8b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_6(h7b,h9b,h10b,p5b,p6b,p8b,h7b_2,h9b_2,h10b_2,
     &p5b_2,p6b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1) * int_m
     &b(k_range+h10b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_12_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_12_1',2,MA_ERR)
      IF ((p8b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_12_1
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_12_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_12_1',5,MA_ERR)
      IF ((h10b .lt. h7b) .and. (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),6,5,3,2,1,4,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (p5b .le. p8b) .and. (p8b .lt. p6b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1),6,4,3,2,1,5,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1),5,4,3,2,1,6,1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .le. h10b) .and. (p8b .lt. p5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),6,5,2,3,1,4,-1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .le. h10b) .and. (p5b .le. p8b) .and
     &. (p8b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1),6,4,2,3,1,5,1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .le. h10b) .and. (p6b .le. p8b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h10b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1),5,4,2,3,1,6,-1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),6,5,1,3,2,4,1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p5b .le. p8b) .and. (p8b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p6b-1),6,4,1,3,2,5,-1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h10b_2 - 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p8b-1),5,4,1,3,2,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_12_1
     &',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_12_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_12_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_12_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h7b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p6b -
     & noab - 1 + nvab * (p5b - noab - 1 + nvab * (h7b - 1 + noab * (p3b
     & - noab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_12_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_12_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_12_1(l_a_offset,k_a_offset,s
     &ize)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 p3 p5 p6 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h7b
      INTEGER p5b
      INTEGER p6b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h7b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+p
     &5b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb(
     &k_sym+p5b-1),int_mb(k_sym+p6b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+p3b-1
     &)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_12_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h7b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+p3b-1) .eq. int_mb(k_spin+p
     &5b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb(
     &k_sym+p5b-1),int_mb(k_sym+p6b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+p3b-1
     &)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p6b - noab - 1 + nvab * (p5b - noab - 1 
     &+ nvab * (h7b - 1 + noab * (p3b - noab - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h7b-1) * int_
     &mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_12_2(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 p3 p5 p6 )_yt + = -1/6 * Sum ( h10 h11 h12 p8 p9 ) * t ( p3 p8 p9 h10 h11 h12 )_t * y ( h7 h10 h11 h12 p5 p6 p8 p9 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h7b
      INTEGER p5b
      INTEGER p6b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER h10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p3b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h7b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h7b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h7b-1) .eq. int_mb(k_spin+p
     &5b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+p5b-1),int_mb(k_sym+p6b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+p5b-1) * int_mb(k_range+p6b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_12_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1)
     & .eq. int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1
     &2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+p9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),i
     &nt_mb(k_sym+h12b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p8b,p9b,h10b,h11b,h12b,p3b_1,p8b_1,p9b_1
     &,h10b_1,h11b_1,h12b_1)
      CALL TCE_RESTRICTED_8(h7b,h10b,h11b,h12b,p5b,p6b,p8b,p9b,h7b_2,h10
     &b_2,h11b_2,h12b_2,p5b_2,p6b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_m
     &b(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1
     &)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_12_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_12_2',2,MA_ERR)
      IF ((p9b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (p3b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p3b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),3,6,5,4,2,1,1.0d0)
      END IF
      IF ((p8b .lt. p3b) .and. (p3b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - 
     &noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p8b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),2,6,5,4,3,1,-1.0d0
     &)
      END IF
      IF ((p3b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - 
     &noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),1,6,5,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_12_2
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_12_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_12_2',5,MA_ERR)
      IF ((h12b .lt. h7b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,4,3,2,1,6,5,-1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b) .and
     &. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,6,4,3,2,1,7,5,1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p8b .lt. p5b) .and. (p6b .le. p9b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,6,4,3,2,1,8,5,-1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p5b .le. p8b) .and. (p9b .lt. p6b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,5,4,3,2,1,7,6,-1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p5b .le. p8b) .and. (p8b .lt. p6b) .and
     &. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,5,4,3,2,1,8,6,1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h7b_2 - 1 + noab * (h12b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),6,5,4,3,2,1,8,7,-1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (p9b .lt. p5b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,3,4,2,1,6,5,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (p8b .lt. p5b) .an
     &d. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,6,3,4,2,1,7,5,-1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (p8b .lt. p5b) .an
     &d. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,6,3,4,2,1,8,5,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (p5b .le. p8b) .an
     &d. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,5,3,4,2,1,7,6,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (p5b .le. p8b) .an
     &d. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,5,3,4,2,1,8,6,-1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (p6b .le. p8b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),6,5,3,4,2,1,8,7,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (p9b .lt. p5b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,2,4,3,1,6,5,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (p8b .lt. p5b) .an
     &d. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,6,2,4,3,1,7,5,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (p8b .lt. p5b) .an
     &d. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,6,2,4,3,1,8,5,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (p5b .le. p8b) .an
     &d. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,5,2,4,3,1,7,6,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (p5b .le. p8b) .an
     &d. (p8b .lt. p6b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,5,2,4,3,1,8,6,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (p6b .le. p8b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),6,5,2,4,3,1,8,7,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,1,4,3,2,6,5,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (p8b .lt. p5b) .and. (p5b .le. p9b) .and
     &. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,6,1,4,3,2,7,5,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (p8b .lt. p5b) .and. (p6b .le. p9b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p8b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,6,1,4,3,2,8,5,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (p5b .le. p8b) .and. (p9b .lt. p6b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p6b-1),8,5,1,4,3,2,7,6,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (p5b .le. p8b) .and. (p8b .lt. p6b) .and
     &. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),7,5,1,4,3,2,8,6,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (p6b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p6b_2 - noab - 1 
     &+ nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 -
     & 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p8b
     &-1),int_mb(k_range+p9b-1),6,5,1,4,3,2,8,7,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_12_2
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(n
     &subh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_
     &b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_12_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_12_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_12_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h7b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,-1.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p6b -
     & noab - 1 + nvab * (p5b - noab - 1 + nvab * (h7b - 1 + noab * (p3b
     & - noab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_12_2
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_12_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_13(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = 1/12 * Sum ( h13 h14 h15 p12 ) * t ( p3 p4 p12 h13 h14 h15 )_t * i1 ( h13 h14 h15 h1 h2 p12 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p12b
      INTEGER h13b
      INTEGER h14b
      INTEGER h15b
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER p12b_1
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER h15b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p12b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h15b = h14b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+p12b-1
     &) .eq. int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h
     &15b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+p12b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),
     &int_mb(k_sym+h15b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p4b,p12b,h13b,h14b,h15b,p3b_1,p4b_1,p12b
     &_1,h13b_1,h14b_1,h15b_1)
      CALL TCE_RESTRICTED_6(h13b,h14b,h15b,h1b,h2b,p12b,h13b_2,h14b_2,h1
     &5b_2,h1b_2,h2b_2,p12b_2)
      dim_common = int_mb(k_range+p12b-1) * int_mb(k_range+h13b-1) * int
     &_mb(k_range+h14b-1) * int_mb(k_range+h15b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13',2,MA_ERR)
      IF ((p12b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (p4b_1 - 
     &noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p12b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),3,2,6,5,4,1,1.0d0
     &)
      END IF
      IF ((p3b .le. p12b) .and. (p12b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (p4b_1 - 
     &noab - 1 + nvab * (p12b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p4b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),3,1,6,5,4,2,-1.0d
     &0)
      END IF
      IF ((p4b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1 + noab * (p12b_1 -
     & noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p12b-1),int_mb(k_range+h13b-
     &1),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),2,1,6,5,4,3,1.0d0
     &)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h1b_2 - 1 + noab * (h15
     &b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h1b
     &-1),int_mb(k_range+h2b-1),int_mb(k_range+p12b-1),5,4,3,2,1,6,1.0d0
     &)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13',
     &6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h13b .eq. h14b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h14b .eq. h15b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,6.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort)
     &,dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dim
     &a_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_13_1(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 h14 h15 h1 h2 p12 )_yt + = 1 * Sum ( p9 p10 ) * t ( p9 p10 h1 h2 )_t * y ( h13 h14 h15 p9 p10 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p10b
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER p12b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p12b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1
     &)+int_mb(k_spin+p12b-1).ne.12)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p
     &12b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),
     &int_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h15b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * in
     &t_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO p10b = p9b,noab+nvab
      IF (int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p9b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p9b,p10b,h1b,h2b,p9b_1,p10b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_6(h13b,h14b,h15b,p12b,p9b,p10b,h13b_2,h14b_2,h
     &15b_2,p12b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+h15b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p9b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_1
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_1',5,MA_ERR)
      IF ((p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1))
     &)))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b-1),6,3,2,1,5,4,1.0d
     &0)
      END IF
      IF ((p9b .le. p12b) .and. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1))
     &)))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+p9b
     &-1),int_mb(k_range+p12b-1),int_mb(k_range+p10b-1),5,3,2,1,6,4,-1.0
     &d0)
      END IF
      IF ((p12b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p12b_2 - noab - 
     &1 + nvab * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1))
     &)))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),4,3,2,1,6,5,1.0d
     &0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_1
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h14b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),4,3,2,6,5,1,1.0d0
     &)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h2b - 1 + noab * (h1b - 1 + noab * (h15b - 1 
     &+ noab * (h14b - 1 + noab * (h13b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_13_1(l_a_offset,k_a_offset,s
     &ize)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 h14 h15 h1 h2 p12 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h13b
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER p12b
      length = 0
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p
     &12b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),
     &int_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1
     &)+int_mb(k_spin+p12b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p
     &12b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),
     &int_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1
     &)+int_mb(k_spin+p12b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p12b - noab - 1 + nvab * (h2b - 1 + noab
     & * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1 + noab * (h13b -
     & 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * in
     &t_mb(k_range+h15b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-
     &1) * int_mb(k_range+p12b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_13_2(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 h14 h15 h1 h2 p12 )_yt + = 1/3 * Sum ( h8 p5 p6 p7 ) * t ( p5 p6 p7 h1 h2 h8 )_t * y ( h8 h13 h14 h15 p5 p6 p7 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h8b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h8b_2
      INTEGER p12b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p12b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1
     &)+int_mb(k_spin+p12b-1).ne.12)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p
     &12b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),
     &int_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h15b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * in
     &t_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p5b,p6b,p7b,h1b,h2b,h8b,p5b_1,p6b_1,p7b_1,h1
     &b_1,h2b_1,h8b_1)
      CALL TCE_RESTRICTED_8(h13b,h14b,h15b,h8b,p12b,p5b,p6b,p7b,h13b_2,h
     &14b_2,h15b_2,h8b_2,p12b_2,p5b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+h15b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_2',2,MA_ERR)
      IF ((h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,4,3,2,1,1.0d0)
      END IF
      IF ((h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),6,4,5,3,2,1,-1.0d0)
      END IF
      IF ((h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),5,4,6,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_2
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_2',5,MA_ERR)
      IF ((h8b .le. h13b) .and. (p7b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p12b-1),8,4,3,2,1,7,6,5,1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (p6b .le. p12b) .and. (p12b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p7b-1),7,4,3,2,1,8,6,5,-1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (p5b .le. p12b) .and. (p12b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p12b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p6
     &b-1),int_mb(k_range+p7b-1),6,4,3,2,1,8,7,5,1.0d0)
      END IF
      IF ((h8b .le. h13b) .and. (p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p12b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h13b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6
     &b-1),int_mb(k_range+p7b-1),5,4,3,2,1,8,7,6,-1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (h8b .le. h14b) .and. (p7b .le. p12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p12b-1),8,4,3,1,2,7,6,5,-1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (h8b .le. h14b) .and. (p6b .le. p12b) .a
     &nd. (p12b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p7b-1),7,4,3,1,2,8,6,5,1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (h8b .le. h14b) .and. (p5b .le. p12b) .a
     &nd. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p12b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p6
     &b-1),int_mb(k_range+p7b-1),6,4,3,1,2,8,7,5,-1.0d0)
      END IF
      IF ((h13b .lt. h8b) .and. (h8b .le. h14b) .and. (p12b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p12b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h14b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h14b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6
     &b-1),int_mb(k_range+p7b-1),5,4,3,1,2,8,7,6,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h8b .le. h15b) .and. (p7b .le. p12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p12b-1),8,4,2,1,3,7,6,5,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h8b .le. h15b) .and. (p6b .le. p12b) .a
     &nd. (p12b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p7b-1),7,4,2,1,3,8,6,5,-1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h8b .le. h15b) .and. (p5b .le. p12b) .a
     &nd. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p12b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p6
     &b-1),int_mb(k_range+p7b-1),6,4,2,1,3,8,7,5,1.0d0)
      END IF
      IF ((h14b .lt. h8b) .and. (h8b .le. h15b) .and. (p12b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p12b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h8b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6
     &b-1),int_mb(k_range+p7b-1),5,4,2,1,3,8,7,6,-1.0d0)
      END IF
      IF ((h15b .lt. h8b) .and. (p7b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h8b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b
     &-1),int_mb(k_range+p12b-1),8,3,2,1,4,7,6,5,-1.0d0)
      END IF
      IF ((h15b .lt. h8b) .and. (p6b .le. p12b) .and. (p12b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h8b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p7b-1),7,3,2,1,4,8,6,5,1.0d0)
      END IF
      IF ((h15b .lt. h8b) .and. (p5b .le. p12b) .and. (p12b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p12b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h8b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p6
     &b-1),int_mb(k_range+p7b-1),6,3,2,1,4,8,7,5,-1.0d0)
      END IF
      IF ((h15b .lt. h8b) .and. (p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p12b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h15b_2 -
     & 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h8b
     &-1),int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6
     &b-1),int_mb(k_range+p7b-1),5,3,2,1,4,8,7,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_2
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,6.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3)),dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_2',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h15b-1),int_mb(k_range+h14b-1),int_mb(k_range+h13
     &b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),4,3,2,6,5,1,1.0d0
     &/3.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h2b - 1 + noab * (h1b - 1 + noab * (h15b - 1 
     &+ noab * (h14b - 1 + noab * (h13b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_2
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_13_3(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h13 h14 h15 h1 h2 p12 )_ytt + = -1 * P( 2 ) * Sum ( p5 ) * t ( p5 h1 )_t * i2 ( h13 h14 h15 h2 p5 p12 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER h2b_2
      INTEGER p12b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1
     &)+int_mb(k_spin+p12b-1).ne.12)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p
     &12b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),
     &int_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,ieor(irrep_t,irrep_t))
     &) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h15b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * in
     &t_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p5b,h1b,p5b_1,h1b_1)
      CALL TCE_RESTRICTED_6(h13b,h14b,h15b,h2b,p12b,p5b,h13b_2,h14b_2,h1
     &5b_2,h2b_2,p12b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+h15b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+p12b-1
     &)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p5b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_3',5,MA_ERR)
      IF ((p5b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab
     & * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h2b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),6,4,3,2,1,5,1.0d0
     &)
      END IF
      IF ((p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab
     & * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+h2b
     &-1),int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),5,4,3,2,1,6,-1.0d
     &0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3
     &',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_3',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h15b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,-1.0d
     &0/1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h2b - 1 + noab * (h1b - 1 + noab * (h15b - 1 
     &+ noab * (h14b - 1 + noab * (h13b - 1)))))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h15b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),5,4,3,2,6,1,1.0d0
     &/1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h2b - 1 + noab * (h15b - 1 
     &+ noab * (h14b - 1 + noab * (h13b - 1)))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_13_3_1(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h14 h15 h1 p5 p12 )_yt + = -1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h13 h14 h15 p5 p6 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h13b
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER p5b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h15b_2
      INTEGER p5b_2
      INTEGER p12b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p12b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p12b-1).ne.12)) THEN
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p
     &12b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),
     &int_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h15b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * in
     &t_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      IF (int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p6b,h1b,p6b_1,h1b_1)
      CALL TCE_RESTRICTED_6(h13b,h14b,h15b,p5b,p12b,p6b,h13b_2,h14b_2,h1
     &5b_2,p5b_2,p12b_2,p6b_2)
      dim_common = int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+h15b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p12b-1
     &)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_3_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p6b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3
     &_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_3_1',5,MA_ERR)
      IF ((p6b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),6,5,3,2,1,4,-1.0d
     &0)
      END IF
      IF ((p5b .le. p6b) .and. (p6b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),int_mb(k_range+p12b-1),6,4,3,2,1,5,1.0d0
     &)
      END IF
      IF ((p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h15b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h15b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p12b-1),int_mb(k_range+p6b-1),5,4,3,2,1,6,-1.0d
     &0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3
     &_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_3_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_3_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_13_3_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+h15b-1),int_mb(k_range+h14b
     &-1),int_mb(k_range+h13b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,-1.0d
     &0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h1
     &5b - 1 + noab * (h14b - 1 + noab * (h13b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3
     &_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_13_3_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_13_3_1(l_a_offset,k_a_offset
     &,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h13 h14 h15 h1 p5 p12 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h13b
      INTEGER h14b
      INTEGER h15b
      INTEGER h1b
      INTEGER p5b
      INTEGER p12b
      length = 0
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p12b = p5b,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p
     &12b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),
     &int_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p12b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_13_3_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h15b = h14b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p12b = p5b,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h15b
     &-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p
     &12b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),
     &int_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p12b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p12b - noab - 1 + nvab * (p5b - noab - 1
     & + nvab * (h1b - 1 + noab * (h15b - 1 + noab * (h14b - 1 + noab * 
     &(h13b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * in
     &t_mb(k_range+h15b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-
     &1) * int_mb(k_range+p12b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_14(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/24 * P( 2 ) * Sum ( h8 h9 p5 p6 p7 ) * t ( p3 p5 p6 p7 h1 h2 h8 h9 )_t * i1 ( h8 h9 p4 p5 p6 p7 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER p4b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_14',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     &+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-
     &1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h8b-1),int_mb(k_sym+h9b-1)
     &))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p3b,p5b,p6b,p7b,h1b,h2b,h8b,h9b,p3b_1,p5b_1,
     &p6b_1,p7b_1,h1b_1,h2b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_6(p4b,h8b,h9b,p5b,p6b,p7b,p4b_2,h8b_2,h9b_2,p5
     &b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_14',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_14',2,MA_ERR)
      IF ((p7b .lt. p3b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,4,6,5,3,2,1,-1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,6,4,7,5,3,2,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h8b .lt. h1b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,6,4,8,5,3,2,1,-1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h1b .le. h8b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,5,4,7,6,3,2,1,-1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h1b .le. h8b) .and. (h8b .lt. h2b) .and.
     & (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,5,4,8,6,3,2,1,1.0d0)
      END IF
      IF ((p7b .lt. p3b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p3b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,5,4,8,7,3,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,3,6,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,6,3,7,5,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h8b .lt. h1b) .and.
     & (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,6,3,8,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h1b .le. h8b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,5,3,7,6,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h1b .le. h8b) .and.
     & (h8b .lt. h2b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,5,3,8,6,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (p3b .le. p7b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p6b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,5,3,8,7,4,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,2,6,5,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,6,2,7,5,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h8b .lt. h1b) .and.
     & (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,6,2,8,5,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h8b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,5,2,7,6,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h8b) .and.
     & (h8b .lt. h2b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,5,2,8,6,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,5,2,8,7,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),8,7,1,6,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,6,1,7,5,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h8b .lt. h1b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,6,1,8,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h8b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h2b-1),8,5,1,7,6,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h8b) .and. (h8b .lt. h2b) .and.
     & (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),7,5,1,8,6,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),6,5,1,8,7,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_14',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_14',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_14',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (p4b_2 - noab - 1
     &)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),1,3,2,6,5,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_14',
     &6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,12.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIAL
     &(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(
     &k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_14',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_14',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_14',9,MA_ERR)
      IF ((p3b .le. p4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,4,1,3,2,-1.0d0/24.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p3b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,1,4,3,2,1.0d0/24.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p3b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_14',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_14',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_14_1(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h8 h9 p3 p5 p6 p7 )_yt + = 1 * Sum ( h11 h12 p10 ) * t ( p3 p10 h11 h12 )_t * y ( h8 h9 h11 h12 p5 p6 p7 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h8b
      INTEGER h9b
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p3b_1
      INTEGER p10b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+i
     &nt_mb(k_spin+p7b-1).ne.12)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     & .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int
     &_mb(k_sym+p7b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_14_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+
     &h11b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb
     &(k_sym+h11b-1),int_mb(k_sym+h12b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p10b,h11b,h12b,p3b_1,p10b_1,h11b_1,h12b_
     &1)
      CALL TCE_RESTRICTED_8(h8b,h9b,h11b,h12b,p5b,p6b,p7b,p10b,h8b_2,h9b
     &_2,h11b_2,h12b_2,p5b_2,p6b_2,p7b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h11b-1) * int
     &_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_14_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_14_1',2,MA_ERR)
      IF ((p10b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p1
     &0b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p
     &3b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_14_1
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_14_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_14_1',5,MA_ERR)
      IF ((h12b .lt. h8b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,4,3,2,1,5,-1.0d0)
      END IF
      IF ((h12b .lt. h8b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,4,3,2,1,6,1.0d0)
      END IF
      IF ((h12b .lt. h8b) .and. (p6b .le. p10b) .and. (p10b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,4,3,2,1,7,-1.0d0)
      END IF
      IF ((h12b .lt. h8b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,4,3,2,1,8,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h12b) .and. (h12b .lt. h9b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,4,2,3,1,5,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h12b) .and. (h12b .lt. h9b) .a
     &nd. (p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,4,2,3,1,6,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h12b) .and. (h12b .lt. h9b) .a
     &nd. (p6b .le. p10b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,4,2,3,1,7,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h12b) .and. (h12b .lt. h9b) .a
     &nd. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,4,2,3,1,8,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h12b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,3,2,4,1,5,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h12b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,3,2,4,1,6,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h12b) .and. (p6b .le. p10b) .a
     &nd. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,3,2,4,1,7,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h12b) .and. (p7b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,3,2,4,1,8,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h12b .lt. h9b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,4,1,3,2,5,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h12b .lt. h9b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,4,1,3,2,6,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h12b .lt. h9b) .and. (p6b .le. p10b) .a
     &nd. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,4,1,3,2,7,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h12b .lt. h9b) .and. (p7b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,4,1,3,2,8,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h12b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,3,1,4,2,5,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h12b) .a
     &nd. (p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,3,1,4,2,6,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h12b) .a
     &nd. (p6b .le. p10b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,3,1,4,2,7,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h12b) .a
     &nd. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,3,1,4,2,8,-1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,2,1,4,3,5,-1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,2,1,4,3,6,1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p6b .le. p10b) .and. (p10b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,2,1,4,3,7,-1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,2,1,4,3,8,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_14_1
     &',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_14_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_14_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_14_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p3b-1),6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (p6b - noab - 1 + nvab * (p5b - noab - 1 + nvab
     & * (h9b - 1 + noab * (h8b - 1 + noab * (p3b - noab - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_14_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_14_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_14_1(l_a_offset,k_a_offset,s
     &ize)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h8 h9 p3 p5 p6 p7 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h8b
      INTEGER h9b
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+p3b-1)
     & .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int
     &_mb(k_sym+p7b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+i
     &nt_mb(k_spin+p7b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_14_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+p3b-1)
     & .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int
     &_mb(k_sym+p7b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+i
     &nt_mb(k_spin+p7b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p7b - noab - 1 + nvab * (p6b - noab - 1 
     &+ nvab * (p5b - noab - 1 + nvab * (h9b - 1 + noab * (h8b - 1 + noa
     &b * (p3b - noab - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) 
     &* int_mb(k_range+p7b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_15(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = -1/96 * Sum ( h15 h7 h8 h9 p13 p14 ) * t ( p3 p4 p13 p14 h7 h8 h9 h15 )_t * i1 ( h7 h8 h9 h15 h1 h2 p13 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p13b
      INTEGER p14b
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h15b
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER p13b_1
      INTEGER p14b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h15b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h15b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER p13b_2
      INTEGER p14b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(4)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h15b = h9b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+p13b-1
     &)+int_mb(k_spin+p14b-1) .eq. int_mb(k_spin+h7b-1)+int_mb(k_spin+h8
     &b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h15b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+p13b-1),ieor(int_mb(k_sym+p14b-1),ieor(int_mb(k_sym+h7b-1),i
     &eor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h9b-1),int_mb(k_sym+h15b
     &-1)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p3b,p4b,p13b,p14b,h7b,h8b,h9b,h15b,p3b_1,p4b
     &_1,p13b_1,p14b_1,h7b_1,h8b_1,h9b_1,h15b_1)
      CALL TCE_RESTRICTED_8(h7b,h8b,h9b,h15b,h1b,h2b,p13b,p14b,h7b_2,h8b
     &_2,h9b_2,h15b_2,h1b_2,h2b_2,p13b_2,p14b_2)
      dim_common = int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1) * int
     &_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
     & * int_mb(k_range+h15b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15',2,MA_ERR)
      IF ((p14b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p1
     &4b_1 - noab - 1 + nvab * (p13b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p14b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h15b-1),4,3,8,7,6,5,2,1,1.0d0)
      END IF
      IF ((p13b .lt. p3b) .and. (p3b .le. p14b) .and. (p14b .lt. p4b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p
     &3b_1 - noab - 1 + nvab * (p13b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p14b-1),int_mb(k_range+p4b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h15b-1),4,2,8,7,6,5,3,1,-1.0d0)
      END IF
      IF ((p13b .lt. p3b) .and. (p4b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 
     &+ noab * (p14b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p
     &3b_1 - noab - 1 + nvab * (p13b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p14b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h15b-1),3,2,8,7,6,5,4,1,1.0d0)
      END IF
      IF ((p3b .le. p13b) .and. (p14b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 
     &+ noab * (p4b_1 - noab - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p
     &13b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+p14b-1),int_mb(k_range+p4b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h15b-1),4,1,8,7,6,5,3,2,1.0d0)
      END IF
      IF ((p3b .le. p13b) .and. (p13b .lt. p4b) .and. (p4b .le. p14b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 
     &+ noab * (p14b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p
     &13b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+p4b-1),int_mb(k_range+p14b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h15b-1),3,1,8,7,6,5,4,2,-1.0d0)
      END IF
      IF ((p4b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h15b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 
     &+ noab * (p14b_1 - noab - 1 + nvab * (p13b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p13b-1),int_mb(k_range+p14b-
     &1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+h15b-1),2,1,8,7,6,5,4,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (h2b_2 - 1 + noa
     &b * (h1b_2 - 1 + noab * (h15b_2 - 1 + noab * (h9b_2 - 1 + noab * (
     &h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+p13b-
     &1),int_mb(k_range+p14b-1),6,5,4,3,2,1,8,7,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15',
     &6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p13b .eq. p14b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      nsubh(4) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h9b .eq. h15b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,48.0d0/FACTORIAL
     &(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(n
     &subh(2))/FACTORIAL(nsubh(3))/FACTORIAL(nsubh(4)),dbl_mb(k_a_sort),
     &dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima
     &_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,-1.0d0/96.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_15_1(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 h8 h9 h15 h1 h2 p13 p14 )_yt + = -1 * Sum ( p11 p12 ) * t ( p11 p12 h1 h2 )_t * y ( h7 h8 h9 h15 p11 p12 p13 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER p13b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p11b
      INTEGER p12b
      INTEGER p11b_1
      INTEGER p12b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h15b_2
      INTEGER p13b_2
      INTEGER p14b_2
      INTEGER p11b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h15b = h9b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+h2b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b
     &-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p13b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h15b-1) * int_mb(k_range+h1b-1) * int_
     &mb(k_range+h2b-1) * int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1
     &)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p11b = noab+1,noab+nvab
      DO p12b = p11b,noab+nvab
      IF (int_mb(k_spin+p11b-1)+int_mb(k_spin+p12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p11b-1),ieor(int_mb(k_sym+p12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p11b,p12b,h1b,h2b,p11b_1,p12b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_8(h7b,h8b,h9b,h15b,p13b,p14b,p11b,p12b,h7b_2,h
     &8b_2,h9b_2,h15b_2,p13b_2,p14b_2,p11b_2,p12b_2)
      dim_common = int_mb(k_range+p11b-1) * int_mb(k_range+p12b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+h15b-1) * int_mb(k_range+p13b-1) 
     &* int_mb(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p12b_1 - noab - 1 + nvab * (p11
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-
     &1),4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_1
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15_1',5,MA_ERR)
      IF ((p12b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p12b_2 - noab -
     & 1 + nvab * (p11b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_
     &2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+p12b-1),int_mb(k_range+p13
     &b-1),int_mb(k_range+p14b-1),8,7,4,3,2,1,6,5,1.0d0)
      END IF
      IF ((p11b .le. p13b) .and. (p13b .lt. p12b) .and. (p12b .le. p14b)
     &) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p13b_2 - noab -
     & 1 + nvab * (p11b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_
     &2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+p13b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p14b-1),8,6,4,3,2,1,7,5,-1.0d0)
      END IF
      IF ((p11b .le. p13b) .and. (p14b .lt. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p13b_2 - noab -
     & 1 + nvab * (p11b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_
     &2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+p13b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p12b-1),7,6,4,3,2,1,8,5,1.0d0)
      END IF
      IF ((p13b .lt. p11b) .and. (p12b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p11b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_
     &2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p11b-1),int_mb(k_range+p12
     &b-1),int_mb(k_range+p14b-1),8,5,4,3,2,1,7,6,1.0d0)
      END IF
      IF ((p13b .lt. p11b) .and. (p11b .le. p14b) .and. (p14b .lt. p12b)
     &) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p11b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_
     &2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p11b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+p12b-1),7,5,4,3,2,1,8,6,-1.0d0)
      END IF
      IF ((p14b .lt. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p14b_2 - noab -
     & 1 + nvab * (p13b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_
     &2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p14b-1),int_mb(k_range+p11
     &b-1),int_mb(k_range+p12b-1),6,5,4,3,2,1,8,7,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_1
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p11b .eq. p12b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15_1',9,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+h15b-1),int_mb(k_range+h9b
     &-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b
     &-1),int_mb(k_range+h1b-1),6,5,4,3,8,7,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p13b - noab - 1 + nvab * (h2b - 1 + noab * (h
     &1b - 1 + noab * (h15b - 1 + noab * (h9b - 1 + noab * (h8b - 1 + no
     &ab * (h7b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_15_1(l_a_offset,k_a_offset,s
     &ize)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 h8 h9 h15 h1 h2 p13 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER p13b
      INTEGER p14b
      length = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h15b = h9b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b
     &-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p13b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+h2b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h15b = h9b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b
     &-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p13b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+h2b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p14b - noab - 1 + nvab * (p13b - noab - 
     &1 + nvab * (h2b - 1 + noab * (h1b - 1 + noab * (h15b - 1 + noab * 
     &(h9b - 1 + noab * (h8b - 1 + noab * (h7b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+h15b-1) * int_mb(k_range+h1b-1)
     & * int_mb(k_range+h2b-1) * int_mb(k_range+p13b-1) * int_mb(k_range
     &+p14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_15_2(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 h8 h9 h15 h1 h2 p13 p14 )_ytt + = -1 * P( 2 ) * Sum ( p5 ) * t ( p5 h1 )_t * i2 ( h7 h8 h9 h15 h2 p5 p13 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h15b
      INTEGER h1b
      INTEGER h2b
      INTEGER p13b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h15b_2
      INTEGER h2b_2
      INTEGER p13b_2
      INTEGER p14b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h15b = h9b,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+h2b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b
     &-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p13b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. ieor(irrep_y,ieor(irrep_t,irrep_t))) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h15b-1) * int_mb(k_range+h1b-1) * int_
     &mb(k_range+h2b-1) * int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1
     &)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p5b,h1b,p5b_1,h1b_1)
      CALL TCE_RESTRICTED_8(h7b,h8b,h9b,h15b,h2b,p13b,p14b,p5b,h7b_2,h8b
     &_2,h9b_2,h15b_2,h2b_2,p13b_2,p14b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+h15b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p5b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15_2',5,MA_ERR)
      IF ((p5b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (h2b_2 - 1 + noab * (h15b_2 - 1 + noab * (h9b_2 - 1 + n
     &oab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+p5b-1),int_mb(k_range+p13b-
     &1),int_mb(k_range+p14b-1),8,7,5,4,3,2,1,6,1.0d0)
      END IF
      IF ((p13b .lt. p5b) .and. (p5b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p13b_2 - noab - 
     &1 + nvab * (h2b_2 - 1 + noab * (h15b_2 - 1 + noab * (h9b_2 - 1 + n
     &oab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+p13b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p14b-1),8,6,5,4,3,2,1,7,-1.0d0)
      END IF
      IF ((p14b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p13b_2 - noab - 
     &1 + nvab * (h2b_2 - 1 + noab * (h15b_2 - 1 + noab * (h9b_2 - 1 + n
     &oab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+p13b-1),int_mb(k_range+p14b
     &-1),int_mb(k_range+p5b-1),7,6,5,4,3,2,1,8,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2
     &',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15_2',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+h2b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+h9b-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+h1b-1),7,6,5,4,8,3,2,1,-1.0d0/1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p13b - noab - 1 + nvab * (h2b - 1 + noab * (h
     &1b - 1 + noab * (h15b - 1 + noab * (h9b - 1 + noab * (h8b - 1 + no
     &ab * (h7b - 1)))))))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+h2b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+h9b-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+h1b-1),7,6,5,4,3,8,2,1,1.0d0/1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p13b - noab - 1 + nvab * (h1b - 1 + noab * (h
     &2b - 1 + noab * (h15b - 1 + noab * (h9b - 1 + noab * (h8b - 1 + no
     &ab * (h7b - 1)))))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_15_2_1(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h7 h8 h9 h15 h1 p5 p13 p14 )_yt + = 1 * Sum ( p6 ) * t ( p6 h1 )_t * y ( h7 h8 h9 h15 p5 p6 p13 p14 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h15b
      INTEGER h1b
      INTEGER p5b
      INTEGER p13b
      INTEGER p14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h15b_2
      INTEGER p5b_2
      INTEGER p13b_2
      INTEGER p14b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h15b = h9b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p13b = p5b,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+p5b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b
     &-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p13b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h15b-1) * int_mb(k_range+h1b-1) * int_
     &mb(k_range+p5b-1) * int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1
     &)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      IF (int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p6b,h1b,p6b_1,h1b_1)
      CALL TCE_RESTRICTED_8(h7b,h8b,h9b,h15b,p5b,p13b,p14b,p6b,h7b_2,h8b
     &_2,h9b_2,h15b_2,p5b_2,p13b_2,p14b_2,p6b_2)
      dim_common = int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+h15b-1) * int_mb(k_range+p5b-1) *
     & int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15_2_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p6b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2
     &_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15_2_1',5,MA_ERR)
      IF ((p6b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p6b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_mb(k_range+p13b-
     &1),int_mb(k_range+p14b-1),8,7,6,4,3,2,1,5,-1.0d0)
      END IF
      IF ((p5b .le. p6b) .and. (p6b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nvab * (p6b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p13b-
     &1),int_mb(k_range+p14b-1),8,7,5,4,3,2,1,6,1.0d0)
      END IF
      IF ((p13b .lt. p6b) .and. (p6b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p14b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p13b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p13b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p14b-1),8,6,5,4,3,2,1,7,-1.0d0)
      END IF
      IF ((p14b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p14b_2 - noab - 1 + nvab * (p13b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h15b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h15b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p13b-1),int_mb(k_range+p14b
     &-1),int_mb(k_range+p6b-1),7,6,5,4,3,2,1,8,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2
     &_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15_2_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15_2_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_15_2_1',9,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p14b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p5b-1),int_mb(k_range+h15b
     &-1),int_mb(k_range+h9b-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+h1b-1),7,6,5,4,8,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p14b 
     &- noab - 1 + nvab * (p13b - noab - 1 + nvab * (p5b - noab - 1 + nv
     &ab * (h1b - 1 + noab * (h15b - 1 + noab * (h9b - 1 + noab * (h8b -
     & 1 + noab * (h7b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2
     &_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_15_2_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_15_2_1(l_a_offset,k_a_offset
     &,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h7 h8 h9 h15 h1 p5 p13 p14 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h15b
      INTEGER h1b
      INTEGER p5b
      INTEGER p13b
      INTEGER p14b
      length = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h15b = h9b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p13b = p5b,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b
     &-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p13b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+p5b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_15_2_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h15b = h9b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p13b = p5b,noab+nvab
      DO p14b = p13b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h15b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b
     &-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p13b-1),int_mb(k_sym+p14b
     &-1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+p5b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1).n
     &e.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p14b - noab - 1 + nvab * (p13b - noab - 
     &1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h15b - 1 + 
     &noab * (h9b - 1 + noab * (h8b - 1 + noab * (h7b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+h15b-1) * int_mb(k_range+h1b-1)
     & * int_mb(k_range+p5b-1) * int_mb(k_range+p13b-1) * int_mb(k_range
     &+p14b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_16(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_ytt + = 1/32 * P( 4 ) * Sum ( h7 h8 p5 p6 ) * t ( p3 p5 p6 h1 h7 h8 )_t * i1 ( h7 h8 p4 h2 p5 p6 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER p4b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h2b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h7b-1),int
     &_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p5b,p6b,h1b,h7b,h8b,p3b_1,p5b_1,p6b_1,h1
     &b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_6(p4b,h7b,h8b,h2b,p5b,p6b,p4b_2,h7b_2,h8b_2,h2
     &b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16',2,MA_ERR)
      IF ((p6b .lt. p3b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),6,3,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h7b .lt. h1b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),5,3,6,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p3b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,3,6,5,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),6,2,5,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h7b .lt. h1b) .and.
     & (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),5,2,6,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p3b) .and. (p3b .le. p6b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,2,6,5,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),6,1,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h7b .lt. h1b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),5,1,6,4,3,2,-1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (h1b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,1,6,5,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h2b_2 - 1 + noab 
     &* (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (p4b_2 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,1,3,2,6,5,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16',
     &6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(ns
     &ubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16',9,MA_ERR)
      IF ((p3b .le. p4b) .and. (h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,4,2,3,1,1.0d0/32.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((p3b .le. p4b) .and. (h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,4,2,1,3,-1.0d0/32.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p3b) .and. (h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,2,4,3,1,-1.0d0/32.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p3b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p3b) .and. (h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p3b-1)
     &,2,4,1,3,1.0d0/32.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p3b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_16_1(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 h8 p3 h1 p5 p6 )_yt + = 1 * Sum ( h11 h12 p9 p10 ) * t ( p3 p9 p10 h1 h11 h12 )_t * y ( h7 h8 h11 h12 p5 p6 p9 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p3b_1
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h8b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * int_m
     &b(k_range+p6b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO p10b = p9b,noab+nvab
      DO h11b = 1,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1
     &) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1
     &2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+p10b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h11b-1),i
     &nt_mb(k_sym+h12b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p9b,p10b,h1b,h11b,h12b,p3b_1,p9b_1,p10b_
     &1,h1b_1,h11b_1,h12b_1)
      CALL TCE_RESTRICTED_8(h7b,h8b,h11b,h12b,p5b,p6b,p9b,p10b,h7b_2,h8b
     &_2,h11b_2,h12b_2,p5b_2,p6b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+p10b-1) * int_
     &mb(k_range+h11b-1) * int_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+p5b-1) * int_mb(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16_1',2,MA_ERR)
      IF ((p10b .lt. p3b) .and. (h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (p3b_1 - n
     &oab - 1 + nvab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p3b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),6,3,5,4,2,1,1.0d0)
      END IF
      IF ((p10b .lt. p3b) .and. (h11b .lt. h1b) .and. (h1b .le. h12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (p3b_1 - n
     &oab - 1 + nvab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p3b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),5,3,6,4,2,1,-1.0d0
     &)
      END IF
      IF ((p10b .lt. p3b) .and. (h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (p3b_1 - n
     &oab - 1 + nvab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),4,3,6,5,2,1,1.0d0)
      END IF
      IF ((p9b .lt. p3b) .and. (p3b .le. p10b) .and. (h12b .lt. h1b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p9b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),6,2,5,4,3,1,-1.0d0
     &)
      END IF
      IF ((p9b .lt. p3b) .and. (p3b .le. p10b) .and. (h11b .lt. h1b) .an
     &d. (h1b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p9b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),5,2,6,4,3,1,1.0d0)
      END IF
      IF ((p9b .lt. p3b) .and. (p3b .le. p10b) .and. (h1b .le. h11b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p9b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),4,2,6,5,3,1,-1.0d0
     &)
      END IF
      IF ((p3b .le. p9b) .and. (h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),6,1,5,4,3,2,1.0d0)
      END IF
      IF ((p3b .le. p9b) .and. (h11b .lt. h1b) .and. (h1b .le. h12b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),5,1,6,4,3,2,-1.0d0
     &)
      END IF
      IF ((p3b .le. p9b) .and. (h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - 
     &noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p3b_1 - noab - 1))))
     &)))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),4,1,6,5,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_1
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16_1',5,MA_ERR)
      IF ((h12b .lt. h7b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p9b .lt. p5b) .and. (p5b .le. p10b) .an
     &d. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,6,4,3,2,1,7,5,-1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p9b .lt. p5b) .and. (p6b .le. p10b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,6,4,3,2,1,8,5,1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p5b .le. p9b) .and. (p10b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,5,4,3,2,1,7,6,1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b) .and
     &. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,5,4,3,2,1,8,6,-1.0d0)
      END IF
      IF ((h12b .lt. h7b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,5,4,3,2,1,8,7,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (h12b .lt. h8b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,4,2,3,1,6,5,-1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (h12b .lt. h8b) .a
     &nd. (p9b .lt. p5b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,6,4,2,3,1,7,5,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (h12b .lt. h8b) .a
     &nd. (p9b .lt. p5b) .and. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,6,4,2,3,1,8,5,-1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (h12b .lt. h8b) .a
     &nd. (p5b .le. p9b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,5,4,2,3,1,7,6,-1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (h12b .lt. h8b) .a
     &nd. (p5b .le. p9b) .and. (p9b .lt. p6b) .and. (p6b .le. p10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,5,4,2,3,1,8,6,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h7b .le. h12b) .and. (h12b .lt. h8b) .a
     &nd. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,5,4,2,3,1,8,7,-1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h8b .le. h12b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,3,2,4,1,6,5,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h8b .le. h12b) .and. (p9b .lt. p5b) .an
     &d. (p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,6,3,2,4,1,7,5,-1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h8b .le. h12b) .and. (p9b .lt. p5b) .an
     &d. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,6,3,2,4,1,8,5,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h8b .le. h12b) .and. (p5b .le. p9b) .an
     &d. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,5,3,2,4,1,7,6,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h8b .le. h12b) .and. (p5b .le. p9b) .an
     &d. (p9b .lt. p6b) .and. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,5,3,2,4,1,8,6,-1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (h8b .le. h12b) .and. (p6b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h7b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,5,3,2,4,1,8,7,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h12b .lt. h8b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,4,1,3,2,6,5,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h12b .lt. h8b) .and. (p9b .lt. p5b) .an
     &d. (p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,6,4,1,3,2,7,5,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h12b .lt. h8b) .and. (p9b .lt. p5b) .an
     &d. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,6,4,1,3,2,8,5,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h12b .lt. h8b) .and. (p5b .le. p9b) .an
     &d. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,5,4,1,3,2,7,6,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h12b .lt. h8b) .and. (p5b .le. p9b) .an
     &d. (p9b .lt. p6b) .and. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,5,4,1,3,2,8,6,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h12b .lt. h8b) .and. (p6b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,5,4,1,3,2,8,7,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (h8b .le. h12b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,3,1,4,2,6,5,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (h8b .le. h12b) .a
     &nd. (p9b .lt. p5b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,6,3,1,4,2,7,5,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (h8b .le. h12b) .a
     &nd. (p9b .lt. p5b) .and. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,6,3,1,4,2,8,5,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (h8b .le. h12b) .a
     &nd. (p5b .le. p9b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,5,3,1,4,2,7,6,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (h8b .le. h12b) .a
     &nd. (p5b .le. p9b) .and. (p9b .lt. p6b) .and. (p6b .le. p10b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,5,3,1,4,2,8,6,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (h8b .le. h12b) .a
     &nd. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h8b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,5,3,1,4,2,8,7,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b
     &-1),int_mb(k_range+p6b-1),8,7,2,1,4,3,6,5,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p9b .lt. p5b) .and. (p5b .le. p10b) .an
     &d. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,6,2,1,4,3,7,5,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p9b .lt. p5b) .and. (p6b .le. p10b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p9b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,6,2,1,4,3,8,5,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p5b .le. p9b) .and. (p10b .lt. p6b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p6b-1),8,5,2,1,4,3,7,6,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b) .and
     &. (p6b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p9b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p10b-1),7,5,2,1,4,3,8,6,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,5,2,1,4,3,8,7,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_1
     &',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(ns
     &ubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p3b-1),6,4,3,5,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p6b -
     & noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h8b
     & - 1 + noab * (h7b - 1 + noab * (p3b - noab - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_16_1(l_a_offset,k_a_offset,s
     &ize)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 h8 p3 h1 p5 p6 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+p3b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+p3b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p6b - noab - 1 + nvab * (p5b - noab - 1 
     &+ nvab * (h1b - 1 + noab * (h8b - 1 + noab * (h7b - 1 + noab * (p3
     &b - noab - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h7b-1) * int_
     &mb(k_range+h8b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) 
     &* int_mb(k_range+p6b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_16_2(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h7 h8 p3 h1 p5 p6 )_ytt + = -4 * Sum ( h10 h11 p9 ) * t ( p3 p9 h10 h11 )_t * i2 ( h7 h8 h10 h11 h1 p5 p6 p9 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER h10b
      INTEGER h11b
      INTEGER p3b_1
      INTEGER p9b_1
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER h1b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p6b-1).ne.12)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p6b-1)))))) .eq. ieor(irrep_y,ieor(irrep_t,irrep_t))) TH
     &EN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h8b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * int_m
     &b(k_range+p6b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO h10b = 1,noab
      DO h11b = h10b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h
     &10b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+h10b-1),int_mb(k_sym+h11b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p9b,h10b,h11b,p3b_1,p9b_1,h10b_1,h11b_1)
      CALL TCE_RESTRICTED_8(h7b,h8b,h10b,h11b,h1b,p5b,p6b,p9b,h7b_2,h8b_
     &2,h10b_2,h11b_2,h1b_2,p5b_2,p6b_2,p9b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+h10b-1) * int_
     &mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16_2',2,MA_ERR)
      IF ((p9b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16_2',5,MA_ERR)
      IF ((h11b .lt. h7b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab
     & * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),8,7,5,4,3,2,1,6,1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab
     & * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p6b-1),8,6,5,4,3,2,1,7,-1.0d0)
      END IF
      IF ((h11b .lt. h7b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab
     & * (h11b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p9b-1),7,6,5,4,3,2,1,8,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (h11b .lt. h8b) .a
     &nd. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),8,7,5,4,2,3,1,6,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (h11b .lt. h8b) .a
     &nd. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p6b-1),8,6,5,4,2,3,1,7,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h7b .le. h11b) .and. (h11b .lt. h8b) .a
     &nd. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p9b-1),7,6,5,4,2,3,1,8,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h8b .le. h11b) .and. (p9b .lt. p5b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),8,7,5,3,2,4,1,6,1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h8b .le. h11b) .and. (p5b .le. p9b) .an
     &d. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p6b-1),8,6,5,3,2,4,1,7,-1.0d0)
      END IF
      IF ((h10b .lt. h7b) .and. (h8b .le. h11b) .and. (p6b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h7b_2 - 1 + noab * (h10b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p9b-1),7,6,5,3,2,4,1,8,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h11b .lt. h8b) .and. (p9b .lt. p5b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1 + noa
     &b * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),8,7,5,4,1,3,2,6,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h11b .lt. h8b) .and. (p5b .le. p9b) .an
     &d. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1 + noa
     &b * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p6b-1),8,6,5,4,1,3,2,7,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h11b .lt. h8b) .and. (p6b .le. p9b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1 + noa
     &b * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p9b-1),7,6,5,4,1,3,2,8,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .lt. h8b) .and. (h8b .le. h11b) .a
     &nd. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),8,7,5,3,1,4,2,6,-1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .lt. h8b) .and. (h8b .le. h11b) .a
     &nd. (p5b .le. p9b) .and. (p9b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p6b-1),8,6,5,3,1,4,2,7,1.0d0)
      END IF
      IF ((h7b .le. h10b) .and. (h10b .lt. h8b) .and. (h8b .le. h11b) .a
     &nd. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1 + noa
     &b * (h10b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p9b-1),7,6,5,3,1,4,2,8,-1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p9b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1 + no
     &ab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p9b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p6b-1),8,7,5,2,1,4,3,6,1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (p5b .le. p9b) .and. (p9b .lt. p6b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1 + no
     &ab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p6b-1),8,6,5,2,1,4,3,7,-1.0d0)
      END IF
      IF ((h8b .le. h10b) .and. (p6b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h10b_2 - 1 + no
     &ab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p9b-1),7,6,5,2,1,4,3,8,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2
     &',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h10b .eq. h11b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16_2',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+p3b-1),6,5,4,3,2,1,-4.0d0/1.
     &0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p6b -
     & noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h8b
     & - 1 + noab * (h7b - 1 + noab * (p3b - noab - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_16_2_1(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h7 h8 h10 h11 h1 p5 p6 p9 )_yt + = -1 * Sum ( p12 ) * t ( p12 h1 )_t * y ( h7 h8 h10 h11 p5 p6 p9 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h8b
      INTEGER h10b
      INTEGER h11b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      INTEGER p9b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p12b
      INTEGER p12b_1
      INTEGER h1b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p9b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h10b = h8b,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p9b = p6b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)
     &+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p9b-1).ne
     &.16)) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h10b-1
     &)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5
     &b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),i
     &eor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+p9b-
     &1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_range+h1b-1) * int
     &_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+p9b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+p12b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p12b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p12b,h1b,p12b_1,h1b_1)
      CALL TCE_RESTRICTED_8(h7b,h8b,h10b,h11b,p5b,p6b,p9b,p12b,h7b_2,h8b
     &_2,h10b_2,h11b_2,p5b_2,p6b_2,p9b_2,p12b_2)
      dim_common = int_mb(k_range+p12b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_range+p5b-1) 
     &* int_mb(k_range+p6b-1) * int_mb(k_range+p9b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16_2_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p12b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2
     &_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16_2_1',5,MA_ERR)
      IF ((p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p12b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),8,7,6,4,3,2,1,5,-1.0d0)
      END IF
      IF ((p5b .le. p12b) .and. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p12b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p9b-1),8,7,5,4,3,2,1,6,1.0d0)
      END IF
      IF ((p6b .le. p12b) .and. (p12b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p12b
     &-1),int_mb(k_range+p9b-1),8,6,5,4,3,2,1,7,-1.0d0)
      END IF
      IF ((p9b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h10b_2 
     &- 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h10b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p12b-1),7,6,5,4,3,2,1,8,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2
     &_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16_2_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16_2_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_16_2_1',9,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_mb(k_range+h11b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b-
     &1),int_mb(k_range+h1b-1),7,6,5,4,8,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (p6b - noab - 1 + nvab * (p5b - noab - 1 + nvab
     & * (h1b - 1 + noab * (h11b - 1 + noab * (h10b - 1 + noab * (h8b - 
     &1 + noab * (h7b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2
     &_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_16_2_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_16_2_1(l_a_offset,k_a_offset
     &,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h7 h8 h10 h11 h1 p5 p6 p9 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h7b
      INTEGER h8b
      INTEGER h10b
      INTEGER h11b
      INTEGER h1b
      INTEGER p5b
      INTEGER p6b
      INTEGER p9b
      length = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h10b = h8b,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p9b = p6b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h10b-1
     &)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5
     &b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),i
     &eor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+p9b-
     &1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)
     &+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p9b-1).ne
     &.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_16_2_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h10b = h8b,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p9b = p6b,noab+nvab
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h10b-1
     &)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5
     &b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),i
     &eor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int_mb(k_sym+p9b-
     &1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)
     &+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p9b-1).ne
     &.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p9b - noab - 1 + nvab * (p6b - noab - 1 
     &+ nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + no
     &ab * (h10b - 1 + noab * (h8b - 1 + noab * (h7b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_range+h1b-1
     &) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_range
     &+p9b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_17(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_yttt + = -1/12 * P( 2 ) * Sum ( p12 ) * t ( p12 h1 )_t * i1 ( p3 p4 h2 p12 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p12b
      INTEGER p12b_1
      INTEGER h1b_1
      INTEGER p3b_2
      INTEGER p4b_2
      INTEGER h2b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,ieor(irrep_t,irrep_t)))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+p12b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p12b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p12b,h1b,p12b_1,h1b_1)
      CALL TCE_RESTRICTED_4(p3b,p4b,h2b,p12b,p3b_2,p4b_2,h2b_2,p12b_2)
      dim_common = int_mb(k_range+p12b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb
     &(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p12b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (p4b_2 - noab - 1 + nvab
     & * (p3b_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p12b-1
     &),3,2,1,4,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17',
     &6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1)
     &,3,2,4,1,-1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p3b-1),int_mb(k_range+h1b-1)
     &,3,2,1,4,1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_17_1(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 p4 h1 p12 )_ytt + = 1 * Sum ( h6 h7 h8 p5 ) * t ( p3 p4 p5 h6 h7 h8 )_t * i2 ( h6 h7 h8 h1 p5 p12 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER h6b
      INTEGER h7b
      INTEGER h8b
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER h6b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h1b_2
      INTEGER p12b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(3)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)
     & .eq. int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+p5b-1),ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),int
     &_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p3b,p4b,p5b,h6b,h7b,h8b,p3b_1,p4b_1,p5b_1,h6
     &b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_6(h6b,h7b,h8b,h1b,p12b,p5b,h6b_2,h7b_2,h8b_2,h
     &1b_2,p12b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+h6b-1) * int_m
     &b(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h1b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_1',2,MA_ERR)
      IF ((p5b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p3b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),3,2,6,5,4,1,1.0d0)
      END IF
      IF ((p3b .le. p5b) .and. (p5b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),3,1,6,5,4,2,-1.0d0)
      END IF
      IF ((p4b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),2,1,6,5,4,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_1',5,MA_ERR)
      IF ((p5b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),6,4,3,2,1,5,1.0d0)
      END IF
      IF ((p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),5,4,3,2,1,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1
     &',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      isubh = 1
      IF (h6b .eq. h7b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,6.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(nsubh(3)),dbl_mb(k_a_sort)
     &,dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dim
     &a_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1
     &),4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3
     &b - noab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_17_1(l_a_offset,k_a_offset,s
     &ize)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 p4 h1 p12 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER p12b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,irrep_t))) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,irrep_t))) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p12b - noab - 1 + nvab * (h1b - 1 + noab
     & * (p4b - noab - 1 + nvab * (p3b - noab - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p12b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_17_1_1(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h7 h8 h1 p5 p12 )_yt + = -1 * Sum ( h11 p9 p10 ) * t ( p9 p10 h1 h11 )_t * y ( h6 h7 h8 h11 p5 p9 p10 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p5b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p10b
      INTEGER h11b
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h11b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h11b_2
      INTEGER p5b_2
      INTEGER p12b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p12b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p12b-1).ne.12)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p12b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h8b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * int_m
     &b(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO p10b = p9b,noab+nvab
      DO h11b = 1,noab
      IF (int_mb(k_spin+p9b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p9b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h11b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p9b,p10b,h1b,h11b,p9b_1,p10b_1,h1b_1,h11b_1)
      CALL TCE_RESTRICTED_8(h6b,h7b,h8b,h11b,p5b,p12b,p9b,p10b,h6b_2,h7b
     &_2,h8b_2,h11b_2,p5b_2,p12b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+p10b-1) * int_
     &mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+h8b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_1_1',2,MA_ERR)
      IF ((h11b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),4,3,2,1,-1.0d0)
      END IF
      IF ((h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-
     &1),3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1
     &_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_1_1',5,MA_ERR)
      IF ((h11b .lt. h6b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p12b-1),8,7,4,3,2,1,6,5,-1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (p9b .lt. p5b) .and. (p5b .le. p10b) .an
     &d. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,6,4,3,2,1,7,5,1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (p9b .lt. p5b) .and. (p12b .lt. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p10b-1),7,6,4,3,2,1,8,5,-1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (p5b .le. p9b) .and. (p10b .le. p12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,5,4,3,2,1,7,6,-1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (p5b .le. p9b) .and. (p9b .le. p12b) .an
     &d. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p10b-1),7,5,4,3,2,1,8,6,1.0d0)
      END IF
      IF ((h11b .lt. h6b) .and. (p12b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p12b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h6b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,5,4,3,2,1,8,7,-1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p12b-1),8,7,4,3,1,2,6,5,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p9b .lt. p5b) .an
     &d. (p5b .le. p10b) .and. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,6,4,3,1,2,7,5,-1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p9b .lt. p5b) .an
     &d. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p10b-1),7,6,4,3,1,2,8,5,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p5b .le. p9b) .an
     &d. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,5,4,3,1,2,7,6,1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p5b .le. p9b) .an
     &d. (p9b .le. p12b) .and. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p10b-1),7,5,4,3,1,2,8,6,-1.0d0)
      END IF
      IF ((h6b .le. h11b) .and. (h11b .lt. h7b) .and. (p12b .lt. p9b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p12b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h7b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,5,4,3,1,2,8,7,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p12b-1),8,7,4,2,1,3,6,5,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (p9b .lt. p5b) .an
     &d. (p5b .le. p10b) .and. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,6,4,2,1,3,7,5,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (p9b .lt. p5b) .an
     &d. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p10b-1),7,6,4,2,1,3,8,5,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (p5b .le. p9b) .an
     &d. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,5,4,2,1,3,7,6,-1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (p5b .le. p9b) .an
     &d. (p9b .le. p12b) .and. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p10b-1),7,5,4,2,1,3,8,6,1.0d0)
      END IF
      IF ((h7b .le. h11b) .and. (h11b .lt. h8b) .and. (p12b .lt. p9b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p12b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h8b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,5,4,2,1,3,8,7,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p10b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+p12b-1),8,7,3,2,1,4,6,5,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p9b .lt. p5b) .and. (p5b .le. p10b) .an
     &d. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,6,3,2,1,4,7,5,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p9b .lt. p5b) .and. (p12b .lt. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 
     &1 + nvab * (p9b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1
     &),int_mb(k_range+p9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p10b-1),7,6,3,2,1,4,8,5,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p5b .le. p9b) .and. (p10b .le. p12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-
     &1),int_mb(k_range+p12b-1),8,5,3,2,1,4,7,6,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p5b .le. p9b) .and. (p9b .le. p12b) .an
     &d. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p9b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p9b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p10b-1),7,5,3,2,1,4,8,6,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (p12b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (p12b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h11b_2 - 1 + noab * (h8b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p9b-
     &1),int_mb(k_range+p10b-1),6,5,3,2,1,4,8,7,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1
     &_1',6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_1_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_1_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_1_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+h1b-1),5,4,3,6,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h8
     &b - 1 + noab * (h7b - 1 + noab * (h6b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1
     &_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_1_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_17_1_1(l_a_offset,k_a_offset
     &,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h7 h8 h1 p5 p12 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p5b
      INTEGER p12b
      length = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p12b = p5b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p12b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p12b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_1_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p12b = p5b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p12b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p12b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p12b - noab - 1 + nvab * (p5b - noab - 1
     & + nvab * (h1b - 1 + noab * (h8b - 1 + noab * (h7b - 1 + noab * (h
     &6b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_
     &mb(k_range+h8b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) 
     &* int_mb(k_range+p12b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_17_2(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 p4 h1 p12 )_yttt + = 3/8 * P( 2 ) * Sum ( h6 h7 p5 ) * t ( p3 p5 h6 h7 )_t * i2 ( h6 h7 p4 h1 p5 p12 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER h6b
      INTEGER h7b
      INTEGER p3b_1
      INTEGER p5b_1
      INTEGER h6b_1
      INTEGER h7b_1
      INTEGER p4b_2
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h1b_2
      INTEGER p12b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_y,ieor(irrep_
     &t,ieor(irrep_t,irrep_t)))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &6b-1)+int_mb(k_spin+h7b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h6b-1),int_mb(k_sym+h7b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p5b,h6b,h7b,p3b_1,p5b_1,h6b_1,h7b_1)
      CALL TCE_RESTRICTED_6(p4b,h6b,h7b,h1b,p12b,p5b,p4b_2,h6b_2,h7b_2,h
     &1b_2,p12b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+h6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2',2,MA_ERR)
      IF ((p5b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1)
     &,2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1)
     &,1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2',5,MA_ERR)
      IF ((p5b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (p4b_2 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),6,4,1,3,2,5,1.0d0)
      END IF
      IF ((p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (h1b_2 - 1 + noab
     & * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (p4b_2 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),5,4,1,3,2,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h6b .eq. h7b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2',9,MA_ERR)
      IF ((p3b .le. p4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1
     &),4,3,2,1,3.0d0/8.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3
     &b - noab - 1)))))
      END IF
      IF ((p4b .le. p3b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1
     &),3,4,2,1,-3.0d0/8.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p3b - noab - 1 + nvab * (p4
     &b - noab - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_17_2_1(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h7 p3 h1 p5 p12 )_ytt + = -1 * Sum ( h9 h10 p8 ) * t ( p3 p8 h9 h10 )_t * i3 ( h6 h7 h9 h10 h1 p5 p8 p12 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h6b
      INTEGER h7b
      INTEGER h1b
      INTEGER p5b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER h9b
      INTEGER h10b
      INTEGER p3b_1
      INTEGER p8b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h1b_2
      INTEGER p5b_2
      INTEGER p12b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p12b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h6b-1
     &)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p12b-1).ne.12)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p12b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h6b-1),ieor(int_mb(
     &k_sym+h7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,ieor(irrep_t,irrep_t))) T
     &HEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h6b-1) * int_mb(k_ra
     &nge+h7b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) * int_m
     &b(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p8b,h9b,h10b,p3b_1,p8b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_8(h6b,h7b,h9b,h10b,h1b,p5b,p12b,p8b,h6b_2,h7b_
     &2,h9b_2,h10b_2,h1b_2,p5b_2,p12b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1) * int_m
     &b(k_range+h10b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2_1',2,MA_ERR)
      IF ((p8b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p3b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2_1',5,MA_ERR)
      IF ((h10b .lt. h6b) .and. (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noa
     &b * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p12b-1),8,7,5,4,3,2,1,6,-1.0d0)
      END IF
      IF ((h10b .lt. h6b) .and. (p5b .le. p8b) .and. (p8b .le. p12b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noa
     &b * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p12b-1),8,6,5,4,3,2,1,7,1.0d0)
      END IF
      IF ((h10b .lt. h6b) .and. (p12b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noa
     &b * (h10b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p8b-1),7,6,5,4,3,2,1,8,-1.0d0)
      END IF
      IF ((h9b .lt. h6b) .and. (h6b .le. h10b) .and. (h10b .lt. h7b) .an
     &d. (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1 + no
     &ab * (h6b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p12b-1),8,7,5,4,2,3,1,6,1.0d0)
      END IF
      IF ((h9b .lt. h6b) .and. (h6b .le. h10b) .and. (h10b .lt. h7b) .an
     &d. (p5b .le. p8b) .and. (p8b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1 + no
     &ab * (h6b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p12b-1),8,6,5,4,2,3,1,7,-1.0d0)
      END IF
      IF ((h9b .lt. h6b) .and. (h6b .le. h10b) .and. (h10b .lt. h7b) .an
     &d. (p12b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1 + no
     &ab * (h6b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p8b-1),7,6,5,4,2,3,1,8,1.0d0)
      END IF
      IF ((h9b .lt. h6b) .and. (h7b .le. h10b) .and. (p8b .lt. p5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1 + no
     &ab * (h6b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p12b-1),8,7,5,3,2,4,1,6,-1.0d0)
      END IF
      IF ((h9b .lt. h6b) .and. (h7b .le. h10b) .and. (p5b .le. p8b) .and
     &. (p8b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1 + no
     &ab * (h6b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p12b-1),8,6,5,3,2,4,1,7,1.0d0)
      END IF
      IF ((h9b .lt. h6b) .and. (h7b .le. h10b) .and. (p12b .lt. p8b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1 + no
     &ab * (h6b_2 - 1 + noab * (h9b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p8b-1),7,6,5,3,2,4,1,8,-1.0d0)
      END IF
      IF ((h6b .le. h9b) .and. (h10b .lt. h7b) .and. (p8b .lt. p5b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1 + no
     &ab * (h9b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p12b-1),8,7,5,4,1,3,2,6,-1.0d0)
      END IF
      IF ((h6b .le. h9b) .and. (h10b .lt. h7b) .and. (p5b .le. p8b) .and
     &. (p8b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1 + no
     &ab * (h9b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p12b-1),8,6,5,4,1,3,2,7,1.0d0)
      END IF
      IF ((h6b .le. h9b) .and. (h10b .lt. h7b) .and. (p12b .lt. p8b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h7b_2 - 1 + noab * (h10b_2 - 1 + no
     &ab * (h9b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p8b-1),7,6,5,4,1,3,2,8,-1.0d0)
      END IF
      IF ((h6b .le. h9b) .and. (h9b .lt. h7b) .and. (h7b .le. h10b) .and
     &. (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1 + no
     &ab * (h9b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p12b-1),8,7,5,3,1,4,2,6,1.0d0)
      END IF
      IF ((h6b .le. h9b) .and. (h9b .lt. h7b) .and. (h7b .le. h10b) .and
     &. (p5b .le. p8b) .and. (p8b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1 + no
     &ab * (h9b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p12b-1),8,6,5,3,1,4,2,7,-1.0d0)
      END IF
      IF ((h6b .le. h9b) .and. (h9b .lt. h7b) .and. (h7b .le. h10b) .and
     &. (p12b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h10b_2 - 1 + noab * (h7b_2 - 1 + no
     &ab * (h9b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h7b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p8b-1),7,6,5,3,1,4,2,8,1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1 + no
     &ab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p12b-1),8,7,5,2,1,4,3,6,-1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p5b .le. p8b) .and. (p8b .le. p12b)) THE
     &N
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1 + no
     &ab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1
     &),int_mb(k_range+p12b-1),8,6,5,2,1,4,3,7,1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (p12b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (h1b_2 - 1 + noab * (h10b_2 - 1 + noab * (h9b_2 - 1 + no
     &ab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p8b-1),7,6,5,2,1,4,3,8,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &_1',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h7b-1
     &),int_mb(k_range+h6b-1),int_mb(k_range+p3b-1),6,5,4,3,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h7
     &b - 1 + noab * (h6b - 1 + noab * (p3b - noab - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_17_2_1(l_a_offset,k_a_offset
     &,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h6 h7 p3 h1 p5 p12 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h6b
      INTEGER h7b
      INTEGER h1b
      INTEGER p5b
      INTEGER p12b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p12b = p5b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+p3b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p12b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,ieor(irrep_t,irrep_t))) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p12b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p12b = p5b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+p3b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p12b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+p5b-1),int
     &_mb(k_sym+p12b-1)))))) .eq. ieor(irrep_y,ieor(irrep_t,irrep_t))) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+p3b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b-1)+i
     &nt_mb(k_spin+p12b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p12b - noab - 1 + nvab * (p5b - noab - 1
     & + nvab * (h1b - 1 + noab * (h7b - 1 + noab * (h6b - 1 + noab * (p
     &3b - noab - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h6b-1) * int_
     &mb(k_range+h7b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+p5b-1) 
     &* int_mb(k_range+p12b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_17_2_1_1(d_a,k_a_offset,d_b,k_b_off
     &set,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h6 h7 h9 h10 h1 p5 p8 p12 )_yt + = 1 * Sum ( p11 ) * t ( p11 h1 )_t * i4 ( h6 h7 h9 h10 p5 p8 p11 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h9b
      INTEGER h10b
      INTEGER h1b
      INTEGER p5b
      INTEGER p8b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p11b
      INTEGER p11b_1
      INTEGER h1b_1
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p5b_2
      INTEGER p8b_2
      INTEGER p12b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p12b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1).ne
     &.16)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b
     &-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p12b-
     &1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+h1b-1) * int_
     &mb(k_range+p5b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+p11b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p11b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p11b,h1b,p11b_1,h1b_1)
      CALL TCE_RESTRICTED_8(h6b,h7b,h9b,h10b,p5b,p8b,p12b,p11b,h6b_2,h7b
     &_2,h9b_2,h10b_2,p5b_2,p8b_2,p12b_2,p11b_2)
      dim_common = int_mb(k_range+p11b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+p5b-1) *
     & int_mb(k_range+p8b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2_1_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p11b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &_1_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2_1_1',5,MA_ERR)
      IF ((p11b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1
     & + nvab * (p11b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-
     &1),int_mb(k_range+p12b-1),8,7,6,4,3,2,1,5,1.0d0)
      END IF
      IF ((p5b .le. p11b) .and. (p11b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p11b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+p8b-
     &1),int_mb(k_range+p12b-1),8,7,5,4,3,2,1,6,-1.0d0)
      END IF
      IF ((p8b .le. p11b) .and. (p11b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p11b_2 - noab - 1 + nvab * (p8b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p11b-
     &1),int_mb(k_range+p12b-1),8,6,5,4,3,2,1,7,1.0d0)
      END IF
      IF ((p12b .lt. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p8b_2 - noab - 
     &1 + nvab * (p5b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 
     &- 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p11b-1),7,6,5,4,3,2,1,8,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &_1_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2_1_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2_1_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2_1_1',9,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h9b-1),int_mb(k_range+h7b-1),int_mb(k_range+h6b-
     &1),int_mb(k_range+h1b-1),7,6,5,4,8,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p8b - noab - 1 + nvab * (p5b - noab - 1 + nva
     &b * (h1b - 1 + noab * (h10b - 1 + noab * (h9b - 1 + noab * (h7b - 
     &1 + noab * (h6b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &_1_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2_1_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_17_2_1_1(l_a_offset,k_a_offs
     &et,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h6 h7 h9 h10 h1 p5 p8 p12 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h6b
      INTEGER h7b
      INTEGER h9b
      INTEGER h10b
      INTEGER h1b
      INTEGER p5b
      INTEGER p8b
      INTEGER p12b
      length = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p12b = p8b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b
     &-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p12b-
     &1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1).ne
     &.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO h1b = 1,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p12b = p8b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+p5b
     &-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h1b-1),ie
     &or(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p12b-
     &1)))))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h1b-1)+
     &int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1).ne
     &.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p12b - noab - 1 + nvab * (p8b - noab - 1
     & + nvab * (p5b - noab - 1 + nvab * (h1b - 1 + noab * (h10b - 1 + n
     &oab * (h9b - 1 + noab * (h7b - 1 + noab * (h6b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+h1b-1)
     & * int_mb(k_range+p5b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+
     &p12b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_17_2_1_1_1(d_a,k_a_offset,d_c,k_c_o
     &ffset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h6 h7 h9 h10 p5 p8 p11 p12 )_y + = 1 * y ( h6 h7 h9 h10 p5 p8 p11 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h9b
      INTEGER h10b
      INTEGER p5b
      INTEGER p8b
      INTEGER p11b
      INTEGER p12b
      INTEGER dimc
      INTEGER h6b_1
      INTEGER h7b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER p5b_1
      INTEGER p8b_1
      INTEGER p11b_1
      INTEGER p12b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p11b = p8b,noab+nvab
      DO p12b = p11b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+p5b-1)+
     &int_mb(k_spin+p8b-1)+int_mb(k_spin+p11b-1)+int_mb(k_spin+p12b-1).n
     &e.16)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b
     &-1)+int_mb(k_spin+p11b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+p5b-1),ie
     &or(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p11b-1),int_mb(k_sym+p12b
     &-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+p5b-1) * int_
     &mb(k_range+p8b-1) * int_mb(k_range+p11b-1) * int_mb(k_range+p12b-1
     &)
      CALL TCE_RESTRICTED_8(h6b,h7b,h9b,h10b,p5b,p8b,p11b,p12b,h6b_1,h7b
     &_1,h9b_1,h10b_1,p5b_1,p8b_1,p11b_1,p12b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+p5b-1) *
     & int_mb(k_range+p8b-1) * int_mb(k_range+p11b-1) * int_mb(k_range+p
     &12b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1_1_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2_1_1_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p12b_
     &1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p8b_1 - noab - 
     &1 + nvab * (p5b_1 - noab - 1 + nvab * (h10b_1 - 1 + noab * (h9b_1 
     &- 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p11b-
     &1),int_mb(k_range+p12b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &_1_1_1',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2_1_1_1',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+h6b-1),8,7,6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p11b - noab - 1 + nvab * (p8b - noab - 1 + nv
     &ab * (p5b - noab - 1 + nvab * (h10b - 1 + noab * (h9b - 1 + noab *
     & (h7b - 1 + noab * (h6b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &_1_1_1',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2_1_1_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_17_2_1_1_1(l_a_offset,k_a_of
     &fset,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h6 h7 h9 h10 p5 p8 p11 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h6b
      INTEGER h7b
      INTEGER h9b
      INTEGER h10b
      INTEGER p5b
      INTEGER p8b
      INTEGER p11b
      INTEGER p12b
      length = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p11b = p8b,noab+nvab
      DO p12b = p11b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b
     &-1)+int_mb(k_spin+p11b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+p5b-1),ie
     &or(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p11b-1),int_mb(k_sym+p12b
     &-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+p5b-1)+
     &int_mb(k_spin+p8b-1)+int_mb(k_spin+p11b-1)+int_mb(k_spin+p12b-1).n
     &e.16)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1_1_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p11b = p8b,noab+nvab
      DO p12b = p11b,noab+nvab
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b
     &-1)+int_mb(k_spin+p11b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+p5b-1),ie
     &or(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p11b-1),int_mb(k_sym+p12b
     &-1)))))))) .eq. irrep_y) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+p5b-1)+
     &int_mb(k_spin+p8b-1)+int_mb(k_spin+p11b-1)+int_mb(k_spin+p12b-1).n
     &e.16)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p12b - noab - 1 + nvab * (p11b - noab - 
     &1 + nvab * (p8b - noab - 1 + nvab * (p5b - noab - 1 + nvab * (h10b
     & - 1 + noab * (h9b - 1 + noab * (h7b - 1 + noab * (h6b - 1)))))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+p5b-1)
     & * int_mb(k_range+p8b-1) * int_mb(k_range+p11b-1) * int_mb(k_range
     &+p12b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_17_2_1_1_2(d_a,k_a_offset,d_c,k_c_o
     &ffset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i4 ( h6 h7 h9 h10 p5 p8 p11 p12 )_y + = 1 * y ( h6 h7 h9 h10 p5 p8 p11 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h6b
      INTEGER h7b
      INTEGER h9b
      INTEGER h10b
      INTEGER p5b
      INTEGER p8b
      INTEGER p11b
      INTEGER p12b
      INTEGER dimc
      INTEGER h6b_1
      INTEGER h7b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER p5b_1
      INTEGER p8b_1
      INTEGER p11b_1
      INTEGER p12b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h9b = h7b,noab
      DO h10b = h9b,noab
      DO p5b = noab+1,noab+nvab
      DO p8b = p5b,noab+nvab
      DO p11b = p8b,noab+nvab
      DO p12b = p11b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+p5b-1)+
     &int_mb(k_spin+p8b-1)+int_mb(k_spin+p11b-1)+int_mb(k_spin+p12b-1).n
     &e.16)) THEN
      IF (int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h9b-1)
     &+int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p8b
     &-1)+int_mb(k_spin+p11b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h6b-1),ieor(int_mb(k_sym+h7b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+p5b-1),ie
     &or(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p11b-1),int_mb(k_sym+p12b
     &-1)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+p5b-1) * int_
     &mb(k_range+p8b-1) * int_mb(k_range+p11b-1) * int_mb(k_range+p12b-1
     &)
      CALL TCE_RESTRICTED_8(h6b,h7b,h9b,h10b,p5b,p8b,p11b,p12b,h6b_1,h7b
     &_1,h9b_1,h10b_1,p5b_1,p8b_1,p11b_1,p12b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h6b-1) * int_mb(k_range+h7b-1) * int_mb
     &(k_range+h9b-1) * int_mb(k_range+h10b-1) * int_mb(k_range+p5b-1) *
     & int_mb(k_range+p8b-1) * int_mb(k_range+p11b-1) * int_mb(k_range+p
     &12b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2_1_1_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2_1_1_2',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p12b_
     &1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p8b_1 - noab - 
     &1 + nvab * (p5b_1 - noab - 1 + nvab * (h10b_1 - 1 + noab * (h9b_1 
     &- 1 + noab * (h7b_1 - 1 + noab * (h6b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p11b-
     &1),int_mb(k_range+p12b-1),8,7,6,5,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &_1_1_2',2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_17_2_1_1_2',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p11b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-
     &1),int_mb(k_range+h10b-1),int_mb(k_range+h9b-1),int_mb(k_range+h7b
     &-1),int_mb(k_range+h6b-1),8,7,6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p11b - noab - 1 + nvab * (p8b - noab - 1 + nv
     &ab * (p5b - noab - 1 + nvab * (h10b - 1 + noab * (h9b - 1 + noab *
     & (h7b - 1 + noab * (h6b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_17_2
     &_1_1_2',4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_17_2_1_1_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_18(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p3 p4 h1 h2 )_yttt + = -1/8 * Sum ( p5 p6 ) * t ( p5 p6 h1 h2 )_t * i1 ( p3 p4 p5 p6 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p3b_2
      INTEGER p4b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,ieor(irrep_t,irrep_t)))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_18',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h1b,h2b,p5b_1,p6b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(p3b,p4b,p5b,p6b,p3b_2,p4b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_18',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_18',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_18',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_18',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p4b_2 - noab - 1 
     &+ nvab * (p3b_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1)
     &,2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18',
     &6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_18',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_18',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_18',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,2,1,4,3,-1.0d0/8.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p3b - noab
     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_18',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_18_1(d_a,k_a_offset,d_b,k_b_offset,
     &d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 p4 p5 p6 )_ytt + = 1/2 * P( 2 ) * Sum ( h8 h9 p7 ) * t ( p3 p7 h8 h9 )_t * i2 ( h8 h9 p4 p5 p6 p7 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER p4b
      INTEGER p5b
      INTEGER p6b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p3b_1
      INTEGER p7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER p4b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO p4b = noab+1,noab+nvab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+p
     &5b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+p5b-1),int_mb(k_sym+p6b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_mb(k_ra
     &nge+p5b-1) * int_mb(k_range+p6b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &8b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h8b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p7b,h8b,h9b,p3b_1,p7b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_6(p4b,h8b,h9b,p5b,p6b,p7b,p4b_2,h8b_2,h9b_2,p5
     &b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_18_1',2,MA_ERR)
      IF ((p7b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p3b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1
     &',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_18_1',5,MA_ERR)
      IF ((p7b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p7b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (p4b_2 - noab - 1
     &)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),6,5,1,3,2,4,1.0d0)
      END IF
      IF ((p5b .le. p7b) .and. (p7b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (p4b_2 - noab - 1
     &)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p6b-1),6,4,1,3,2,5,-1.0d0)
      END IF
      IF ((p6b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h8b_2 - 1 + noab * (p4b_2 - noab - 1
     &)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),5,4,1,3,2,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1
     &',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_18_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_18_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_18_1',9,MA_ERR)
      IF ((p3b .le. p4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,4,3,2,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p6b -
     & noab - 1 + nvab * (p5b - noab - 1 + nvab * (p4b - noab - 1 + nvab
     & * (p3b - noab - 1)))))
      END IF
      IF ((p4b .le. p3b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+p3b-1)
     &,3,4,2,1,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p6b -
     & noab - 1 + nvab * (p5b - noab - 1 + nvab * (p3b - noab - 1 + nvab
     & * (p4b - noab - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1
     &',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_18_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_18_1(l_a_offset,k_a_offset,s
     &ize)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p3 p4 p5 p6 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER p4b
      INTEGER p5b
      INTEGER p6b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+p
     &5b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+p5b-1),int_mb(k_sym+p6b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+p
     &5b-1)+int_mb(k_spin+p6b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+p5b-1),int_mb(k_sym+p6b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p6b - noab - 1 + nvab * (p5b - noab - 1 
     &+ nvab * (p4b - noab - 1 + nvab * (p3b - noab - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_
     &mb(k_range+p5b-1) * int_mb(k_range+p6b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdtq_2pdm_pphh_mo_18_1_1(d_a,k_a_offset,d_b,k_b_offse
     &t,d_c,k_c_offset)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h8 h9 p3 p5 p6 p7 )_yt + = 1 * Sum ( h11 h12 p10 ) * t ( p3 p10 h11 h12 )_t * y ( h8 h9 h11 h12 p5 p6 p7 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p3b
      INTEGER h8b
      INTEGER h9b
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER h11b
      INTEGER h12b
      INTEGER p3b_1
      INTEGER p10b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p3b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p3b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+i
     &nt_mb(k_spin+p7b-1).ne.12)) THEN
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)
     & .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int
     &_mb(k_sym+p7b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+p3b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h12b = h11b,noab
      IF (int_mb(k_spin+p3b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+
     &h11b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p3b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb
     &(k_sym+h11b-1),int_mb(k_sym+h12b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p3b,p10b,h11b,h12b,p3b_1,p10b_1,h11b_1,h12b_
     &1)
      CALL TCE_RESTRICTED_8(h8b,h9b,h11b,h12b,p5b,p6b,p7b,p10b,h8b_2,h9b
     &_2,h11b_2,h12b_2,p5b_2,p6b_2,p7b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h11b-1) * int
     &_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_18_1_1',2,MA_ERR)
      IF ((p10b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (p3b_1 - noab - 1 + nvab * (p1
     &0b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),2,4,3,1,-1.0d0)
      END IF
      IF ((p3b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p
     &3b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b
     &-1),1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1
     &_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_18_1_1',5,MA_ERR)
      IF ((h12b .lt. h8b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,4,3,2,1,5,-1.0d0)
      END IF
      IF ((h12b .lt. h8b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,4,3,2,1,6,1.0d0)
      END IF
      IF ((h12b .lt. h8b) .and. (p6b .le. p10b) .and. (p10b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,4,3,2,1,7,-1.0d0)
      END IF
      IF ((h12b .lt. h8b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h8b_2 - 
     &1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,4,3,2,1,8,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h12b) .and. (h12b .lt. h9b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,4,2,3,1,5,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h12b) .and. (h12b .lt. h9b) .a
     &nd. (p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,4,2,3,1,6,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h12b) .and. (h12b .lt. h9b) .a
     &nd. (p6b .le. p10b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,4,2,3,1,7,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h8b .le. h12b) .and. (h12b .lt. h9b) .a
     &nd. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,4,2,3,1,8,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h12b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,3,2,4,1,5,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h12b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,3,2,4,1,6,1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h12b) .and. (p6b .le. p10b) .a
     &nd. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,3,2,4,1,7,-1.0d0)
      END IF
      IF ((h11b .lt. h8b) .and. (h9b .le. h12b) .and. (p7b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h11b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,3,2,4,1,8,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h12b .lt. h9b) .and. (p10b .lt. p5b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,4,1,3,2,5,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h12b .lt. h9b) .and. (p5b .le. p10b) .a
     &nd. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,4,1,3,2,6,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h12b .lt. h9b) .and. (p6b .le. p10b) .a
     &nd. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,4,1,3,2,7,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h12b .lt. h9b) .and. (p7b .le. p10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab * (h12b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h12b-1),int_mb(k_range+h9b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,4,1,3,2,8,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h12b) .a
     &nd. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,3,1,4,2,5,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h12b) .a
     &nd. (p5b .le. p10b) .and. (p10b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,3,1,4,2,6,-1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h12b) .a
     &nd. (p6b .le. p10b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,3,1,4,2,7,1.0d0)
      END IF
      IF ((h8b .le. h11b) .and. (h11b .lt. h9b) .and. (h9b .le. h12b) .a
     &nd. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h11b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h9b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,3,1,4,2,8,-1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (p10b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p10b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,6,2,1,4,3,5,-1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p5b .le. p10b) .and. (p10b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p10b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p10b-1),int_mb(k_range+p6b
     &-1),int_mb(k_range+p7b-1),8,7,5,2,1,4,3,6,1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p6b .le. p10b) .and. (p10b .lt. p7b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p10b
     &-1),int_mb(k_range+p7b-1),8,6,5,2,1,4,3,7,-1.0d0)
      END IF
      IF ((h9b .le. h11b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     & + nvab * (p5b_2 - noab - 1 + nvab * (h12b_2 - 1 + noab * (h11b_2 
     &- 1 + noab * (h9b_2 - 1 + noab * (h8b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-
     &1),int_mb(k_range+p10b-1),7,6,5,2,1,4,3,8,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1
     &_1',6,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_18_1_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_18_1_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_2pdm_pphh_mo_18_1_1',9,MA_ERR)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p3b-1),6,5,4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (p6b - noab - 1 + nvab * (p5b - noab - 1 + nvab
     & * (h9b - 1 + noab * (h8b - 1 + noab * (p3b - noab - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1
     &_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo
     &_18_1_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdtq_2pdm_pphh_mo_18_1_1(l_a_offset,k_a_offset
     &,size)
C     $Id: ccsdtq_2pdm_pphh_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h8 h9 p3 p5 p6 p7 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p3b
      INTEGER h8b
      INTEGER h9b
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      length = 0
      DO p3b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+p3b-1)
     & .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int
     &_mb(k_sym+p7b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+i
     &nt_mb(k_spin+p7b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdtq_2pdm_pphh_mo_18_1_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p3b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+p3b-1)
     & .eq. int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+p3b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),int
     &_mb(k_sym+p7b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+i
     &nt_mb(k_spin+p7b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p7b - noab - 1 + nvab * (p6b - noab - 1 
     &+ nvab * (p5b - noab - 1 + nvab * (h9b - 1 + noab * (h8b - 1 + noa
     &b * (p3b - noab - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p3b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) 
     &* int_mb(k_range+p7b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END

      SUBROUTINE ccsdt_2pdm_hphp_mo(d_i0,d_t1,d_t2,d_t3,d_y1,d_y2,d_y3,k
     &_i0_offset,k_t1_offset,k_t2_offset,k_t3_offset,k_y1_offset,k_y2_of
     &fset,k_y3_offset)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h4 p1 h2 p3 )_yt + = -1/4 * P( 4 ) * t ( p1 h2 )_t * y ( h4 p3 )_y
C     i0 ( h4 p1 h2 p3 )_yt + = -1/4 * P( 4 ) * Sum ( h6 p5 ) * t ( p1 p5 h2 h6 )_t * y ( h4 h6 p3 p5 )_y
C     i0 ( h4 p1 h2 p3 )_yt + = -1/16 * P( 4 ) * Sum ( h7 h8 p5 p6 ) * t ( p1 p5 p6 h2 h7 h8 )_t * y ( h4 h7 h8 p3 p5 p6 )_y
C     i0 ( h2 p1 h4 p3 )_ytt + = 1/2 * P( 2 ) * Sum ( h9 ) * t ( p1 h9 )_t * i1 ( h2 h9 h4 p3 )_yt
C         i1 ( h4 h9 h2 p1 )_yt + = 1/2 * P( 2 ) * Sum ( p5 ) * t ( p5 h2 )_t * y ( h4 h9 p1 p5 )_y
C         i1 ( h4 h9 h2 p1 )_yt + = -1/4 * P( 2 ) * Sum ( h7 p5 p6 ) * t ( p5 p6 h2 h7 )_t * y ( h4 h7 h9 p1 p5 p6 )_y
C     i0 ( h2 p1 h4 p3 )_ytt + = 1/4 * P( 2 ) * Sum ( h6 h7 p5 ) * t ( p1 p5 h6 h7 )_t * i1 ( h2 h6 h7 h4 p3 p5 )_yt
C         i1 ( h4 h6 h7 h2 p1 p5 )_yt + = -1/2 * P( 2 ) * Sum ( p8 ) * t ( p8 h2 )_t * y ( h4 h6 h7 p1 p5 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "util.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_i0
      INTEGER k_i0_offset
      INTEGER d_t1
      INTEGER k_t1_offset
      INTEGER d_y1
      INTEGER k_y1_offset
      INTEGER d_t2
      INTEGER k_t2_offset
      INTEGER d_y2
      INTEGER k_y2_offset
      INTEGER d_t3
      INTEGER k_t3_offset
      INTEGER d_y3
      INTEGER k_y3_offset
      INTEGER d_i1
      INTEGER k_i1_offset
      INTEGER l_i1_offset
      INTEGER size_i1
      CHARACTER*255 filename
      CALL ccsdt_2pdm_hphp_mo_1(d_t1,k_t1_offset,d_y1,k_y1_offset,d_i0,k
     &_i0_offset)
      CALL ccsdt_2pdm_hphp_mo_2(d_t2,k_t2_offset,d_y2,k_y2_offset,d_i0,k
     &_i0_offset)
      CALL ccsdt_2pdm_hphp_mo_3(d_t3,k_t3_offset,d_y3,k_y3_offset,d_i0,k
     &_i0_offset)
      CALL OFFSET_ccsdt_2pdm_hphp_mo_4_1(l_i1_offset,k_i1_offset,size_i1
     &)
      CALL TCE_FILENAME('ccsdt_2pdm_hphp_mo_4_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdt_2pdm_hphp_mo_4_1(d_t1,k_t1_offset,d_y2,k_y2_offset,d_i1
     &,k_i1_offset)
      CALL ccsdt_2pdm_hphp_mo_4_2(d_t2,k_t2_offset,d_y3,k_y3_offset,d_i1
     &,k_i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdt_2pdm_hphp_mo_4(d_t1,k_t1_offset,d_i1,k_i1_offset,d_i0,k
     &_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdt_2pdm_hphp_
     &mo',-1,MA_ERR)
      CALL OFFSET_ccsdt_2pdm_hphp_mo_5_1(l_i1_offset,k_i1_offset,size_i1
     &)
      CALL TCE_FILENAME('ccsdt_2pdm_hphp_mo_5_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ccsdt_2pdm_hphp_mo_5_1(d_t1,k_t1_offset,d_y3,k_y3_offset,d_i1
     &,k_i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ccsdt_2pdm_hphp_mo_5(d_t2,k_t2_offset,d_i1,k_i1_offset,d_i0,k
     &_i0_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ccsdt_2pdm_hphp_
     &mo',-1,MA_ERR)
      RETURN
      END
      SUBROUTINE ccsdt_2pdm_hphp_mo_1(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h4 p1 h2 p3 )_yt + = -1/4 * P( 4 ) * t ( p1 h2 )_t * y ( h4 p3 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER h4b
      INTEGER h2b
      INTEGER p3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b_1
      INTEGER h2b_1
      INTEGER h4b_2
      INTEGER p3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO h4b = 1,noab
      DO h2b = 1,noab
      DO p3b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+p1b-1
     &)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p3b-1).ne.8)) THEN
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+p3b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb(
     &k_sym+h2b-1),int_mb(k_sym+p3b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h4b-1) * int_mb(k_range+p1b-1) * int_mb(k_ra
     &nge+h2b-1) * int_mb(k_range+p3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      IF (int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),int_mb(k_sym+h2b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p1b,h2b,p1b_1,h2b_1)
      CALL TCE_RESTRICTED_2(h4b,p3b,h4b_2,p3b_2)
      dim_common = 1
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h4b-1) * int_mb(k_range+p3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (p1b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+h2b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_1',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - noab - 1 + nvab * (h4b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+p3b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_1',6,
     &MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &1',8,MA_ERR)
      END IF
      END IF
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_1',9,MA_ERR)
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,2,4,3,1,-1.0d0/4.0d0)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
     &,2,4,3,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p3b -
     & noab - 1 + nvab * (h2b - 1 + noab * (p1b - noab - 1 + nvab * (h4b
     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,2,4,1,3,1.0d0/4.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
c     & 1 + noab * (p3b - noab - 1 + nvab * (p1b - noab - 1 + nvab * (h4b
c     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,4,2,3,1,1.0d0/4.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p3b -
c     & noab - 1 + nvab * (h2b - 1 + noab * (h4b - 1 + noab * (p1b - noab
c     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,4,2,1,3,-1.0d0/4.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
c     & 1 + noab * (p3b - noab - 1 + nvab * (h4b - 1 + noab * (p1b - noab
c     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_1',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdt_2pdm_hphp_mo_2(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h4 p1 h2 p3 )_yt + = -1/4 * P( 4 ) * Sum ( h6 p5 ) * t ( p1 p5 h2 h6 )_t * y ( h4 h6 p3 p5 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER h4b
      INTEGER h2b
      INTEGER p3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER h6b
      INTEGER p1b_1
      INTEGER p5b_1
      INTEGER h2b_1
      INTEGER h6b_1
      INTEGER h4b_2
      INTEGER h6b_2
      INTEGER p3b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO h4b = 1,noab
      DO h2b = 1,noab
      DO p3b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+p1b-1
     &)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p3b-1).ne.8)) THEN
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+p3b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb(
     &k_sym+h2b-1),int_mb(k_sym+p3b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h4b-1) * int_mb(k_range+p1b-1) * int_mb(k_ra
     &nge+h2b-1) * int_mb(k_range+p3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO h6b = 1,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h6b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h2b-1),int_mb(k_sym+h6b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p1b,p5b,h2b,h6b,p1b_1,p5b_1,h2b_1,h6b_1)
      CALL TCE_RESTRICTED_4(h4b,h6b,p3b,p5b,h4b_2,h6b_2,p3b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+h6b-1)
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h4b-1) * int_mb(k_range+p3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_2',2,MA_ERR)
      IF ((p5b .lt. p1b) .and. (h6b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (p1b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+h6b-1),int_mb(k_range+h2b-1)
     &,4,2,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p1b) .and. (h2b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (p1b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h6b-1)
     &,3,2,4,1,-1.0d0)
      END IF
      IF ((p1b .le. p5b) .and. (h6b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p1b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h2b-1)
     &,4,1,3,2,-1.0d0)
      END IF
      IF ((p1b .le. p5b) .and. (h2b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h6b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p1b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h6b-1)
     &,3,1,4,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_2',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_2',5,MA_ERR)
      IF ((h6b .lt. h4b) .and. (p5b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab 
     &* (h6b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p3b-1)
     &,4,2,1,3,1.0d0)
      END IF
      IF ((h6b .lt. h4b) .and. (p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p3b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab 
     &* (h6b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+p3b-1),int_mb(k_range+p5b-1)
     &,3,2,1,4,-1.0d0)
      END IF
      IF ((h4b .le. h6b) .and. (p5b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h6b_2 - 1 + noab 
     &* (h4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+p5b-1),int_mb(k_range+p3b-1)
     &,4,1,2,3,-1.0d0)
      END IF
      IF ((h4b .le. h6b) .and. (p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p3b_2 - noab - 1 + nvab * (h6b_2 - 1 + noab 
     &* (h4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+p3b-1),int_mb(k_range+p5b-1)
     &,3,1,2,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_2',6,
     &MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_2',9,MA_ERR)
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,2,4,3,1,-1.0d0/4.0d0)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
     &,2,4,3,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p3b -
     & noab - 1 + nvab * (h2b - 1 + noab * (p1b - noab - 1 + nvab * (h4b
     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,2,4,1,3,1.0d0/4.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
c     & 1 + noab * (p3b - noab - 1 + nvab * (p1b - noab - 1 + nvab * (h4b
c     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,4,2,3,1,1.0d0/4.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p3b -
c     & noab - 1 + nvab * (h2b - 1 + noab * (h4b - 1 + noab * (p1b - noab
c     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,4,2,1,3,-1.0d0/4.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
c     & 1 + noab * (p3b - noab - 1 + nvab * (h4b - 1 + noab * (p1b - noab
c     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_2',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdt_2pdm_hphp_mo_3(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h4 p1 h2 p3 )_yt + = -1/16 * P( 4 ) * Sum ( h7 h8 p5 p6 ) * t ( p1 p5 p6 h2 h7 h8 )_t * y ( h4 h7 h8 p3 p5 p6 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER h4b
      INTEGER h2b
      INTEGER p3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER p1b_1
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h2b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h4b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER p3b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO h4b = 1,noab
      DO h2b = 1,noab
      DO p3b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+p1b-1
     &)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p3b-1).ne.8)) THEN
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+p3b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb(
     &k_sym+h2b-1),int_mb(k_sym+p3b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h4b-1) * int_mb(k_range+p1b-1) * int_mb(k_ra
     &nge+h2b-1) * int_mb(k_range+p3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_3',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h2b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h7b-1),int
     &_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p1b,p5b,p6b,h2b,h7b,h8b,p1b_1,p5b_1,p6b_1,h2
     &b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_6(h4b,h7b,h8b,p3b,p5b,p6b,h4b_2,h7b_2,h8b_2,p3
     &b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h4b-1) * int_mb(k_range+p3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_3',2,MA_ERR)
      IF ((p6b .lt. p1b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p1b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p1b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),6,3,5,4,2,1,1.0d0)
      END IF
      IF ((p6b .lt. p1b) .and. (h7b .lt. h2b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (p1b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p1b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),5,3,6,4,2,1,-1.0d0)
      END IF
      IF ((p6b .lt. p1b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (p1b_1 - noa
     &b - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,3,6,5,2,1,1.0d0)
      END IF
      IF ((p5b .lt. p1b) .and. (p1b .le. p6b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),6,2,5,4,3,1,-1.0d0)
      END IF
      IF ((p5b .lt. p1b) .and. (p1b .le. p6b) .and. (h7b .lt. h2b) .and.
     & (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),5,2,6,4,3,1,1.0d0)
      END IF
      IF ((p5b .lt. p1b) .and. (p1b .le. p6b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,2,6,5,3,1,-1.0d0)
      END IF
      IF ((p1b .le. p5b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),6,1,5,4,3,2,1.0d0)
      END IF
      IF ((p1b .le. p5b) .and. (h7b .lt. h2b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),5,1,6,4,3,2,-1.0d0)
      END IF
      IF ((p1b .le. p5b) .and. (h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (p6b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p1b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),4,1,6,5,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_3',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_3',5,MA_ERR)
      IF ((h8b .lt. h4b) .and. (p6b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),6,3,2,1,5,4,1.0d0)
      END IF
      IF ((h8b .lt. h4b) .and. (p5b .lt. p3b) .and. (p3b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p3b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),5,3,2,1,6,4,-1.0d0)
      END IF
      IF ((h8b .lt. h4b) .and. (p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p3b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h4b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,2,1,6,5,1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (h4b .le. h8b) .and. (p6b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h8b_2 - 1 + noab * (h4b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),6,2,3,1,5,4,-1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (h4b .le. h8b) .and. (p5b .lt. p3b) .and.
     & (p3b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p3b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h8b_2 - 1 + noab * (h4b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),5,2,3,1,6,4,1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (h4b .le. h8b) .and. (p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p3b_2 - noab - 1 
     &+ nvab * (h8b_2 - 1 + noab * (h4b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h8b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,2,3,1,6,5,-1.0d0)
      END IF
      IF ((h4b .le. h7b) .and. (p6b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p3b-1),6,1,3,2,5,4,1.0d0)
      END IF
      IF ((h4b .le. h7b) .and. (p5b .lt. p3b) .and. (p3b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p3b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p6b-1),5,1,3,2,6,4,-1.0d0)
      END IF
      IF ((h4b .le. h7b) .and. (p3b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p3b_2 - noab - 1 
     &+ nvab * (h8b_2 - 1 + noab * (h7b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,1,3,2,6,5,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_3',6,
     &MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,4.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsubh(1))/FACTORIAL(ns
     &ubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_3',9,MA_ERR)
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,2,4,3,1,-1.0d0/16.0d0)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
     &,2,4,3,1,-1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p3b -
     & noab - 1 + nvab * (h2b - 1 + noab * (p1b - noab - 1 + nvab * (h4b
     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,2,4,1,3,1.0d0/16.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
c     & 1 + noab * (p3b - noab - 1 + nvab * (p1b - noab - 1 + nvab * (h4b
c     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,4,2,3,1,1.0d0/16.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p3b -
c     & noab - 1 + nvab * (h2b - 1 + noab * (h4b - 1 + noab * (p1b - noab
c     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,4,2,1,3,-1.0d0/16.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
c     & 1 + noab * (p3b - noab - 1 + nvab * (h4b - 1 + noab * (p1b - noab
c     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_3',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &3',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdt_2pdm_hphp_mo_4(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h2 p1 h4 p3 )_ytt + = 1/2 * P( 2 ) * Sum ( h9 ) * t ( p1 h9 )_t * i1 ( h2 h9 h4 p3 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER h2b
      INTEGER h4b
      INTEGER p3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER p1b_1
      INTEGER h9b_1
      INTEGER h2b_2
      INTEGER h9b_2
      INTEGER h4b_2
      INTEGER p3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO h2b = 1,noab
      DO h4b = 1,noab
      DO p3b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1
     &)+int_mb(k_spin+h4b-1)+int_mb(k_spin+p3b-1).ne.8)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h
     &4b-1)+int_mb(k_spin+p3b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb(
     &k_sym+h4b-1),int_mb(k_sym+p3b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+p1b-1) * int_mb(k_ra
     &nge+h4b-1) * int_mb(k_range+p3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      IF (int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),int_mb(k_sym+h9b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p1b,h9b,p1b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h2b,h9b,h4b,p3b,h2b_2,h9b_2,h4b_2,p3b_2)
      dim_common = int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h4b-1) * int_mb
     &(k_range+p3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_4',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (p1b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+h9b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_4',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_4',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p3b_2
     & - noab - 1 + nvab * (h4b_2 - 1 + noab * (h9b_2 - 1 + noab * (h2b_
     &2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+p3b-1)
     &,4,3,1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_4',6,
     &MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &4',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &4',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_4',9,MA_ERR)
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,3,4,2,1,1.0d0/2.0d0)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
     &,3,4,2,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p3b -
     & noab - 1 + nvab * (h4b - 1 + noab * (p1b - noab - 1 + nvab * (h2b
     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,4,3,2,1,-1.0d0/2.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p3b -
c     & noab - 1 + nvab * (h4b - 1 + noab * (h2b - 1 + noab * (p1b - noab
c     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_4',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &4',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdt_2pdm_hphp_mo_4_1(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h4 h9 h2 p1 )_yt + = 1/2 * P( 2 ) * Sum ( p5 ) * t ( p5 h2 )_t * y ( h4 h9 p1 p5 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h4b
      INTEGER h9b
      INTEGER h2b
      INTEGER p1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p5b_1
      INTEGER h2b_1
      INTEGER h4b_2
      INTEGER h9b_2
      INTEGER p1b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h4b = 1,noab
      DO h9b = 1,noab
      DO h2b = 1,noab
      DO p1b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1).ne.8)) THEN
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h9b-1) .eq. int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+p1b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h2b-1),int_mb(k_sym+p1b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h4b-1) * int_mb(k_range+h9b-1) * int_mb(k_ra
     &nge+h2b-1) * int_mb(k_range+p1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_4_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),int_mb(k_sym+h2b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p5b,h2b,p5b_1,h2b_1)
      CALL TCE_RESTRICTED_4(h4b,h9b,p1b,p5b,h4b_2,h9b_2,p1b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1)
      dima_sort = int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h4b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+p1b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_4_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_4_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (p5b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h2b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_4_1',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_4_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_4_1',5,MA_ERR)
      IF ((h9b .lt. h4b) .and. (p5b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab 
     &* (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p1b-1)
     &,4,1,2,3,1.0d0)
      END IF
      IF ((h9b .lt. h4b) .and. (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab 
     &* (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+p1b-1),int_mb(k_range+p5b-1)
     &,3,1,2,4,-1.0d0)
      END IF
      IF ((h4b .le. h9b) .and. (p5b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab 
     &* (h4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p5b-1),int_mb(k_range+p1b-1)
     &,4,2,1,3,-1.0d0)
      END IF
      IF ((h4b .le. h9b) .and. (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (h9b_2 - 1 + noab 
     &* (h4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p1b-1),int_mb(k_range+p5b-1)
     &,3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_4_1',
     &6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &4_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &4_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_4_1',9,MA_ERR)
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p1b-1)
c     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+h2b-1)
c     &,3,2,4,1,1.0d0/2.0d0)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p1b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+h2b-1)
     &,3,2,4,1,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p1b -
     & noab - 1 + nvab * (h2b - 1 + noab * (h9b - 1 + noab * (h4b - 1)))
     &))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p1b-1)
c     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+h2b-1)
c     &,3,2,1,4,-1.0d0/2.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
c     & 1 + noab * (p1b - noab - 1 + nvab * (h9b - 1 + noab * (h4b - 1)))
c     &))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_4_1',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &4_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdt_2pdm_hphp_mo_4_1(l_a_offset,k_a_offset,siz
     &e)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h4 h9 h2 p1 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h4b
      INTEGER h9b
      INTEGER h2b
      INTEGER p1b
      length = 0
      DO h4b = 1,noab
      DO h9b = 1,noab
      DO h2b = 1,noab
      DO p1b = noab+1,noab+nvab
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h9b-1) .eq. int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+p1b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h2b-1),int_mb(k_sym+p1b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_4_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h4b = 1,noab
      DO h9b = 1,noab
      DO h2b = 1,noab
      DO p1b = noab+1,noab+nvab
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h9b-1) .eq. int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+p1b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h2b-1),int_mb(k_sym+p1b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p1b - noab - 1 + nvab * (h2b - 1 + noab 
     &* (h9b - 1 + noab * (h4b - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h4b-1) * int_mb(k_range+h9b-1) * int_
     &mb(k_range+h2b-1) * int_mb(k_range+p1b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsdt_2pdm_hphp_mo_4_2(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h4 h9 h2 p1 )_yt + = -1/4 * P( 2 ) * Sum ( h7 p5 p6 ) * t ( p5 p6 h2 h7 )_t * y ( h4 h7 h9 p1 p5 p6 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h4b
      INTEGER h9b
      INTEGER h2b
      INTEGER p1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER p6b
      INTEGER h7b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h2b_1
      INTEGER h7b_1
      INTEGER h4b_2
      INTEGER h9b_2
      INTEGER h7b_2
      INTEGER p1b_2
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h4b = 1,noab
      DO h9b = 1,noab
      DO h2b = 1,noab
      DO p1b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1).ne.8)) THEN
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h9b-1) .eq. int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+p1b-1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h2b-1),int_mb(k_sym+p1b-1)))) .eq. ieor(irrep_y,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+h4b-1) * int_mb(k_range+h9b-1) * int_mb(k_ra
     &nge+h2b-1) * int_mb(k_range+p1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_4_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h7b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h7b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h2b-1),int_mb(k_sym+h7b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h2b,h7b,p5b_1,p6b_1,h2b_1,h7b_1)
      CALL TCE_RESTRICTED_6(h4b,h9b,h7b,p1b,p5b,p6b,h4b_2,h9b_2,h7b_2,p1
     &b_2,p5b_2,p6b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h4b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+p1b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_4_2',2,MA_ERR)
      IF ((h7b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((h2b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h7b-1)
     &,3,4,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_4_2',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_4_2',5,MA_ERR)
      IF ((h7b .le. h9b) .and. (h9b .lt. h4b) .and. (p6b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p1b-1),6,2,3,1,5,4,1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (h9b .lt. h4b) .and. (p5b .lt. p1b) .and.
     & (p1b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p6b-1),5,2,3,1,6,4,-1.0d0)
      END IF
      IF ((h7b .le. h9b) .and. (h9b .lt. h4b) .and. (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h9b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,2,3,1,6,5,1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .lt. h4b) .and. (p6b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p1b-1),6,1,3,2,5,4,-1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .lt. h4b) .and. (p5b .lt. p1b) .and.
     & (p1b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p6b-1),5,1,3,2,6,4,1.0d0)
      END IF
      IF ((h9b .lt. h7b) .and. (h7b .lt. h4b) .and. (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h7b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h4b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,1,3,2,6,5,-1.0d0)
      END IF
      IF ((h9b .lt. h4b) .and. (h4b .le. h7b) .and. (p6b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h4b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p1b-1),6,1,2,3,5,4,1.0d0)
      END IF
      IF ((h9b .lt. h4b) .and. (h4b .le. h7b) .and. (p5b .lt. p1b) .and.
     & (p1b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h4b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p6b-1),5,1,2,3,6,4,-1.0d0)
      END IF
      IF ((h9b .lt. h4b) .and. (h4b .le. h7b) .and. (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h4b_2 - 1 + noab * (h9b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h7b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,1,2,3,6,5,1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (h4b .le. h9b) .and. (p6b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h4b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p1b-1),6,3,2,1,5,4,-1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (h4b .le. h9b) .and. (p5b .lt. p1b) .and.
     & (p1b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h4b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p6b-1),5,3,2,1,6,4,1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (h4b .le. h9b) .and. (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h4b_2 - 1 + noab * (h7b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,2,1,6,5,-1.0d0)
      END IF
      IF ((h4b .le. h7b) .and. (h7b .le. h9b) .and. (p6b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h7b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p1b-1),6,3,1,2,5,4,1.0d0)
      END IF
      IF ((h4b .le. h7b) .and. (h7b .le. h9b) .and. (p5b .lt. p1b) .and.
     & (p1b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h7b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p6b-1),5,3,1,2,6,4,-1.0d0)
      END IF
      IF ((h4b .le. h7b) .and. (h7b .le. h9b) .and. (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h9b_2 - 1 + noab * (h7b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h9b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,3,1,2,6,5,1.0d0)
      END IF
      IF ((h4b .le. h9b) .and. (h9b .lt. h7b) .and. (p6b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p6b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h9b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p1b-1),6,2,1,3,5,4,-1.0d0)
      END IF
      IF ((h4b .le. h9b) .and. (h9b .lt. h7b) .and. (p5b .lt. p1b) .and.
     & (p1b .le. p6b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h9b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p6b-1),5,2,1,3,6,4,1.0d0)
      END IF
      IF ((h4b .le. h9b) .and. (h9b .lt. h7b) .and. (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h9b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h7b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),4,2,1,3,6,5,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_4_2',
     &6,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p5b .eq. p6b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &4_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &4_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_4_2',9,MA_ERR)
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p1b-1)
c     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+h2b-1)
c     &,3,2,4,1,-1.0d0/4.0d0)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p1b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+h2b-1)
     &,3,2,4,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p1b -
     & noab - 1 + nvab * (h2b - 1 + noab * (h9b - 1 + noab * (h4b - 1)))
     &))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p1b-1)
c     &,int_mb(k_range+h9b-1),int_mb(k_range+h4b-1),int_mb(k_range+h2b-1)
c     &,3,2,1,4,1.0d0/4.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
c     & 1 + noab * (p1b - noab - 1 + nvab * (h9b - 1 + noab * (h4b - 1)))
c     &))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_4_2',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &4_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdt_2pdm_hphp_mo_5(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h2 p1 h4 p3 )_ytt + = 1/4 * P( 2 ) * Sum ( h6 h7 p5 ) * t ( p1 p5 h6 h7 )_t * i1 ( h2 h6 h7 h4 p3 p5 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p1b
      INTEGER h2b
      INTEGER h4b
      INTEGER p3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p5b
      INTEGER h6b
      INTEGER h7b
      INTEGER p1b_1
      INTEGER p5b_1
      INTEGER h6b_1
      INTEGER h7b_1
      INTEGER h2b_2
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER h4b_2
      INTEGER p3b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p1b = noab+1,noab+nvab
      DO h2b = 1,noab
      DO h4b = 1,noab
      DO p3b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1
     &)+int_mb(k_spin+h4b-1)+int_mb(k_spin+p3b-1).ne.8)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+h
     &4b-1)+int_mb(k_spin+p3b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb(
     &k_sym+h4b-1),int_mb(k_sym+p3b-1)))) .eq. ieor(irrep_y,ieor(irrep_t
     &,irrep_t))) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+p1b-1) * int_mb(k_ra
     &nge+h4b-1) * int_mb(k_range+p3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_5',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p5b = noab+1,noab+nvab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      IF (int_mb(k_spin+p1b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &6b-1)+int_mb(k_spin+h7b-1)) THEN
      IF (ieor(int_mb(k_sym+p1b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h6b-1),int_mb(k_sym+h7b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p1b,p5b,h6b,h7b,p1b_1,p5b_1,h6b_1,h7b_1)
      CALL TCE_RESTRICTED_6(h2b,h6b,h7b,h4b,p3b,p5b,h2b_2,h6b_2,h7b_2,h4
     &b_2,p3b_2,p5b_2)
      dim_common = int_mb(k_range+p5b-1) * int_mb(k_range+h6b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+p1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h4b-1) * int_mb
     &(k_range+p3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_5',2,MA_ERR)
      IF ((p5b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (p1b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1)
     &,2,4,3,1,-1.0d0)
      END IF
      IF ((p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h6b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p1b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h7b-1)
     &,1,4,3,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_5',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_5',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p3b_2 - noab - 1 + nvab * (h4b_2 - 1 + noab 
     &* (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h2b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h4b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p5b-1),5,4,1,3,2,6,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_5',6,
     &MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h6b .eq. h7b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_mb(k
     &_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &5',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &5',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_5',9,MA_ERR)
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,3,4,2,1,1.0d0/4.0d0)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
     &,3,4,2,1,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p3b -
     & noab - 1 + nvab * (h4b - 1 + noab * (p1b - noab - 1 + nvab * (h2b
     & - 1)))))
c      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p3b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),int_mb(k_range+p1b-1)
c     &,4,3,2,1,-1.0d0/4.0d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p3b -
c     & noab - 1 + nvab * (h4b - 1 + noab * (h2b - 1 + noab * (p1b - noab
c     & - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_5',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &5',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsdt_2pdm_hphp_mo_5_1(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h4 h6 h7 h2 p1 p5 )_yt + = -1/2 * P( 2 ) * Sum ( p8 ) * t ( p8 h2 )_t * y ( h4 h6 h7 p1 p5 p8 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h4b
      INTEGER h6b
      INTEGER h7b
      INTEGER h2b
      INTEGER p1b
      INTEGER p5b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h2b_1
      INTEGER h4b_2
      INTEGER h6b_2
      INTEGER h7b_2
      INTEGER p1b_2
      INTEGER p5b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h4b = 1,noab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h2b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO p5b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h6b-1
     &)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1)+i
     &nt_mb(k_spin+p5b-1).ne.12)) THEN
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)
     & .eq. int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p5b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h6b-1),ieor(int_mb(
     &k_sym+h7b-1),ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p1b-1),int
     &_mb(k_sym+p5b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      dimc = int_mb(k_range+h4b-1) * int_mb(k_range+h6b-1) * int_mb(k_ra
     &nge+h7b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+p1b-1) * int_m
     &b(k_range+p5b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_5_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h2b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h2b,p8b_1,h2b_1)
      CALL TCE_RESTRICTED_6(h4b,h6b,h7b,p1b,p5b,p8b,h4b_2,h6b_2,h7b_2,p1
     &b_2,p5b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h4b-1) * int_mb(k_range+h6b-1) * int_mb
     &(k_range+h7b-1) * int_mb(k_range+p1b-1) * int_mb(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_5_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h2b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_5_1',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdt_2pdm_hphp_mo_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_5_1',5,MA_ERR)
      IF ((h7b .lt. h4b) .and. (p8b .lt. p5b) .and. (p5b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h4b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p1b-1),5,6,2,1,3,4,-1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (p5b .le. p8b) .and. (p8b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p1b-1),4,6,2,1,3,5,1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (p5b .lt. p1b) .and. (p1b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p8b-1),4,5,2,1,3,6,-1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (p8b .lt. p1b) .and. (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h4b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p5b-1),6,5,2,1,3,4,1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (p1b .le. p8b) .and. (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h4b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),6,4,2,1,3,5,-1.0d0)
      END IF
      IF ((h7b .lt. h4b) .and. (p1b .le. p5b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h4b_2 - 1 + noab * (h7b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h4b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),5,4,2,1,3,6,1.0d0)
      END IF
      IF ((h6b .lt. h4b) .and. (h4b .le. h7b) .and. (p8b .lt. p5b) .and.
     & (p5b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h4b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p1b-1),5,6,3,1,2,4,1.0d0)
      END IF
      IF ((h6b .lt. h4b) .and. (h4b .le. h7b) .and. (p5b .le. p8b) .and.
     & (p8b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h4b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p1b-1),4,6,3,1,2,5,-1.0d0)
      END IF
      IF ((h6b .lt. h4b) .and. (h4b .le. h7b) .and. (p5b .lt. p1b) .and.
     & (p1b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h4b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p8b-1),4,5,3,1,2,6,1.0d0)
      END IF
      IF ((h6b .lt. h4b) .and. (h4b .le. h7b) .and. (p8b .lt. p1b) .and.
     & (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h4b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p5b-1),6,5,3,1,2,4,-1.0d0)
      END IF
      IF ((h6b .lt. h4b) .and. (h4b .le. h7b) .and. (p1b .le. p8b) .and.
     & (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h4b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h7b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),6,4,3,1,2,5,1.0d0)
      END IF
      IF ((h6b .lt. h4b) .and. (h4b .le. h7b) .and. (p1b .le. p5b) .and.
     & (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h4b_2 - 1 + noab * (h6b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h7b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),5,4,3,1,2,6,-1.0d0)
      END IF
      IF ((h4b .le. h6b) .and. (p8b .lt. p5b) .and. (p5b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p1b-1),5,6,3,2,1,4,-1.0d0)
      END IF
      IF ((h4b .le. h6b) .and. (p5b .le. p8b) .and. (p8b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p1b-1),4,6,3,2,1,5,1.0d0)
      END IF
      IF ((h4b .le. h6b) .and. (p5b .lt. p1b) .and. (p1b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p5b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p8b-1),4,5,3,2,1,6,-1.0d0)
      END IF
      IF ((h4b .le. h6b) .and. (p8b .lt. p1b) .and. (p1b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p1b_2 - noab - 1 + nvab * (p8b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+p5b-1),6,5,3,2,1,4,1.0d0)
      END IF
      IF ((h4b .le. h6b) .and. (p1b .le. p8b) .and. (p8b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p5b-1),6,4,3,2,1,5,-1.0d0)
      END IF
      IF ((h4b .le. h6b) .and. (p1b .le. p5b) .and. (p5b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p1b_2 - noab - 1 
     &+ nvab * (h7b_2 - 1 + noab * (h6b_2 - 1 + noab * (h4b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h7b-1),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),5,4,3,2,1,6,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_5_1',
     &6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &5_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &5_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdt_2pdm_hphp_mo_5_1',9,MA_ERR)
c      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
c     &,int_mb(k_range+p1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h6b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),5,4,3,6,2,1,-1.0d0/2.
c     &0d0)
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h6b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),5,4,3,6,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p5b -
     & noab - 1 + nvab * (p1b - noab - 1 + nvab * (h2b - 1 + noab * (h7b
     & - 1 + noab * (h6b - 1 + noab * (h4b - 1)))))))
c      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
c     &,int_mb(k_range+p1b-1),int_mb(k_range+h7b-1),int_mb(k_range+h6b-1)
c     &,int_mb(k_range+h4b-1),int_mb(k_range+h2b-1),5,4,3,2,6,1,1.0d0/2.0
c     &d0)
c      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p5b -
c     & noab - 1 + nvab * (h2b - 1 + noab * (p1b - noab - 1 + nvab * (h7b
c     & - 1 + noab * (h6b - 1 + noab * (h4b - 1)))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_5_1',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_
     &5_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsdt_2pdm_hphp_mo_5_1(l_a_offset,k_a_offset,siz
     &e)
C     $Id: ccsdt_2pdm_hphp_mo.F 19706 2010-10-29 17:52:31Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h4 h6 h7 h2 p1 p5 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h4b
      INTEGER h6b
      INTEGER h7b
      INTEGER h2b
      INTEGER p1b
      INTEGER p5b
      length = 0
      DO h4b = 1,noab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h2b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)
     & .eq. int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p5b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h6b-1),ieor(int_mb(
     &k_sym+h7b-1),ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p1b-1),int
     &_mb(k_sym+p5b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h6b-1
     &)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1)+i
     &nt_mb(k_spin+p5b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsdt_2pdm_hphp_mo_5_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h4b = 1,noab
      DO h6b = 1,noab
      DO h7b = h6b,noab
      DO h2b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO p5b = noab+1,noab+nvab
      IF (int_mb(k_spin+h4b-1)+int_mb(k_spin+h6b-1)+int_mb(k_spin+h7b-1)
     & .eq. int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p5b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h4b-1),ieor(int_mb(k_sym+h6b-1),ieor(int_mb(
     &k_sym+h7b-1),ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p1b-1),int
     &_mb(k_sym+p5b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h4b-1)+int_mb(k_spin+h6b-1
     &)+int_mb(k_spin+h7b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1)+i
     &nt_mb(k_spin+p5b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p5b - noab - 1 + nvab * (p1b - noab - 1 
     &+ nvab * (h2b - 1 + noab * (h7b - 1 + noab * (h6b - 1 + noab * (h4
     &b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h4b-1) * int_mb(k_range+h6b-1) * int_
     &mb(k_range+h7b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+p1b-1) 
     &* int_mb(k_range+p5b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END

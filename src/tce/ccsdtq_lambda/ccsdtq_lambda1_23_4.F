      SUBROUTINE ccsdtq_lambda1_23_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     $Id: ccsdtq_lambda1_23_4.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p13 p14 h16 p1 )_yttt + = -5/3 * Sum ( h12 ) * t ( p14 h12 )_t * i2 ( h12 p13 h16 p1 )_ytt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p14b
      INTEGER p13b
      INTEGER p1b
      INTEGER h16b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h12b
      INTEGER p14b_1
      INTEGER h12b_1
      INTEGER p13b_2
      INTEGER h12b_2
      INTEGER p1b_2
      INTEGER h16b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTASK
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO p14b = noab+1,noab+nvab
      DO p13b = noab+1,noab+nvab
      DO p1b = noab+1,noab+nvab
      DO h16b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b
     &-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+h16b-1).ne.8)) THEN
      IF (int_mb(k_spin+p13b-1)+int_mb(k_spin+p14b-1) .eq. int_mb(k_spin
     &+p1b-1)+int_mb(k_spin+h16b-1)) THEN
      IF (ieor(int_mb(k_sym+p13b-1),ieor(int_mb(k_sym+p14b-1),ieor(int_m
     &b(k_sym+p1b-1),int_mb(k_sym+h16b-1)))) .eq. ieor(irrep_y,ieor(irre
     &p_t,ieor(irrep_t,irrep_t)))) THEN
      dimc = int_mb(k_range+p13b-1) * int_mb(k_range+p14b-1) * int_mb(k_
     &range+p1b-1) * int_mb(k_range+h16b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_23_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h12b = 1,noab
      IF (int_mb(k_spin+p14b-1) .eq. int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p14b-1),int_mb(k_sym+h12b-1)) .eq. irrep_t) 
     &THEN
      CALL TCE_RESTRICTED_2(p14b,h12b,p14b_1,h12b_1)
      CALL TCE_RESTRICTED_4(p13b,h12b,p1b,h16b,p13b_2,h12b_2,p1b_2,h16b_
     &2)
      dim_common = int_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p14b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p13b-1) * int_mb(k_range+p1b-1) * int_m
     &b(k_range+h16b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_23_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda1_23_4',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (p14b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+h12b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda1_23_4',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_23_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda1_23_4',5,MA_ERR)
      IF ((h12b .le. p13b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h16b_
     &2 - 1 + noab * (p1b_2 - noab - 1 + nvab * (p13b_2 - noab - 1 + nva
     &b * (h12b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+p13b-1),int_mb(k_range+p1b-1),int_mb(k_range+h16b
     &-1),4,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda1_23_4',6,M
     &A_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda1_23_4
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda1_23_4
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_lambda1_23_4',9,MA_ERR)
      IF ((p13b .le. p14b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h16b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+p13b-1),int_mb(k_range+p14b
     &-1),3,4,2,1,-5.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h16b 
     &- 1 + noab * (p1b - noab - 1 + nvab * (p14b - noab - 1 + nvab * (p
     &13b - noab - 1)))))
      END IF
      IF ((p14b .le. p13b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h16b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+p13b-1),int_mb(k_range+p14b
     &-1),4,3,2,1,5.0d0/6.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h16b 
     &- 1 + noab * (p1b - noab - 1 + nvab * (p13b - noab - 1 + nvab * (p
     &14b - noab - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda1_23_4',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda1_23_4
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

      SUBROUTINE ccsdtq_lambda2_11_7(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     $Id: ccsdtq_lambda2_11_7.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h3 p13 h11 h14 )_vt + = 1/2 * Sum ( h10 p6 p7 ) * t ( p6 p7 p13 h10 h11 h14 )_t * v ( h3 h10 p6 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h3b
      INTEGER p13b
      INTEGER h11b
      INTEGER h14b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER p7b
      INTEGER h10b
      INTEGER p13b_1
      INTEGER p6b_1
      INTEGER p7b_1
      INTEGER h11b_1
      INTEGER h14b_1
      INTEGER h10b_1
      INTEGER h3b_2
      INTEGER h10b_2
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTASK
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO h3b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h14b = h11b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+p13b-
     &1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h14b-1).ne.8)) THEN
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+p13b-1) .eq. int_mb(k_spin+
     &h11b-1)+int_mb(k_spin+h14b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+p13b-1),ieor(int_mb
     &(k_sym+h11b-1),int_mb(k_sym+h14b-1)))) .eq. ieor(irrep_v,irrep_t))
     & THEN
      dimc = int_mb(k_range+h3b-1) * int_mb(k_range+p13b-1) * int_mb(k_r
     &ange+h11b-1) * int_mb(k_range+h14b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_11_7',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_spin+p13b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1
     &) .eq. int_mb(k_spin+h11b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h
     &10b-1)) THEN
      IF (ieor(int_mb(k_sym+p13b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb
     &(k_sym+p7b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h14b-1),
     &int_mb(k_sym+h10b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p13b,p6b,p7b,h11b,h14b,h10b,p13b_1,p6b_1,p7b
     &_1,h11b_1,h14b_1,h10b_1)
      CALL TCE_RESTRICTED_4(h3b,h10b,p6b,p7b,h3b_2,h10b_2,p6b_2,p7b_2)
      dim_common = int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_m
     &b(k_range+h10b-1)
      dima_sort = int_mb(k_range+p13b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h14b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_11_7',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda2_11_7',2,MA_ERR)
      IF ((p7b .le. p13b) .and. (h10b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (p13b_1 -
     & noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p13b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h11b-1),int_mb(k_range+h14b-1),6,5,3,4,2,1,1.0d0
     &)
      END IF
      IF ((p7b .le. p13b) .and. (h11b .lt. h10b) .and. (h10b .le. h14b))
     & THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h11b_1 - 1 + noab * (p13b_1 -
     & noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p13b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h10b-1),int_mb(k_range+h14b-1),6,4,3,5,2,1,-1.0d
     &0)
      END IF
      IF ((p7b .le. p13b) .and. (h14b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (h11b_1 - 1 + noab * (p13b_1 -
     & noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p13b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h14b-1),int_mb(k_range+h10b-1),5,4,3,6,2,1,1.0d0
     &)
      END IF
      IF ((p6b .le. p13b) .and. (p13b .lt. p7b) .and. (h10b .le. h11b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (p7b_1 - 
     &noab - 1 + nvab * (p13b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+p7b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h11b-1),int_mb(k_range+h14b-1),6,5,2,4,3,1,-1.0d
     &0)
      END IF
      IF ((p6b .le. p13b) .and. (p13b .lt. p7b) .and. (h11b .lt. h10b) .
     &and. (h10b .le. h14b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h11b_1 - 1 + noab * (p7b_1 - 
     &noab - 1 + nvab * (p13b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+p7b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h10b-1),int_mb(k_range+h14b-1),6,4,2,5,3,1,1.0d0
     &)
      END IF
      IF ((p6b .le. p13b) .and. (p13b .lt. p7b) .and. (h14b .lt. h10b)) 
     &THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (h11b_1 - 1 + noab * (p7b_1 - 
     &noab - 1 + nvab * (p13b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p13b-1),int_mb(k_range+p7b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h14b-1),int_mb(k_range+h10b-1),5,4,2,6,3,1,-1.0d
     &0)
      END IF
      IF ((p13b .lt. p6b) .and. (h10b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h10b_1 - 1 + noab * (p7b_1 - 
     &noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p13b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h11b-1),int_mb(k_range+h14b-1),6,5,1,4,3,2,1.0d0
     &)
      END IF
      IF ((p13b .lt. p6b) .and. (h11b .lt. h10b) .and. (h10b .le. h14b))
     & THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h14b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h11b_1 - 1 + noab * (p7b_1 - 
     &noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p13b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h10b-1),int_mb(k_range+h14b-1),6,4,1,5,3,2,-1.0d
     &0)
      END IF
      IF ((p13b .lt. p6b) .and. (h14b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (h11b_1 - 1 + noab * (p7b_1 - 
     &noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p13b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p13b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1),int_mb(k_range+h11b-
     &1),int_mb(k_range+h14b-1),int_mb(k_range+h10b-1),5,4,1,6,3,2,1.0d0
     &)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda2_11_7',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda2_11_7',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda2_11_7',5,MA_ERR)
      IF ((h10b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p6b_2 - 1 + (noab+nvab) * (h3b_2 - 1 + (noab
     &+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),2,1,4,3,-1.0d0)
      END IF
      IF ((h3b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p6b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h3b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p6b-1),int_mb(k_range+p7b-1
     &),1,2,4,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda2_11_7',6,M
     &A_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p6b .eq. p7b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda2_11_7
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda2_11_7
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_lambda2_11_7',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h14b-1),int_mb(k_range+h11b-1),int_mb(k_range+p13b
     &-1),1,4,3,2,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h14b 
     &- 1 + noab * (h11b - 1 + noab * (p13b - noab - 1 + nvab * (h3b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda2_11_7',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda2_11_7
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

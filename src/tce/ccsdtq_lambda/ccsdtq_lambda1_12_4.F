      SUBROUTINE ccsdtq_lambda1_12_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     $Id: ccsdtq_lambda1_12_4.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p11 p12 )_yt + = 1/144 * Sum ( h10 h9 h8 h7 p5 p4 p3 ) * t ( p3 p4 p5 p11 h7 h8 h9 h10 )_t * y ( h7 h8 h9 h10 p3 p4 p5 p12 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p11b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p3b
      INTEGER p4b
      INTEGER p5b
      INTEGER h7b
      INTEGER h8b
      INTEGER h9b
      INTEGER h10b
      INTEGER p11b_1
      INTEGER p3b_1
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p12b_2
      INTEGER p3b_2
      INTEGER p4b_2
      INTEGER p5b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(3)
      INTEGER isuperp
      INTEGER nsubh(4)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTASK
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO p11b = noab+1,noab+nvab
      DO p12b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p11b-1)+int_mb(k_spin+p12b
     &-1).ne.4)) THEN
      IF (int_mb(k_spin+p11b-1) .eq. int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+p11b-1),int_mb(k_sym+p12b-1)) .eq. ieor(irre
     &p_y,irrep_t)) THEN
      dimc = int_mb(k_range+p11b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_12_4',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p3b = noab+1,noab+nvab
      DO p4b = p3b,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h9b = h8b,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p11b-1)+int_mb(k_spin+p3b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b
     &-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p11b-1),ieor(int_mb(k_sym+p3b-1),ieor(int_mb
     &(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+h7b-1),ie
     &or(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h9b-1),int_mb(k_sym+h10b-
     &1)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p11b,p3b,p4b,p5b,h7b,h8b,h9b,h10b,p11b_1,p3b
     &_1,p4b_1,p5b_1,h7b_1,h8b_1,h9b_1,h10b_1)
      CALL TCE_RESTRICTED_8(h7b,h8b,h9b,h10b,p12b,p3b,p4b,p5b,h7b_2,h8b_
     &2,h9b_2,h10b_2,p12b_2,p3b_2,p4b_2,p5b_2)
      dim_common = int_mb(k_range+p3b-1) * int_mb(k_range+p4b-1) * int_m
     &b(k_range+p5b-1) * int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) *
     & int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p11b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_12_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda1_12_4',2,MA_ERR)
      IF ((p5b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 
     &+ noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p
     &4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p11b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h10b-1),4,8,7,6,5,3,2,1,1.0d0)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p
     &4b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p11b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h10b-1),3,8,7,6,5,4,2,1,-1.0d0)
      END IF
      IF ((p3b .le. p11b) .and. (p11b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &1b_1 - noab - 1 + nvab * (p3b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p3b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h10b-1),2,8,7,6,5,4,3,1,1.0d0)
      END IF
      IF ((p11b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (h7b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p3
     &b_1 - noab - 1 + nvab * (p11b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h10b-1),1,8,7,6,5,4,3,2,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda1_12_4',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_12_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda1_12_4',5,MA_ERR)
      IF ((p5b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1 + nvab * (p4b_2 - noab - 1
     & + nvab * (p3b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1
     &),int_mb(k_range+p12b-1),8,4,3,2,1,7,6,5,1.0d0)
      END IF
      IF ((p4b .le. p12b) .and. (p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (p4b_2 - noab - 1
     & + nvab * (p3b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p4b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+p5b-1),7,4,3,2,1,8,6,5,-1.0d0)
      END IF
      IF ((p3b .le. p12b) .and. (p12b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p4b_2 - noab - 1 + nvab * (p12b_2 - noab - 1
     & + nvab * (p3b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p3b-1),int_mb(k_range+p12b-1),int_mb(k_range+p4b-
     &1),int_mb(k_range+p5b-1),6,4,3,2,1,8,7,5,1.0d0)
      END IF
      IF ((p12b .lt. p3b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p5b_2
     & - noab - 1 + nvab * (p4b_2 - noab - 1 + nvab * (p3b_2 - noab - 1 
     &+ nvab * (p12b_2 - noab - 1 + nvab * (h10b_2 - 1 + noab * (h9b_2 -
     & 1 + noab * (h8b_2 - 1 + noab * (h7b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+p3b-1),int_mb(k_range+p4b-
     &1),int_mb(k_range+p5b-1),5,4,3,2,1,8,7,6,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda1_12_4',6,M
     &A_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      nsuperp(3) = 1
      isuperp = 1
      IF (p3b .eq. p4b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      IF (p4b .eq. p5b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      nsubh(1) = 1
      nsubh(2) = 1
      nsubh(3) = 1
      nsubh(4) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,144.0d0/FACTORIA
     &L(nsuperp(1))/FACTORIAL(nsuperp(2))/FACTORIAL(nsuperp(3))/FACTORIA
     &L(nsubh(1))/FACTORIAL(nsubh(2))/FACTORIAL(nsubh(3))/FACTORIAL(nsub
     &h(4)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d
     &0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda1_12_4
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda1_12_4
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_lambda1_12_4',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p11b-1),2,1,1.0d0/144.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p11b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda1_12_4',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda1_12_4
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

      SUBROUTINE ccsdtq_lambda1_21_6_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     $Id: ccsdtq_lambda1_21_6_1.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h2 p15 p19 h16 h17 p4 )_vt + = 1 * Sum ( p8 ) * t ( p8 p15 h16 h17 )_t * i3 ( h2 p19 p4 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER p15b
      INTEGER p19b
      INTEGER h16b
      INTEGER h17b
      INTEGER p4b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p15b_1
      INTEGER p8b_1
      INTEGER h16b_1
      INTEGER h17b_1
      INTEGER h2b_2
      INTEGER p19b_2
      INTEGER p4b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTASK
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO h2b = 1,noab
      DO p15b = noab+1,noab+nvab
      DO p19b = noab+1,noab+nvab
      DO h16b = 1,noab
      DO h17b = h16b,noab
      DO p4b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p15b-
     &1)+int_mb(k_spin+p19b-1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-
     &1)+int_mb(k_spin+p4b-1).ne.12)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p19b-
     &1) .eq. int_mb(k_spin+h16b-1)+int_mb(k_spin+h17b-1)+int_mb(k_spin+
     &p4b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p15b-1),ieor(int_mb
     &(k_sym+p19b-1),ieor(int_mb(k_sym+h16b-1),ieor(int_mb(k_sym+h17b-1)
     &,int_mb(k_sym+p4b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+p15b-1) * int_mb(k_r
     &ange+p19b-1) * int_mb(k_range+h16b-1) * int_mb(k_range+h17b-1) * i
     &nt_mb(k_range+p4b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_21_6_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p15b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+
     &h16b-1)+int_mb(k_spin+h17b-1)) THEN
      IF (ieor(int_mb(k_sym+p15b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb
     &(k_sym+h16b-1),int_mb(k_sym+h17b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p15b,p8b,h16b,h17b,p15b_1,p8b_1,h16b_1,h17b_
     &1)
      CALL TCE_RESTRICTED_4(h2b,p19b,p4b,p8b,h2b_2,p19b_2,p4b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+p15b-1) * int_mb(k_range+h16b-1) * int_
     &mb(k_range+h17b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+p19b-1) * int_m
     &b(k_range+p4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_21_6_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda1_21_6_1',2,MA_ERR)
      IF ((p8b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h17b_
     &1 - 1 + noab * (h16b_1 - 1 + noab * (p15b_1 - noab - 1 + nvab * (p
     &8b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p15b-1),int_mb(k_range+h16b-1),int_mb(k_range+h17b
     &-1),4,3,2,1,1.0d0)
      END IF
      IF ((p15b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h17b_
     &1 - 1 + noab * (h16b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p1
     &5b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p15b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+h16b-1),int_mb(k_range+h17b
     &-1),4,3,1,2,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda1_21_6_1',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_21_6_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda1_21_6_1',5,MA_ERR)
      IF ((p8b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p4b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p19b_2 - noab - 1
     & + nvab * (h2b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p19b-1),int_mb(k_range+p8b-1),int_mb(k_range+p4b-1
     &),4,2,1,3,-1.0d0)
      END IF
      IF ((p4b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p4b_2 - noab - 1 + nvab * (p19b_2 - noab - 1
     & + nvab * (h2b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p19b-1),int_mb(k_range+p4b-1),int_mb(k_range+p8b-1
     &),3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda1_21_6_1',6
     &,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda1_21_6
     &_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda1_21_6
     &_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_lambda1_21_6_1',9,MA_ERR)
      IF ((p15b .le. p19b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p19b-1),int_mb(k_range+h2b-1),int_mb(k_range+h17b-
     &1),int_mb(k_range+h16b-1),int_mb(k_range+p15b-1),3,6,2,5,4,1,1.0d0
     &/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p4b -
     & noab - 1 + nvab * (h17b - 1 + noab * (h16b - 1 + noab * (p19b - n
     &oab - 1 + nvab * (p15b - noab - 1 + nvab * (h2b - 1)))))))
      END IF
      IF ((p19b .le. p15b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p19b-1),int_mb(k_range+h2b-1),int_mb(k_range+h17b-
     &1),int_mb(k_range+h16b-1),int_mb(k_range+p15b-1),3,2,6,5,4,1,-1.0d
     &0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p4b -
     & noab - 1 + nvab * (h17b - 1 + noab * (h16b - 1 + noab * (p15b - n
     &oab - 1 + nvab * (p19b - noab - 1 + nvab * (h2b - 1)))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda1_21_6_1',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda1_21_6
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

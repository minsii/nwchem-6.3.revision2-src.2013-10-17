      SUBROUTINE ccsdtq_lambda1_16_5_2_2(d_a,k_a_offset,d_c,k_c_offset)
C     $Id: ccsdtq_lambda1_16_5_2_2.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h2 h5 h6 h9 p3 p7 p8 p11 )_y + = 4/5 * y ( h2 h5 h6 h9 p3 p7 p8 p11 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER h5b
      INTEGER h6b
      INTEGER h9b
      INTEGER p3b
      INTEGER p7b
      INTEGER p8b
      INTEGER p11b
      INTEGER dimc
      INTEGER h2b_1
      INTEGER h5b_1
      INTEGER h6b_1
      INTEGER h9b_1
      INTEGER p3b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER p11b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTASK
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO h2b = 1,noab
      DO h5b = 1,noab
      DO h6b = h5b,noab
      DO h9b = h6b,noab
      DO p3b = noab+1,noab+nvab
      DO p7b = p3b,noab+nvab
      DO p8b = p7b,noab+nvab
      DO p11b = p8b,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+h5b-1
     &)+int_mb(k_spin+h6b-1)+int_mb(k_spin+h9b-1)+int_mb(k_spin+p3b-1)+i
     &nt_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p11b-1).ne.
     &16)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+h5b-1)+int_mb(k_spin+h6b-1)
     &+int_mb(k_spin+h9b-1) .eq. int_mb(k_spin+p3b-1)+int_mb(k_spin+p7b-
     &1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h5b-1),ieor(int_mb(
     &k_sym+h6b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+p3b-1),ieo
     &r(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+p11b-1
     &)))))))) .eq. irrep_y) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+h5b-1) * int_mb(k_ra
     &nge+h6b-1) * int_mb(k_range+h9b-1) * int_mb(k_range+p3b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p11b-1)
      CALL TCE_RESTRICTED_8(h2b,h5b,h6b,h9b,p3b,p7b,p8b,p11b,h2b_1,h5b_1
     &,h6b_1,h9b_1,p3b_1,p7b_1,p8b_1,p11b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h5b-1) * int_mb
     &(k_range+h6b-1) * int_mb(k_range+h9b-1) * int_mb(k_range+p3b-1) * 
     &int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+p11
     &b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_16_5_2_2',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda1_16_5_2_2',1,MA_ERR)
      IF ((h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p11b_
     &1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1
     & + nvab * (p3b_1 - noab - 1 + nvab * (h2b_1 - 1 + noab * (h9b_1 - 
     &1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p11b-1),8,7,6,5,3,2,1,4,-1.0d0)
      END IF
      IF ((h6b .lt. h2b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p11b_
     &1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1
     & + nvab * (p3b_1 - noab - 1 + nvab * (h9b_1 - 1 + noab * (h2b_1 - 
     &1 + noab * (h6b_1 - 1 + noab * (h5b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p11b-1),8,7,6,5,4,2,1,3,1.0d0)
      END IF
      IF ((h5b .lt. h2b) .and. (h2b .le. h6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p11b_
     &1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1
     & + nvab * (p3b_1 - noab - 1 + nvab * (h9b_1 - 1 + noab * (h6b_1 - 
     &1 + noab * (h2b_1 - 1 + noab * (h5b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h5b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h6b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p11b-1),8,7,6,5,4,3,1,2,-1.0d0)
      END IF
      IF ((h2b .le. h5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p11b_
     &1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1
     & + nvab * (p3b_1 - noab - 1 + nvab * (h9b_1 - 1 + noab * (h6b_1 - 
     &1 + noab * (h5b_1 - 1 + noab * (h2b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h5b-1),int_mb(k_range+h6b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p3b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p11b-1),8,7,6,5,4,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda1_16_5_2_2'
     &,2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_lambda1_16_5_2_2',3,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_mb(k_range+p3b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h6b-1),int_mb(k_range+h5b-1
     &),int_mb(k_range+h2b-1),8,7,6,5,4,3,2,1,4.0d0/5.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (p8b - noab - 1 + nvab * (p7b - noab - 1 + nva
     &b * (p3b - noab - 1 + nvab * (h9b - 1 + noab * (h6b - 1 + noab * (
     &h5b - 1 + noab * (h2b - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda1_16_5_2_2'
     &,4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda1_16_5
     &_2_2',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

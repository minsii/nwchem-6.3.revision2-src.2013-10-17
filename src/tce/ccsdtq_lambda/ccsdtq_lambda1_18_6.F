      SUBROUTINE ccsdtq_lambda1_18_6(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     $Id: ccsdtq_lambda1_18_6.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h2 p11 p14 h12 h13 h15 )_vtt + = -1/6 * Sum ( h10 ) * t ( p11 h10 )_t * i2 ( h2 h10 p14 h12 h13 h15 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER p11b
      INTEGER p14b
      INTEGER h12b
      INTEGER h13b
      INTEGER h15b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h10b
      INTEGER p11b_1
      INTEGER h10b_1
      INTEGER h2b_2
      INTEGER p14b_2
      INTEGER h10b_2
      INTEGER h12b_2
      INTEGER h13b_2
      INTEGER h15b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTASK
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO h2b = 1,noab
      DO p11b = noab+1,noab+nvab
      DO p14b = noab+1,noab+nvab
      DO h12b = 1,noab
      DO h13b = h12b,noab
      DO h15b = h13b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p11b-
     &1)+int_mb(k_spin+p14b-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-
     &1)+int_mb(k_spin+h15b-1).ne.12)) THEN
      IF (int_mb(k_spin+h2b-1)+int_mb(k_spin+p11b-1)+int_mb(k_spin+p14b-
     &1) .eq. int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+
     &h15b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+p11b-1),ieor(int_mb
     &(k_sym+p14b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1)
     &,int_mb(k_sym+h15b-1)))))) .eq. ieor(irrep_v,ieor(irrep_t,irrep_t)
     &)) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+p11b-1) * int_mb(k_r
     &ange+p14b-1) * int_mb(k_range+h12b-1) * int_mb(k_range+h13b-1) * i
     &nt_mb(k_range+h15b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_18_6',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h10b = 1,noab
      IF (int_mb(k_spin+p11b-1) .eq. int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p11b-1),int_mb(k_sym+h10b-1)) .eq. irrep_t) 
     &THEN
      CALL TCE_RESTRICTED_2(p11b,h10b,p11b_1,h10b_1)
      CALL TCE_RESTRICTED_6(h2b,p14b,h10b,h12b,h13b,h15b,h2b_2,p14b_2,h1
     &0b_2,h12b_2,h13b_2,h15b_2)
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p11b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+p14b-1) * int_m
     &b(k_range+h12b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+h15b-1
     &)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_18_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_lambda1_18_6',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (p11b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+h10b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_lambda1_18_6',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_lambda1_18_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_lambda1_18_6',5,MA_ERR)
      IF ((h10b .le. p14b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h15b_
     &2 - 1 + noab * (h13b_2 - 1 + noab * (h12b_2 - 1 + noab * (p14b_2 -
     & noab - 1 + nvab * (h10b_2 - 1 + noab * (h2b_2 - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p14b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h13b-1),int_mb(k_range+h15b-1),6,5,4,3,1,2,1.0d
     &0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_lambda1_18_6',6,M
     &A_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_lambda1_18_6
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_lambda1_18_6
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_lambda1_18_6',9,MA_ERR)
      IF ((p11b .le. p14b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+h2b-1),int_mb(k_range+p11b-1),5,6,4,3,2,1,-1.0
     &d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h15b 
     &- 1 + noab * (h13b - 1 + noab * (h12b - 1 + noab * (p14b - noab - 
     &1 + nvab * (p11b - noab - 1 + nvab * (h2b - 1)))))))
      END IF
      IF ((p14b .le. p11b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h15b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+h12b-1),int_mb(k_range+p14
     &b-1),int_mb(k_range+h2b-1),int_mb(k_range+p11b-1),5,4,6,3,2,1,1.0d
     &0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h15b 
     &- 1 + noab * (h13b - 1 + noab * (h12b - 1 + noab * (p11b - noab - 
     &1 + nvab * (p14b - noab - 1 + nvab * (h2b - 1)))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_lambda1_18_6',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_lambda1_18_6
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

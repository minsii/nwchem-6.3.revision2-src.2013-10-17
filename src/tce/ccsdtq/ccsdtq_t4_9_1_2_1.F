      SUBROUTINE ccsdtq_t4_9_1_2_1(d_a,k_a_offset,d_c,k_c_offset)
C     $Id: ccsdtq_t4_9_1_2_1.F 19699 2010-10-29 17:07:13Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i3 ( h10 h14 h1 p11 )_v + = 1 * v ( h10 h14 h1 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h14b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER h10b_1
      INTEGER h14b_1
      INTEGER h1b_1
      INTEGER p11b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h14b = h10b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p11b-1)
      CALL TCE_RESTRICTED_4(h10b,h14b,h1b,p11b,h10b_1,h14b_1,h1b_1,p11b_
     &1)
      dim_common = 1
      dima_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p11b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_t4_9_1_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_t4_9_1_2_1',1,MA_ERR)
      IF ((h1b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p11b_
     &1 - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (h14b_1 - 1 + (no
     &ab+nvab) * (h10b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h1b-1),int_mb(k_range+p11b
     &-1),4,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_t4_9_1_2_1',2,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_t4_9_1_2_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h14b-1),int_mb(k_range+h10b
     &-1),4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h14b - 1 + noab * (h10b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_t4_9_1_2_1',4,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_t4_9_1_2_1',
     &5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

      SUBROUTINE ccsdtq_t4_8_5_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_o
     &ffset)
C     $Id: ccsdtq_t4_8_5_1.F 19699 2010-10-29 17:07:13Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h10 h13 p5 p6 h1 h2 h3 h4 )_vt + = -1 * Sum ( p11 p12 ) * t ( p5 p6 p11 p12 h1 h2 h3 h4 )_t * v ( h10 h13 p11 p12 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p5b
      INTEGER p6b
      INTEGER h10b
      INTEGER h13b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER h4b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p11b
      INTEGER p12b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER p11b_1
      INTEGER p12b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER h4b_1
      INTEGER h10b_2
      INTEGER h13b_2
      INTEGER p11b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTVAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h10b = 1,noab
      DO h13b = h10b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      DO h4b = h3b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1
     &)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+h1b-1)
     &+int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1).ne
     &.16)) THEN
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+h10b-1
     &)+int_mb(k_spin+h13b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h10b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h1b-1),i
     &eor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),int_mb(k_sym+h4b-
     &1)))))))) .eq. ieor(irrep_v,irrep_t)) THEN
      dimc = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_ra
     &nge+h10b-1) * int_mb(k_range+h13b-1) * int_mb(k_range+h1b-1) * int
     &_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsdtq_t4_8_5_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p11b = noab+1,noab+nvab
      DO p12b = p11b,noab+nvab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p11b-1
     &)+int_mb(k_spin+p12b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p11b-1),ieor(int_mb(k_sym+p12b-1),ieor(int_mb(k_sym+h1b-1),i
     &eor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),int_mb(k_sym+h4b-
     &1)))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p5b,p6b,p11b,p12b,h1b,h2b,h3b,h4b,p5b_1,p6b_
     &1,p11b_1,p12b_1,h1b_1,h2b_1,h3b_1,h4b_1)
      CALL TCE_RESTRICTED_4(h10b,h13b,p11b,p12b,h10b_2,h13b_2,p11b_2,p12
     &b_2)
      dim_common = int_mb(k_range+p11b-1) * int_mb(k_range+p12b-1)
      dima_sort = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1) * 
     &int_mb(k_range+h4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsdtq_t4_8_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsdtq_t4_8_5_1',2,MA_ERR)
      IF ((p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p12
     &b_1 - noab - 1 + nvab * (p11b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),int_mb(k_range+h4b-1),8,7,6,5,4,3,2,1,1.0d0)
      END IF
      IF ((p11b .lt. p5b) .and. (p5b .le. p12b) .and. (p12b .lt. p6b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p12b_1 - noab - 1 + nvab * (p5
     &b_1 - noab - 1 + nvab * (p11b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),int_mb(k_range+h4b-1),8,7,6,5,4,2,3,1,-1.0d0)
      END IF
      IF ((p11b .lt. p5b) .and. (p6b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p12b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p5
     &b_1 - noab - 1 + nvab * (p11b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p6b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),int_mb(k_range+h4b-1),8,7,6,5,3,2,4,1,1.0d0)
      END IF
      IF ((p5b .le. p11b) .and. (p12b .lt. p6b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p6b_1 - noab - 1 + nvab * (p12b_1 - noab - 1 + nvab * (p1
     &1b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p12b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),int_mb(k_range+h4b-1),8,7,6,5,4,1,3,2,1.0d0)
      END IF
      IF ((p5b .le. p11b) .and. (p11b .lt. p6b) .and. (p6b .le. p12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p12b_1 - noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p1
     &1b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p6b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),int_mb(k_range+h4b-1),8,7,6,5,3,1,4,2,-1.0d0)
      END IF
      IF ((p6b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p12b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p
     &6b_1 - noab - 1 + nvab * (p5b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p11b-1),int_mb(k_range+p12b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),int_mb(k_range+h4b-1),8,7,6,5,2,1,4,3,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsdtq_t4_8_5_1',3,MA_ER
     &R)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsdtq_t4_8_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsdtq_t4_8_5_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (h13b_2 - 1 + (n
     &oab+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h13b-1),int_mb(k_range+p11b-1),int_mb(k_range+p12
     &b-1),2,1,4,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsdtq_t4_8_5_1',6,MA_ER
     &R)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p11b .eq. p12b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTORIAL(
     &nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsdtq_t4_8_5_1',7,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsdtq_t4_8_5_1',8,
     &MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsdtq_t4_8_5_1',9,MA_ERR)
      CALL TCE_SORT_8(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h4b-1),int_mb(k_range+h3b-
     &1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-
     &1),int_mb(k_range+p5b-1),8,7,2,1,6,5,4,3,-1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h4b -
     & 1 + noab * (h3b - 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * 
     &(h13b - 1 + noab * (h10b - 1 + noab * (p6b - noab - 1 + nvab * (p5
     &b - noab - 1)))))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsdtq_t4_8_5_1',10,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsdtq_t4_8_5_1',11
     &,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

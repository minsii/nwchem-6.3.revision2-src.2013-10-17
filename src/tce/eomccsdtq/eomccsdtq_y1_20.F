      SUBROUTINE eomccsdtq_y1_20(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_o
     &ffset)
C     $Id: eomccsdtq_y1_20.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( h2 p1 )_vty + = -1/12 * Sum ( p18 p15 p19 h13 h14 h16 h17 ) * y ( h13 h14 h16 h17 p1 p15 p18 p19 )_y * i1 ( h2 p15 p18 p19 h13 h14 h16 h17 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h2b
      INTEGER p1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h13b
      INTEGER h14b
      INTEGER h16b
      INTEGER h17b
      INTEGER p15b
      INTEGER p18b
      INTEGER p19b
      INTEGER h13b_1
      INTEGER h14b_1
      INTEGER h16b_1
      INTEGER h17b_1
      INTEGER p1b_1
      INTEGER p15b_1
      INTEGER p18b_1
      INTEGER p19b_1
      INTEGER h2b_2
      INTEGER p15b_2
      INTEGER p18b_2
      INTEGER p19b_2
      INTEGER h13b_2
      INTEGER h14b_2
      INTEGER h16b_2
      INTEGER h17b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperh(4)
      INTEGER isuperh
      INTEGER nsubp(3)
      INTEGER isubp
      INTEGER l_c
      INTEGER k_c
      DOUBLE PRECISION FACTORIAL
      EXTERNAL NXTASK
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO h2b = 1,noab
      DO p1b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h2b-1)+int_mb(k_spin+p1b-1
     &).ne.4)) THEN
      IF (int_mb(k_spin+h2b-1) .eq. int_mb(k_spin+p1b-1)) THEN
      IF (ieor(int_mb(k_sym+h2b-1),int_mb(k_sym+p1b-1)) .eq. ieor(irrep_
     &v,ieor(irrep_t,irrep_y))) THEN
      dimc = int_mb(k_range+h2b-1) * int_mb(k_range+p1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_20',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h13b = 1,noab
      DO h14b = h13b,noab
      DO h16b = h14b,noab
      DO h17b = h16b,noab
      DO p15b = noab+1,noab+nvab
      DO p18b = p15b,noab+nvab
      DO p19b = p18b,noab+nvab
      IF (int_mb(k_spin+h13b-1)+int_mb(k_spin+h14b-1)+int_mb(k_spin+h16b
     &-1)+int_mb(k_spin+h17b-1) .eq. int_mb(k_spin+p1b-1)+int_mb(k_spin+
     &p15b-1)+int_mb(k_spin+p18b-1)+int_mb(k_spin+p19b-1)) THEN
      IF (ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h16b-1),ieor(int_mb(k_sym+h17b-1),ieor(int_mb(k_sym+p1b-1)
     &,ieor(int_mb(k_sym+p15b-1),ieor(int_mb(k_sym+p18b-1),int_mb(k_sym+
     &p19b-1)))))))) .eq. irrep_y) THEN
      CALL TCE_RESTRICTED_8(h13b,h14b,h16b,h17b,p1b,p15b,p18b,p19b,h13b_
     &1,h14b_1,h16b_1,h17b_1,p1b_1,p15b_1,p18b_1,p19b_1)
      CALL TCE_RESTRICTED_8(h2b,p15b,p18b,p19b,h13b,h14b,h16b,h17b,h2b_2
     &,p15b_2,p18b_2,p19b_2,h13b_2,h14b_2,h16b_2,h17b_2)
      dim_common = int_mb(k_range+h13b-1) * int_mb(k_range+h14b-1) * int
     &_mb(k_range+h16b-1) * int_mb(k_range+h17b-1) * int_mb(k_range+p15b
     &-1) * int_mb(k_range+p18b-1) * int_mb(k_range+p19b-1)
      dima_sort = int_mb(k_range+p1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_20',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y1_20',2,MA_ERR)
      IF ((p19b .lt. p1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p1b_1
     & - noab - 1 + nvab * (p19b_1 - noab - 1 + nvab * (p18b_1 - noab - 
     &1 + nvab * (p15b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h16b-1),int_mb(k_range+h17
     &b-1),int_mb(k_range+p15b-1),int_mb(k_range+p18b-1),int_mb(k_range+
     &p19b-1),int_mb(k_range+p1b-1),8,7,6,5,4,3,2,1,-1.0d0)
      END IF
      IF ((p18b .lt. p1b) .and. (p1b .le. p19b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p19b_
     &1 - noab - 1 + nvab * (p1b_1 - noab - 1 + nvab * (p18b_1 - noab - 
     &1 + nvab * (p15b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h16b-1),int_mb(k_range+h17
     &b-1),int_mb(k_range+p15b-1),int_mb(k_range+p18b-1),int_mb(k_range+
     &p1b-1),int_mb(k_range+p19b-1),7,8,6,5,4,3,2,1,1.0d0)
      END IF
      IF ((p15b .lt. p1b) .and. (p1b .le. p18b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p19b_
     &1 - noab - 1 + nvab * (p18b_1 - noab - 1 + nvab * (p1b_1 - noab - 
     &1 + nvab * (p15b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h16b-1),int_mb(k_range+h17
     &b-1),int_mb(k_range+p15b-1),int_mb(k_range+p1b-1),int_mb(k_range+p
     &18b-1),int_mb(k_range+p19b-1),6,8,7,5,4,3,2,1,-1.0d0)
      END IF
      IF ((p1b .le. p15b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(p19b_
     &1 - noab - 1 + nvab * (p18b_1 - noab - 1 + nvab * (p15b_1 - noab -
     & 1 + nvab * (p1b_1 - noab - 1 + nvab * (h17b_1 - 1 + noab * (h16b_
     &1 - 1 + noab * (h14b_1 - 1 + noab * (h13b_1 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h13b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h16b-1),int_mb(k_range+h17
     &b-1),int_mb(k_range+p1b-1),int_mb(k_range+p15b-1),int_mb(k_range+p
     &18b-1),int_mb(k_range+p19b-1),5,8,7,6,4,3,2,1,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y1_20',3,MA_ER
     &R)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_20',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_y1_20',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h17b_
     &2 - 1 + noab * (h16b_2 - 1 + noab * (h14b_2 - 1 + noab * (h13b_2 -
     & 1 + noab * (p19b_2 - noab - 1 + nvab * (p18b_2 - noab - 1 + nvab 
     &* (p15b_2 - noab - 1 + nvab * (h2b_2 - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p15b-1),int_mb(k_range+p18b-1),int_mb(k_range+p19b
     &-1),int_mb(k_range+h13b-1),int_mb(k_range+h14b-1),int_mb(k_range+h
     &16b-1),int_mb(k_range+h17b-1),1,4,3,2,8,7,6,5,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_y1_20',6,MA_ER
     &R)
      nsuperh(1) = 1
      nsuperh(2) = 1
      nsuperh(3) = 1
      nsuperh(4) = 1
      isuperh = 1
      IF (h13b .eq. h14b) THEN
      nsuperh(isuperh) = nsuperh(isuperh) + 1
      ELSE
      isuperh = isuperh + 1
      END IF
      IF (h14b .eq. h16b) THEN
      nsuperh(isuperh) = nsuperh(isuperh) + 1
      ELSE
      isuperh = isuperh + 1
      END IF
      IF (h16b .eq. h17b) THEN
      nsuperh(isuperh) = nsuperh(isuperh) + 1
      ELSE
      isuperh = isuperh + 1
      END IF
      nsubp(1) = 1
      nsubp(2) = 1
      nsubp(3) = 1
      isubp = 1
      IF (p15b .eq. p18b) THEN
      nsubp(isubp) = nsubp(isubp) + 1
      ELSE
      isubp = isubp + 1
      END IF
      IF (p18b .eq. p19b) THEN
      nsubp(isubp) = nsubp(isubp) + 1
      ELSE
      isubp = isubp + 1
      END IF
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,144.0d0/FACTORIA
     &L(nsuperh(1))/FACTORIAL(nsuperh(2))/FACTORIAL(nsuperh(3))/FACTORIA
     &L(nsuperh(4))/FACTORIAL(nsubp(1))/FACTORIAL(nsubp(2))/FACTORIAL(ns
     &ubp(3)),dbl_mb(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.
     &0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_y1_20',7,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y1_20',8,
     &MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &eomccsdtq_y1_20',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p1b-1),1,2,-1.0d0/12.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p1b -
     & noab - 1 + nvab * (h2b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y1_20',10,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_y1_20',11
     &,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

      SUBROUTINE eomccsdtq_y1_7_9(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     $Id: eomccsdtq_y1_7_9.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p14 p15 h12 h13 )_ft + = 1 * Sum ( h4 p6 ) * t ( p6 p14 p15 h4 h12 h13 )_t * i2 ( h4 p6 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p14b
      INTEGER p15b
      INTEGER h12b
      INTEGER h13b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p6b
      INTEGER h4b
      INTEGER p14b_1
      INTEGER p15b_1
      INTEGER p6b_1
      INTEGER h12b_1
      INTEGER h13b_1
      INTEGER h4b_1
      INTEGER h4b_2
      INTEGER p6b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTASK
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO p14b = noab+1,noab+nvab
      DO p15b = p14b,noab+nvab
      DO h12b = 1,noab
      DO h13b = h12b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p14b-1)+int_mb(k_spin+p15b
     &-1)+int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1).ne.8)) THEN
      IF (int_mb(k_spin+p14b-1)+int_mb(k_spin+p15b-1) .eq. int_mb(k_spin
     &+h12b-1)+int_mb(k_spin+h13b-1)) THEN
      IF (ieor(int_mb(k_sym+p14b-1),ieor(int_mb(k_sym+p15b-1),ieor(int_m
     &b(k_sym+h12b-1),int_mb(k_sym+h13b-1)))) .eq. ieor(irrep_f,irrep_t)
     &) THEN
      dimc = int_mb(k_range+p14b-1) * int_mb(k_range+p15b-1) * int_mb(k_
     &range+h12b-1) * int_mb(k_range+h13b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_7_9',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p6b = noab+1,noab+nvab
      DO h4b = 1,noab
      IF (int_mb(k_spin+p14b-1)+int_mb(k_spin+p15b-1)+int_mb(k_spin+p6b-
     &1) .eq. int_mb(k_spin+h12b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+
     &h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p14b-1),ieor(int_mb(k_sym+p15b-1),ieor(int_m
     &b(k_sym+p6b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_mb(k_sym+h13b-1)
     &,int_mb(k_sym+h4b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p14b,p15b,p6b,h12b,h13b,h4b,p14b_1,p15b_1,p6
     &b_1,h12b_1,h13b_1,h4b_1)
      CALL TCE_RESTRICTED_2(h4b,p6b,h4b_2,p6b_2)
      dim_common = int_mb(k_range+p6b-1) * int_mb(k_range+h4b-1)
      dima_sort = int_mb(k_range+p14b-1) * int_mb(k_range+p15b-1) * int_
     &mb(k_range+h12b-1) * int_mb(k_range+h13b-1)
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_7_9',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y1_7_9',2,MA_ERR)
      IF ((p6b .le. p14b) .and. (h4b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h12b_1 - 1 + noab * (h4b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p14b-1),int_mb(k_range+p15b-1),int_mb(k_range+h4b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),6,5,3,2,4,1,1.0d0
     &)
      END IF
      IF ((p6b .le. p14b) .and. (h12b .lt. h4b) .and. (h4b .le. h13b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h4b_1 - 1 + noab * (h12b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p14b-1),int_mb(k_range+p15b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h4b-1),int_mb(k_range+h13b-1),6,4,3,2,5,1,-1.0d
     &0)
      END IF
      IF ((p6b .le. p14b) .and. (h13b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h13b_1 - 1 + noab * (h12b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p14b_1 - noab - 1 + nvab * (p6b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p14b-1),int_mb(k_range+p15b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h13b-1),int_mb(k_range+h4b-1),5,4,3,2,6,1,1.0d0
     &)
      END IF
      IF ((p14b .lt. p6b) .and. (p6b .le. p15b) .and. (h4b .le. h12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h12b_1 - 1 + noab * (h4b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p14b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p15b-1),int_mb(k_range+h4b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),6,5,3,1,4,2,-1.0d
     &0)
      END IF
      IF ((p14b .lt. p6b) .and. (p6b .le. p15b) .and. (h12b .lt. h4b) .a
     &nd. (h4b .le. h13b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h4b_1 - 1 + noab * (h12b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p14b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p15b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h4b-1),int_mb(k_range+h13b-1),6,4,3,1,5,2,1.0d0
     &)
      END IF
      IF ((p14b .lt. p6b) .and. (p6b .le. p15b) .and. (h13b .lt. h4b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h13b_1 - 1 + noab * (h12b_1 - 1 + noab * (p15b_1 - 
     &noab - 1 + nvab * (p6b_1 - noab - 1 + nvab * (p14b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+p6b-1),int_mb(k_range+p15b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h13b-1),int_mb(k_range+h4b-1),5,4,3,1,6,2,-1.0d
     &0)
      END IF
      IF ((p15b .lt. p6b) .and. (h4b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h12b_1 - 1 + noab * (h4b_1 - 1 + noab * (p6b_1 - n
     &oab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p14b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p6b-1),int_mb(k_range+h4b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h13b-1),6,5,2,1,4,3,1.0d0
     &)
      END IF
      IF ((p15b .lt. p6b) .and. (h12b .lt. h4b) .and. (h4b .le. h13b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (h4b_1 - 1 + noab * (h12b_1 - 1 + noab * (p6b_1 - n
     &oab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p14b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p6b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h4b-1),int_mb(k_range+h13b-1),6,4,2,1,5,3,-1.0d
     &0)
      END IF
      IF ((p15b .lt. p6b) .and. (h13b .lt. h4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h4b_1
     & - 1 + noab * (h13b_1 - 1 + noab * (h12b_1 - 1 + noab * (p6b_1 - n
     &oab - 1 + nvab * (p15b_1 - noab - 1 + nvab * (p14b_1 - noab - 1)))
     &))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p14b-1
     &),int_mb(k_range+p15b-1),int_mb(k_range+p6b-1),int_mb(k_range+h12b
     &-1),int_mb(k_range+h13b-1),int_mb(k_range+h4b-1),5,4,2,1,6,3,1.0d0
     &)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y1_7_9',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_7_9',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_y1_7_9',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p6b_2
     & - noab - 1 + nvab * (h4b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h4b-1)
     &,int_mb(k_range+p6b-1),1,2,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_y1_7_9',6,MA_E
     &RR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_y1_7_9',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y1_7_9',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &eomccsdtq_y1_7_9',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+p15b-1),int_mb(k_range+p14
     &b-1),4,3,2,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h13b 
     &- 1 + noab * (h12b - 1 + noab * (p15b - noab - 1 + nvab * (p14b - 
     &noab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y1_7_9',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_y1_7_9',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

      SUBROUTINE eomccsdtq_y1_12_5_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     $Id: eomccsdtq_y1_12_5_1.F 24183 2013-05-03 23:47:08Z edo $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h11 h14 h13 p10 )_yt + = 1 * Sum ( p7 ) * t ( p7 h13 )_t * y ( h11 h14 p7 p10 )_y
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h14b
      INTEGER h13b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p7b_1
      INTEGER h13b_1
      INTEGER h11b_2
      INTEGER h14b_2
      INTEGER p10b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTASK
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO h11b = 1,noab
      DO h14b = h11b,noab
      DO h13b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h14b
     &-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h14b-1) .eq. int_mb(k_spin
     &+h13b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h14b-1),ieor(int_m
     &b(k_sym+h13b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_y,irrep_t)
     &) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h14b-1) * int_mb(k_
     &range+h13b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_12_5_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h13b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h13b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p7b,h13b,p7b_1,h13b_1)
      CALL TCE_RESTRICTED_4(h11b,h14b,p10b,p7b,h11b_2,h14b_2,p10b_2,p7b_
     &2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+h13b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h14b-1) * int_
     &mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_12_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &eomccsdtq_y1_12_5_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h13b_
     &1 - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h13b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('eomccsdtq_y1_12_5_1',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('eomccsdtq_y1_12_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &eomccsdtq_y1_12_5_1',5,MA_ERR)
      IF ((p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h14b_2 - 1 + noa
     &b * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b
     &-1),4,2,1,3,1.0d0)
      END IF
      IF ((p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p10b_2 - noab - 1 + nvab * (h14b_2 - 1 + noa
     &b * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b
     &-1),3,2,1,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('eomccsdtq_y1_12_5_1',6,M
     &A_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('eomccsdtq_y1_12_5_1
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('eomccsdtq_y1_12_5_1
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &eomccsdtq_y1_12_5_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h14b-1),int_mb(k_range+h11b-1),int_mb(k_range+h13
     &b-1),3,2,4,1,1.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h13b - 1 + noab * (h14b - 1 + noab * (h11b - 
     &1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('eomccsdtq_y1_12_5_1',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('eomccsdtq_y1_12_5_1
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END

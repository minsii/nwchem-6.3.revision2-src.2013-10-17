      SUBROUTINE OFFSET_eomccsdtq_y2_29_2_1(l_a_offset,k_a_offset,size)
C     $Id: OFFSET_eomccsdtq_y2_29_2_1.F 19704 2010-10-29 17:43:02Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h3 h4 h11 h13 p1 p9 )_yt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h3b
      INTEGER h4b
      INTEGER h11b
      INTEGER p1b
      INTEGER h13b
      INTEGER p9b
      length = 0
      DO h3b = 1,noab
      DO h4b = h3b,noab
      DO h11b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1)+int_mb(k_spin+h11b-1
     &) .eq. int_mb(k_spin+h13b-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p9
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h4b-1),ieor(int_mb(
     &k_sym+h11b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p1b-1),i
     &nt_mb(k_sym+p9b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1
     &)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p1b-1)
     &+int_mb(k_spin+p9b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('eomccsdtq_y2_29_2_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h3b = 1,noab
      DO h4b = h3b,noab
      DO h11b = 1,noab
      DO p1b = noab+1,noab+nvab
      DO h13b = 1,noab
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1)+int_mb(k_spin+h11b-1
     &) .eq. int_mb(k_spin+h13b-1)+int_mb(k_spin+p1b-1)+int_mb(k_spin+p9
     &b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+h4b-1),ieor(int_mb(
     &k_sym+h11b-1),ieor(int_mb(k_sym+h13b-1),ieor(int_mb(k_sym+p1b-1),i
     &nt_mb(k_sym+p9b-1)))))) .eq. ieor(irrep_y,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1
     &)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h13b-1)+int_mb(k_spin+p1b-1)
     &+int_mb(k_spin+p9b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = p9b - noab - 1 + nvab * (h13b - 1 + noab
     & * (p1b - noab - 1 + nvab * (h11b - 1 + noab * (h4b - 1 + noab * (
     &h3b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1) * int_
     &mb(k_range+h11b-1) * int_mb(k_range+p1b-1) * int_mb(k_range+h13b-1
     &) * int_mb(k_range+p9b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END

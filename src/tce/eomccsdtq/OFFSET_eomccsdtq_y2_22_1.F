      SUBROUTINE OFFSET_eomccsdtq_y2_22_1(l_a_offset,k_a_offset,size)
C     $Id: OFFSET_eomccsdtq_y2_22_1.F 19704 2010-10-29 17:43:02Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h3 p13 p18 h15 h16 h17 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER h3b
      INTEGER p13b
      INTEGER p18b
      INTEGER h15b
      INTEGER h16b
      INTEGER h17b
      length = 0
      DO h3b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO p18b = p13b,noab+nvab
      DO h15b = 1,noab
      DO h16b = h15b,noab
      DO h17b = h16b,noab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p18b-
     &1) .eq. int_mb(k_spin+h15b-1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+
     &h17b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+p13b-1),ieor(int_mb
     &(k_sym+p18b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+h16b-1)
     &,int_mb(k_sym+h17b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+p13b-
     &1)+int_mb(k_spin+p18b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h16b-
     &1)+int_mb(k_spin+h17b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('eomccsdtq_y2_22_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO h3b = 1,noab
      DO p13b = noab+1,noab+nvab
      DO p18b = p13b,noab+nvab
      DO h15b = 1,noab
      DO h16b = h15b,noab
      DO h17b = h16b,noab
      IF (int_mb(k_spin+h3b-1)+int_mb(k_spin+p13b-1)+int_mb(k_spin+p18b-
     &1) .eq. int_mb(k_spin+h15b-1)+int_mb(k_spin+h16b-1)+int_mb(k_spin+
     &h17b-1)) THEN
      IF (ieor(int_mb(k_sym+h3b-1),ieor(int_mb(k_sym+p13b-1),ieor(int_mb
     &(k_sym+p18b-1),ieor(int_mb(k_sym+h15b-1),ieor(int_mb(k_sym+h16b-1)
     &,int_mb(k_sym+h17b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h3b-1)+int_mb(k_spin+p13b-
     &1)+int_mb(k_spin+p18b-1)+int_mb(k_spin+h15b-1)+int_mb(k_spin+h16b-
     &1)+int_mb(k_spin+h17b-1).ne.12)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = h17b - 1 + noab * (h16b - 1 + noab * (h1
     &5b - 1 + noab * (p18b - noab - 1 + nvab * (p13b - noab - 1 + nvab 
     &* (h3b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+h3b-1) * int_mb(k_range+p13b-1) * int
     &_mb(k_range+p18b-1) * int_mb(k_range+h15b-1) * int_mb(k_range+h16b
     &-1) * int_mb(k_range+h17b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END

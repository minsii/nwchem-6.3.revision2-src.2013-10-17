      SUBROUTINE beta_1_4_4_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offs
     &et)
C     $Id: beta_1_4_4_1.F 19698 2010-10-29 17:03:09Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i2 ( h8 p11 h10 h13 )_ytrbtra + = 1 * Sum ( h3 p1 ) * tra ( p1 p11 h3 h10 )_tra * i3 ( h3 h8 h13 p1 )_ytrb
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p11b
      INTEGER h8b
      INTEGER h10b
      INTEGER h13b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p1b
      INTEGER h3b
      INTEGER p11b_1
      INTEGER p1b_1
      INTEGER h10b_1
      INTEGER h3b_1
      INTEGER h8b_2
      INTEGER h3b_2
      INTEGER h13b_2
      INTEGER p1b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p11b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h10b = 1,noab
      DO h13b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+p11b-
     &1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h13b-1).ne.8)) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+p11b-1) .eq. int_mb(k_spin+
     &h10b-1)+int_mb(k_spin+h13b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+p11b-1),ieor(int_mb
     &(k_sym+h10b-1),int_mb(k_sym+h13b-1)))) .eq. ieor(irrep_y,ieor(irre
     &p_trb,irrep_tra))) THEN
      dimc = int_mb(k_range+h8b-1) * int_mb(k_range+p11b-1) * int_mb(k_r
     &ange+h10b-1) * int_mb(k_range+h13b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('beta_1_4_4_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p1b = noab+1,noab+nvab
      DO h3b = 1,noab
      IF (int_mb(k_spin+p11b-1)+int_mb(k_spin+p1b-1) .eq. int_mb(k_spin+
     &h10b-1)+int_mb(k_spin+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p11b-1),ieor(int_mb(k_sym+p1b-1),ieor(int_mb
     &(k_sym+h10b-1),int_mb(k_sym+h3b-1)))) .eq. irrep_tra) THEN
      CALL TCE_RESTRICTED_4(p11b,p1b,h10b,h3b,p11b_1,p1b_1,h10b_1,h3b_1)
      CALL TCE_RESTRICTED_4(h8b,h3b,h13b,p1b,h8b_2,h3b_2,h13b_2,p1b_2)
      dim_common = int_mb(k_range+p1b-1) * int_mb(k_range+h3b-1)
      dima_sort = int_mb(k_range+p11b-1) * int_mb(k_range+h10b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h13b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('beta_1_4_4_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &beta_1_4_4_1',2,MA_ERR)
      IF ((p1b .le. p11b) .and. (h3b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h3b_1 - 1 + noab * (p11b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-
     &1),4,2,3,1,1.0d0)
      END IF
      IF ((p1b .le. p11b) .and. (h10b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (p11b_1 - noab - 1 + nvab * (p1
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p1b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-
     &1),3,2,4,1,-1.0d0)
      END IF
      IF ((p11b .lt. p1b) .and. (h3b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h3b_1 - 1 + noab * (p1b_1 - noab - 1 + nvab * (p11
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-
     &1),4,1,3,2,-1.0d0)
      END IF
      IF ((p11b .lt. p1b) .and. (h10b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (p1b_1 - noab - 1 + nvab * (p11
     &b_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p1b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-
     &1),3,1,4,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('beta_1_4_4_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('beta_1_4_4_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &beta_1_4_4_1',5,MA_ERR)
      IF ((h3b .le. h8b) .and. (h13b .le. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (h13b_2 - 1 + noab * (h8b_2 - 1 + noab * (h3b
     &_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h13b-1),int_mb(k_range+p1b-1
     &),3,2,1,4,1.0d0)
      END IF
      IF ((h8b .lt. h3b) .and. (h13b .le. p1b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p1b_2
     & - noab - 1 + nvab * (h13b_2 - 1 + noab * (h3b_2 - 1 + noab * (h8b
     &_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h13b-1),int_mb(k_range+p1b-1
     &),3,1,2,4,-1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('beta_1_4_4_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('beta_1_4_4_1',7,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('beta_1_4_4_1',8,MA_
     &ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &beta_1_4_4_1',9,MA_ERR)
      IF ((h10b .le. h13b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h10b-1),int_mb(k_range+p11b
     &-1),2,4,3,1,1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h13b 
     &- 1 + noab * (h10b - 1 + noab * (p11b - noab - 1 + nvab * (h8b - 1
     &)))))
      END IF
      IF ((h13b .le. h10b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h13b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h10b-1),int_mb(k_range+p11b
     &-1),2,4,1,3,-1.0d0/2.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h10b 
     &- 1 + noab * (h13b - 1 + noab * (p11b - noab - 1 + nvab * (h8b - 1
     &)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('beta_1_4_4_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('beta_1_4_4_1',11,MA
     &_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END

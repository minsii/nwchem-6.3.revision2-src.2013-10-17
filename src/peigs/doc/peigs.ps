%!PS-Adobe-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: peigs.dvi
%%Pages: 75
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips peigs.dvi -o peigs.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.06.19:1128
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (peigs.dvi)
@start
%DVIPSBitmapFont: Fa cmti10 10.95 1
/Fa 1 47 df<120FEA3FC0127FA212FFA31380EA7F00123C0A0A77891C> 46
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmbxti10 14.4 1
/Fb 1 47 df<13FCEA03FF000F13804813C05AA25AA2B5FCA31480A214006C5A6C5A6C5A
EA0FE0121271912B> 46 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmti9 9 1
/Fc 1 47 df<121C127F12FFA412FE12380808778718> 46 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi7 7 1
/Fd 1 85 df<000FB712E05A9039800FE007D81E009038C001C05A0038011F1300123000
705C00601501023F148012E0481400A2C74890C7FCA2147EA214FEA25CA21301A25CA213
03A25CA21307A25CA2130FA25CA2131F001FB57EA22B287DA727> 84
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbx7 7 3
/Fe 3 117 df<EB03C0130F133FEA07FFB5FCA2EAF83F1200B3AA007FB512E0A31B267B
A526> 49 D<007FB712F0A39039803FE00FD87E001403007C15010078150000F816F8A2
481678A5C71500B3A4017FB512F0A32D277DA634> 84 D<1378A413F8A21201A2120312
07121FB512FCA33807F800AD141EA5143E3803FC7C3801FFF86C13F0EB3FC017257FA41D
> 116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy7 7 1
/Ff 1 1 df<B712FEA327037A8F34> 0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmbx12 13.14 51
/Fg 51 123 df<923803FFE092B512FC020714FF021F81027F9038007FC0DAFFF0EB0FE0
010301C0804990C7EA3FF84948147F4A81494814FF495AA2137F5CA2715A715A715AEF07
8094C8FCA8EF07FCB9FCA526007FF0C7123F171FB3B3003FB5D8E00FB512F8A53D4D7ECC
44> 12 D<EA07E0EA1FF8EA3FFCEA7FFEA2B5FCA6EA7FFEA2EA3FFCEA1FF8EA07E01010
778F22> 46 D<15F014011407141F147FEB03FF137FB6FCA313FC1380C7FCB3B3B2007F
B712E0A52B4777C63D> 49 D<ECFFF80107EBFF80013F14F090B612FC4881480101EBFF
802707F8003F13C0D80FE0010F13E0D81F806D13F0003F80D87FF06D13F86D15FC6D7F00
FF16FE6D147FA217FF82A36C5A6C5A6C5A6C5AC95A17FEA3EEFFFCA24B13F817F05D17E0
4B13C017804B13004B5A4B5A5EED7FE04B5A4A5B4A90C7FCEC07FC4A5A4A5A4B131FEC3F
804AC7FC14FE4948143E495AEB07E0495A4948147E49C8FC017E15FE90B7FC4816FC5A5A
5A5A5A5AB8FC17F8A430477AC63D> I<EC3FFE0103B512E0010F14FC013F14FF90267FE0
1F7F9026FF000713E0D801FC6D7FD803F07F486C6D7FD80FFE817F486D80167FA3805C16
FF7E91C75B6C5A6C5AD80020495B90C75C5D5F4B5B5F031F90C7FCED3FFC4AB45A49B512
E0168016E016FC90C7EA3FFF030713C06F7F6F7F6F7F83707E83A2701380A318C0EA07E0
EA1FF8487E487EA2B5FCA31880A25E491600127F494A5A6C485D01E05B001F4A5BD80FFC
495B2707FFC03F13C06C90B65AC64BC7FC013F14F8010714E09026007FFEC8FC32487BC6
3D> I<EE07E0160FA2161F163F167F16FFA25D5D5DA25D5D5DA2157D15FDEC01F915F1EC
03E11407EC0FC1EC1F811501143F147E14FC14F8EB01F01303EB07E014C0EB0F80131FEB
3F00133E5B13FC485A485A5B1207485A485A90C7FC123E127E5AB912FCA5C80003EBE000
AD023FB612FCA536487DC73D> I<D8038015E001E0140301FC143F9039FFE003FF91B612
C017801700A25E5E16F05E5E93C7FC15FC15F001E790C8FC01E0C9FCAAEC1FFC01E1B512
C001E714F001EF14FC9039FFE01FFFDA0007138001FC6D13C001F06D13E04915F0497F17
F8C913FC167F17FEA417FFA3EA0FC0EA3FF0487EA2487EA317FEA34914FF6C4815FC5B01
8015F86CC74813F07F6C6C4913E0D80FF04913C0D807FC011F13806CB46CB512006C90B5
12FC6C5D013F14C0010F91C7FC010113F030487AC63D> I<ED7FF8913807FFFE021F6D7E
027F80903A01FFF01FE0010790388003F04948486C7E49486D7ED93FF013074948130F01
FF4A7E4849133F5C5A4890C7FCA25A705A48486E5A705A003F92C8FCA3485AA215209138
07FFE0021F13FC00FF497F4A6D7EDAFC017F9026FDF0007F4A6D7ED9FFC06D7E4A6D7E83
91C7FC8382491680A318C05BA3127FA6123FA27F001F1780A3000F4B1300A26C6C5DA26C
6D495A6C6D5C6C6D495A6D6C48485A90263FFC075B6DB65A6D4AC7FC01035C010014F002
0F90C8FC32487BC63D> I<121F7F7F13FE90B812E0A45A18C0188018005F5FA25F485E90
C8EA07E0007E4B5A5F007C151F4CC7FC167E5E485D15014B5A4B5AC8485A4B5AA24BC8FC
157EA25D1401A24A5A1407A24A5AA2141FA24A5AA2147FA314FFA3495BA45BA55BAA6D5B
A26D90C9FCEB007C334B79C93D> I<EA07E0EA1FF8EA3FFCEA7FFEA2B5FCA6EA7FFEA2EA
3FFCEA1FF8EA07E0C7FCB0EA07E0EA1FF8EA3FFCEA7FFEA2B5FCA6EA7FFEA2EA3FFCEA1F
F8EA07E0103077AF22> 58 D<B912F0F0FF8019F019FC19FFD8001F0180C780061F7F72
7F727F727F727FA2727FA2197F86A84F5AA2626062604E5B4E5B4E1380067F90C7FC9438
03FFFC92B712F0198019F019FC0380C7383FFF80060F7F060313F0727F727F737E86851B
80851BC0A21BE0A48561A41BC0A2611B80611B0096B5FC4E5B4E5B060F5B067F5BBB12C0
97C7FC19FC19F04EC8FC4B4B7CCA57> 66 D<93261FFF80EB01C00307B500F81303033F
02FE13074AB7EA800F0207EEE01F021F903AFE007FF83F027F01E0903807FC7F91B5C738
01FEFF010301FCEC007F4901F0814901C0150F4949814990C97E494882495A4849824819
7F5C48193F5C48191F5C48190FA2485BA21A075AA391CDFCA2B5FCAD7EA280F207C0A27E
A36C7F1A0F6C1A80806C191F6E18006C61806C197E6C6D177C6D6C17FC6D6C4C5A6D6D4B
5A6D6D4B5A6D01F0ED1FC06D01FC4B5A010001FF03FFC7FC6E01E0EB07FE021F01FEEB3F
FC020790B612F0020116C0DA003F92C8FC030714F8DB001F13804A4D79CB59> I<B912F0
F0FF8019F019FC19FFD8001F902680000114C0DD001F7F060713F806017F726C7E737E73
7F737F737F8587737F8587A2747EA38786A21C80A51CC0A586A462A51C80A51C00A26263
A2631AFF636163614F5B634F5B073F90C7FC4F5A4F5A06035B061F5B4DB512C0BBC8FC19
FC19F0198006F0C9FC524B7CCA5E> I<BB12C0A486D8000F01E0C77E18071801F0007F19
3F191F190F1907861903A31901A3EF0F80A2737EA497C7FC171FA2173F177F17FF160392
B6FCA5EDE0031600177F173F171FA2050FEC0F80A3F21F00A494C8FC621A3EA21A7EA31A
FE6219011903A21907190FF13FF819FF1803183FBBFCA262A3494A7CC951> I<BBFCA41A
80D8001F01C0C7FC181F18038484197F193F191F1AC0190FA31907A4171FF103E0A496C7
FCA25FA25F5F5E160792B6FCA5EDC0071601828383A283A794C9FCB1B8FCA5434A7CC94D
> I<B7D8FC01B712FCA5D8001F01C0C8001FEBC000B3AA92B9FCA503C0C8121FB3AEB7D8
FC01B712FCA5564B7BCA60> 72 D<B712FEA5D8000FEBE000B3B3B3ABB712FEA5274B7D
CA2E> I<B8FCA5D8001F01C0C9FCB3B3A4193EA4197E197CA519FCA31801A2F003F8A218
07180F181F183F187FEF01FF1707173FBA12F0A53F4B7BCA4A> 76
D<B600E04DB612806F5FA26F5FA2D8001F09FCC7FC6FEF0F7FA2DABFFE171EA2DA9FFF17
3CA3028F6D1678A202876D16F0A202836DED01E0A302816DED03C0A202806DED0780A26F
6CED0F00A36F6C151EA26F6C5DA26F6D5CA26F6D5CA36F6D495AA26F6D495AA26F6D495A
A3706C49C7FCA2706C131EA2706C5BA3706D5AA2706D5AA270EBE1E0A370EBF3C0A270EB
FF80A27190C8FCA2715AA3715AA2715A497EB600F06D480103B71280A3715A715A694B7B
CA74> I<B600E092B612FC8181A281D8001F6D9239001FE0006F705A82A28202BF7F029F
7FA2028F7F02877F02837F8214810280806F7F6F7F83816F7F6F7F6F7F83816F80707F70
7F8482707F707F707FA2707F7014807113C019E0837113F07113F87113FC19FE837113FF
71148F7213CF1AEF847213FF8484A284848485A2858585A285858585497EB600F8167F1A
3F1A1F1A0FA2564B7BCA60> I<EEFFF8031FEBFFC04AB612FC020715FF021FD9C01F13C0
91277FFE000313F0902601FFF09038007FFC49496E7E490180EC0FFF4990C86C7F49486F
7F49486F7F017F8449486F7F4849707EA24849707E4885A24849701380A2481AC04A82A2
481AE0A34890CA6C13F0A5B519F8AE6C1AF0A26E5EA36C1AE0A26E5E6C1AC0A26C1A806E
5E6C1A006E5E6C616E16FF6C616C6D4B5B6D6C4B5B6E5D6D6D4A5B6D6D4A5B01076D4A90
C7FC6D01F8ECFFFE6D01FE01035B9028007FFFC01F13F0021F90B612C0020793C8FC0201
15FCDA001F14C0030101FCC9FC4D4D79CB5C> I<B912C018FCF0FF8019F085D8001F9026
80000713FE05007F063F1380060F13C07213E01AF0841AF8A27213FCA31AFEA81AFCA34E
13F8A21AF0601AE04E13C0063F138095B51200050713FC92B75A19E096C7FC18F803C0CA
FCB3ABB712FCA5474B7BCA54> I<B9FC18F8F0FF8019E019F8D8000F9026C0000713FE94
39007FFF80061F7F727F727F727F84868684A286A862A24E5BA2624E5B4E5B4E5B4E5B95
B5C8FC050713FC92B712F0198006FCC9FC18FF9226C0003F13C0050713F0717F717F717F
187F85727FA28486A786A71C3E86A28474137E72157C726D13FCB700FC6D9038FE01F872
EBFF8373EBFFF0071F14E007031480CD383FFE00574C7CCA5C> 82
D<DA7FFCEB01C00103B5EAC003011FECF00749ECFC0F90B7121F48D9E00F13BF4890C713
FFD807FC141F4848804848140382484880177F485A173F171F12FFA2170F7FA217077F7F
7F6D92C7FC6D7E6C13F014FF15F86CECFF8016F86C15FF6C16C0836C826C826C826C8201
3F816D1680010716C01300020F15E01400030714F0ED007F160F16037013F882177F1278
00F8163FA3171FA27E18F0A27EA26CEE3FE07F18C001E0157F6DEDFF8001FC160001FF14
0302E0EB0FFED97FFEEB3FFC486CB612F0D8FC0F5DD8F803158048C66C49C7FC48010313
F0354D79CB44> I<003FBB12C0A5DA80019038FC001FD9FC001601D87FF09438007FE001
C0183F49181F90C7170FA2007E1907A3007C1903A500FC1AF0481901A5C894C7FCB3B3A7
49B812FCA54C4A7CC955> I<B700F8023FB512F8A5D8001F01C0C9380FE000745AB3B3AD
6D180F63811A1F6D96C7FC626D7F1A7E6D7F6D606E6C4B5A6E6CED07F06E6C4B5A6E01C0
EC3FC06E01F049B45A020101FF011F90C8FC6E91B55A033F15F8030715E0030092C9FC04
0713F0554C7CCA5E> I<B700F84AB6FCA5D8001F01F0C93803FC006F705A6D4E5A6D6D4C
5A816D4E5A6D6D4C5A826D4EC7FC6E6D5D70157E6E5F6E7F704A5A6E4C5A6E7F704A5A6E
4C5A6E7F71495A6E4CC8FC6F7F71137E6F5D6F7F71485A6F4A5A6F13FC71485A6F4A5A6F
13FFF09F806F02BFC9FC7013FF60705B8260705B8260B3A7037FB612FEA5584B7ECA5D>
89 D<003FB912F0A502FCC7003F13E002C016C091C85A01FC92B51280491700495C494A
5B495E48485C6090C8485B5E007E5F5E4C5B60007C92B5FC4B91C7FC5F5D4B5BC85C5D4B
5B5F5D5F5D92B55A94C8FC5C4A5B5E5C4A5B5E5C4A5B5E5C4C14F891B5FC4991C8FC5D5B
495B4B14014917F0495B5D5B494914035D90B5FC92C81207485B48170F4A151F5A484915
3F4A157F48EE01FF4849020713E04A141F484BB5FCBAFCA53D4B79CA4B> I<ECFFFC010F
EBFFC0017F14F090B612FC489038803FFF2703FC00077F486C6D7F486C6D7F6E7E83707E
A3707E6C90C7FC6C5A6C5AC9FCA4ED1FFF021FB5FC49B6FC130F013FEBC03F9038FFFE00
000313F04813C04890C7FC485A485AA2485AA2485AA4167FA26D14FF007F15EF6D01017F
6C6C903907CFFF806C6CD90F8F13FE6C9038E07F076C9038FFFE0300014A7ED8003F9038
F0007F0103018090C7FC37337CB13C> 97 D<91380FFF8091B512F8010314FF010F1580
90263FFE0013C0D97FF8EB1FE0D9FFE0EB3FF04849EB7FF8484913FF4890C7FC5A5B121F
5B003FED7FF0EE3FE0007FED1FC093C7FC5BA212FFAC127F7FA2123FA26D153E121F6D15
7E6C167C6C6D14FC6C16F86C6D13036C01F0EB07F0D97FFCEB1FE06DB4EBFFC0010F90B5
120001035C010014F0020F13802F337CB137> 99 D<EF1FF0EE3FFFA51600177FB3A2EC
0FFF91B512E0010314F8010F14FE013FEB01FF903A7FF8003FFFD9FFE0130F48497F4849
7F4890C77E4881485AA2485AA3127F5BA212FFAC127FA37F123FA2121F7F000F5D6C6C5C
5E6C6D5B6C01E0497F6C6D017FEBFFE090393FFE03FE6DB512F801075C010114C0902700
1FFC00EBC0003B4D7CCB44> I<EC0FFF91B512F0010314FC010F14FF90263FFE077F9026
7FF0007F4948EB3FE04801806D7E48824890C76C7E4848140783485A003F6F7EA3485A70
1380A312FFA290B8FCA401F8CAFCA5127FA27FA2123FA26C6CED0F80A2000F161F6C6C16
006E5C6C6D147E6C6D5C6C6D495AD97FFCEB07F0903A1FFF803FE06D90B55A010392C7FC
D9007F13FC020713C031337DB138> I<ED7FE0913807FFFC021F7F027F7F902601FFE013
8049018113C0902607FE0113E049485A14F8131FEB3FF0A26F13C0EB7FE06F1380EE3E00
93C7FCADB77EA526007FF0C8FCB3B3A2003FB512F8A52B4D7DCC26> I<DA7FFCEB0FF001
03B538807FF8011F9138F1FFFC4991B512FE90267FF01F13F32701FFC007138348EB0001
A248486DEBC1FC000FEEE0F849027F1300A2001F82A8000F5EA26D14FF00075E6C6C495B
A26CD9C00790C7FC6C9038F01FFC4890B55A5ED803C314809026C07FFCC8FC000790CAFC
A47FA27F13FC90B612FCEEFFC06C16F817FE6C8218806C17C06D16E00003B812F0120FD8
1FFCC7000F13F8D83FF0140049153F4848ED1FFC00FF160F491507A56D150F007F17F86D
151F6C6CED3FF06C6CED7FE0D80FFE913801FFC06C6C6C010713806C01F8017F1300C690
B612FC013F15F001071580D9003F01F0C7FC37487DB03D> I<EB7FC0B5FCA512037EB3A2
923801FFC0030F13F8033F13FE4B7F9126C1FE077F9126C3F0037F9138C7C001DACF8080
150002DE7F02FC81A25CA25CA35CB3A9B6D8C07FEBFFE0A53B4C7BCB44> I<13FCEA03FF
487F487FA2487FA66C5BA26C5B6C90C7FCEA00FC90C8FCACEB7FC0B5FCA512037EB3B3B6
1280A5194D7BCC22> I<EB7FC0B5FCA512037EB3A393383FFFFEA5040390C7FC17FCEE0F
F04C5A4C5A4C5A04FEC8FCED03FC4B5A4B5AED1FC0ED7F804BC9FC14C102C37F14CF02DF
7F91B57E825C4A6C7E02F87F4A6C7E9138C01FFF81836F7F6F7F816F7F83707E163F707E
83707F707F84B6D8803FEBFF80A5394C7CCB41> 107 D<EB7FC0B5FCA512037EB3B3B3AA
B61280A5194C7BCB22> I<90287FC001FFE0EC7FF8B5010F01FC0103B5FC033F6D010F80
4B6D6C4814E0DBFE079026C03F817F9126C3F0019138FC007F0003D9C7E0DAE1F8806CDA
8000D9F1E06D7E02CFC7EBF3C002DE91267FF780131F02FC03FFC77FA24A5DA24A5DA34A
5DB3A9B6D8C03FB5D8F00FB512FCA55E317BB067> I<903A7FC001FFC0B5010F13F8033F
13FE4B7F9126C1FE077F9126C3F0037F00039038C7C0016CD9CF8080150002DE7F02FC81
A25CA25CA35CB3A9B6D8C07FEBFFE0A53B317BB044> I<913807FF80027F13F80103B6FC
010F15C090261FFE017F903A7FF0003FF8D9FFC0EB0FFC48496D7E4890C76C7E48178049
80000F17C048486E13E0A2003F17F049157FA2007F17F8A400FF17FCAB007F17F8A36C6C
EDFFF0A3001F17E06D5C000F17C06C6C4A13806C17006C6D495A6C01E0EB1FFC6D6C495A
903A3FFE01FFF0010FB612C0010392C7FCD9007F13F80207138036337DB13D> I<90397F
C00FFFB5017F13F002C1B512FC02C714FF9126CFF80F7F9126FFC00313E0000391C77F6C
01FC6E7E4A6E7E5C4A6E7E848319808319C0A47113E0AC4D13C0A319805FA219004D5A80
4D5A6E4A5A6E4A5A02FF495BDB80075B9126EFF01F5B02E7B548C7FC02E314F802E014E0
DB0FFEC8FC92CAFCAFB612C0A53B467CB044> I<9039FF803FE0B5EBFFF8028113FE0283
7FDA87E11380EC8F830003D99F0713C06C139E14BCA214F8A24A6C13806F13004A6C5A93
C7FCA45CB3A7B612E0A52A317CB032> 114 D<90390FFF8070017FEBF1F048B6FC120738
0FFC01391FE0003F4848130F491307127F90C712035A1501A27FA213E06D90C7FC13FE38
7FFFF0ECFFC015F06C14FC6C14FF6C15806C15C06C15E0C615F0013F14F8010714FCEB00
7F14019138003FFE150F0078140700F81403A26C1401A37E16FC6C14036D14F87F6DEB07
F001F8EB1FE001FFEBFFC091B51280D8FC7F1400D8F81F13FCD8E00313C027337CB130>
I<14F8A61301A41303A21307A2130FA2131F133F137F13FF1203000F90B512F0B7FCA426
007FF8C7FCB3A6167CAA013F14F880A290391FFE01F0010F1303903907FF87E06DEBFFC0
6D14806D6C1300EC0FFC26467EC430> I<D97FE0EC3FF0B5EC7FFFA5000315016C81B3AB
5EA25EA25E7E6EEB0F7F017F021E7F6E017CEBFFE090393FFE01F86DB512F0010714E001
0114C09027003FFE00EBC0003B327BB044> I<B66C90B512C0A5000101E0C73807F0006E
5D6C5F6E140F017F5E80171F013F93C7FC6E5C011F153E6E147E6D157C6F13FC6D5DEDC0
01A26D01E05B16036D5DEDF0076D5DEDF80F027F5CEDFC1F023F91C8FC15FE5E021F133E
EDFF7E6E137C16FC6E5BA26E5BA36E5BA26E5BA26F5AA26FC9FCA23A317DAF41> I<B600
81B500FC90387FFFF0A500019026E000030180903803FC006E715A6C6F5E6E6F1303017F
61A26E496D1307013F616E6F130F011F4A5EA26E6F131F6D4A93C7FCDD9FFC5B6DD9801F
153E170F03C06E137E6D023F157C93383E07FFDBE07E15FC6DDA7C035C03F015816D02FC
5D4C7E03F815C3DA7FF95E9226FDF00013E7DA3FFF5E4C137F19FF6E5F4C7FA26E496D90
C8FCA26E5E93C7120FA26E486E5AA202015E4B1403A26E486E5A54317EAF59> I<B6D880
07B512C0A526007FFCC7387F8000013F037EC7FC6E14FE6D6C495A6D6D485A6D6D485A6D
01E05B4C5A6D6D485A6DEBF83F6E6C48C8FC91383FFEFE6E6C5A5E6E5B6E5B806E7FA26E
7F82824A7F5C4A80DA0FE77FDA1FC37FDA3F817F4AC67F147E4A6D7E49486D7E01036E7E
49486D7F49487F49488149486D7F017F6E7FB500F8011FEBFFF0A53C307EAF41> I<007F
B500C090387FFFE0A5C601F0C73803F8006E5D017F5E6E1407013F5E6E140F011F5E6E14
1FA26D6D91C7FC5F6D153E6F137E6D157C6F13FC6D5DEDF0016D5DEDF803027F5C15FC16
07DA3FFE5B160F021F5CEDFF1F6E91C8FC16BF6E13BE16FE6E5BA36E5BA26E5BA26F5AA2
6F5AA26F5AA393C9FC5D153E157E157CD81F8013FC486C5B387FE001D8FFF05B14035D14
074A5A49485A007F49CAFCEBC07E383F81FC6CB45A6C5B6C13C0C648CBFC3B467EAF41>
I<001FB712FCA4DA000113F801F84913F001E04913E05B494913C04B138048C7481300A2
4B5A4B5A003E495B5C5E4A5B4A5BC7485BA24A90C7FC4A5A4A5AA2495B4949137C495BA2
495B495B4990C712F85B5C495A48491301485BA248491303484913074849130F161F4890
C7EA7FF04848EB03FFB8FCA42E307DAF37> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmb10 9 31
/Fh 31 123 df<0370137003F813F8A30201130103F05BA40203130303E05BA302071307
03C05BA3020F130F03805BA4007FB812F0B912F8A36C17F0C7267C007CC7FCA402FC13FC
4A5BA30101130102F05BA4007FB812F0B912F8A36C17F028000F800F80C7FCA4011F131F
020090C8FCA3495B013E133EA3017E137E017C137CA401FC13FC495BA30170137035437C
B33E> 35 D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C7C8B15> 46
D<15E0EC01F0A3140315E0A2140715C0A2140F1580A2141F1500A25C143EA2147E147CA2
14FC5CA213015CA213035CA213075CA2130F5CA2131F91C7FCA25B133EA2137E137CA213
FC5BA212015BA212035BA212075BA2120F5BA2121F90C8FCA25A123EA2127E127CA212FC
5AA312701C4B7CB725> I<EB1FE0EB7FF83801FFFE3803F87F3907F03F80390FE01FC000
1F14E0EBC00F003F14F0A3007F14F8A500FF14FCB3007F14F8A4003F14F0A3001F14E0EB
E01F000F14C03907F03F803903F87F003801FFFE38007FF8EB1FE01E327DB025> I<EB01
E01303130F133FEA07FFB5FCA3EAF87F1200B3B2007FB512C0A41A317BB025> I<EB7F80
3801FFF0000713FC487F381F03FFD83E011380007F14C01380486C13E0EBE07F15F0A4EA
7FC0EA3F80EA1F00C7FC15E014FFA215C0491380A24913005C495A5CEB0FE05C495A49C7
FC017E13F0137C5B485A3903E001E013C0EA078048B5FCA25A5A5AA2B612C0A41C317CB0
25> I<EB3FC0EBFFF8000313FE3907E1FF80D80F8013C0391F007FE013C001F013F0123F
13F8A5D81FF013E0EA0FE0EA0380C713C0ECFF801500495A495AEB7FF05C14FCEB01FF6D
13C0EC7FE015F0143F15F8A2000F14FCEA3FC0EA7FE0EAFFF0A515F813E0397FC07FF013
80393F00FFE0D81FC113C06CB512806CEBFE00000113F838003FC01E327DB025> I<123C
123F90B512FEA44814FC15F815F0A215E015C038780007EC0F80EC1F0048131E143E5C14
78C712F8495AA2495A1307A2495AA2131FA2133FA25C137FA313FFA45AA96C90C7FCA213
3C1F337CB125> 55 D<EB1FE0EB7FFC48B5FC3903F03F803907C01FC0390F800FE0001F
1307010013F014035AA2138013C013E0EBF00701F813E013FE9038FF0FC06CEBDF80ECFF
006C5B5C6C13FF6C14806C14C04814E04814F0EA0FEFD81FC713F8EA3F8148C613FC143F
141F00FE1307A21403A21401A36C14F86C1303018013F0003F13079038C00FE0391FF03F
C06CB5128000031400C613FCEB1FE01E327DB025> I<120FEA3FC0EA7FE0EAFFF0A6EA7F
E0EA3FC0EA0F00C7FCA9120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C217CA015
> 58 D<B500C090380FFFFC8080A200016D9038001E008080A2EBEFFF01E77F8113E301
E17F01E07F81147F6E7E6E7E81806E13806E13C016E0806E13F0ED7FF816FC153FED1FFE
ED0FFF179E816F13DE6F13FEA281167F163FA2161F160F1607A2160316011600A2B500C0
147E173E171EA236337EB23B> 78 D<EBFFE0000313FC000F13FFD81FE07F486C6C7E6E
7EA26E7EA2EA1FE0EA0FC0EA0300C7FC14FF133F48B5FC3807FE1FEA0FF8EA3FF013E0EA
7FC012FF1380A4143FEA7FC04A7E3A3FE1EFFF80381FFFC7000713833800FE0121217EA0
24> 97 D<EA01FC12FFA4120F1207ADEC1FE0ECFFF890B512FE9138C0FF809138007FC0
49EB3FE049131F16F016F8150FA216FCAA16F8A3ED1FF0A216E06DEB3FC06D137F9039F7
C0FF009038E3FFFE01C013F89038803FC026347FB32A> I<EB0FF8EB7FFE48B512803907
FC3FC0390FF87FE0EA1FF013E0123FA2397FC03FC0EC1F80EC060000FF90C7FCA9127FA2
7F003F14F0A2381FF001EC03E0D80FF813C03807FE0F0001B512006C6C5AEB0FF01C217E
A021> I<ED3F80EC1FFFA4140180ADEB0FF0EB7FFE48B6FC3803FC0F380FF80348487E49
7E123FA2485AA312FFAA127FA27F123F001F5B6D5A6C6C4813C06C6C4813FC0001B6FC38
007FFCEB0FE026347EB32A> I<EB1FF8EB7FFE48B512803903FC3FC03907F00FE0000F14
F0381FE007003F14F81403EA7FC015FCA212FFA290B5FCA301C0C7FCA4127FA36C6C133C
A2001F147C6C6C13F83907F801F03803FE0F6CB512C06C6C138090380FFC001E217EA023
> I<EB01FE90380FFF80013F13C090387FDFE09038FF3FF05AEA03FEA2EA07FCEC1FE0A2
EC078091C7FCA7B512F0A4D807FCC7FCB3A7B512F0A41C347EB317> I<153E90383FC0FF
2601FFF91380000790B5FCD80FF0133F391FE07FBF393FC03FFFEDDF00007F14EE15E0A6
003F5CA26C6C485A6C6C48C7FCEBFFFE001D13F8381C3FC0003CC9FCA3123E123FEBFFFE
ECFFC0816C14F8817E6C80121F393F8003FF48C7FC12FE81A46C5C6C5CEB80016C6C485A
391FF00FF80007B512E00001148026003FFCC7FC21327EA125> I<EA03F0487E487E487E
A66C5A6C5A6C5AC8FCA8EA01FC12FFA4120F1207B3A5B512E0A413357FB414> 105
D<EA01FC12FFA4120F1207AD91380FFFC0A4913801F800EC03E04A5A4A5A4AC7FC143E5C
5C13FDEBFFFC80A280A201FC7F497F147F816E7E141F816E7E1407811403B5388FFFF0A4
24347FB327> 107 D<EA01FC12FFA4120F1207B3B3A6B512E0A413347FB314> I<2703F8
07F0137F00FF903A1FFC01FFC091267FFF0713F002F090388F0FF8D9F9C0139C3C0FFB80
7FF807FC0007010013F013FF4914E0A24914C0B3B53BE3FFFE3FFFE0A43B217EA03E> I<
3903F807F000FFEB1FFCEC7FFF02F01380EBF9C03A0FFB807FC00007130013FF5BA25BB3
B538E3FFFEA427217EA02A> I<EB0FF0EB7FFE48B512803903FC3FC0390FF00FF0EBE007
001F14F8393FC003FCA2007F14FEA300FF14FFA9007F14FEA3003F14FCA2391FE007F8A2
390FF00FF03907FC3FE00001B5128039007FFE00EB0FF020217EA025> I<3901FC1FE000
FFEBFFF890B512FE9138C0FF809138007FC0D80FFE14E06C48133F16F0ED1FF8A3ED0FFC
AA16F8151FA216F0153F16E06DEB7FC06D13FF02C11300ECFFFE01FC13F8EC3FC091C8FC
ABB512E0A426307FA02A> I<3803F83E00FFEBFF8001F913E0EBFBCFEC9FF0380FFF1F7E
13FEEC0FE0EC07C09038FC010091C7FCB2B512F0A41C217FA020> 114
D<3801FF1C000713FC121FEA3F01EA7E00007C137C12FC143CA27E6C130013F013FF6C13
E014F06C13F86C13FC000713FE120138003FFF13017F00F0137F143F7EA26C133E147E7E
38FF81FCEBFFF800F313E000E0130018217EA01D> I<1378A513F8A41201A21203120712
0F381FFFFCB5FCA3380FF800B0141EA7143E3807FC3C3803FE7C3801FFF86C13F0EB1FC0
172F7FAE1D> I<D801FCEB1FC000FFEB0FFFA4000F13000007147FB215FFA35C00034913
E06D4813FE6CB5127F38007FFCEB0FF027217EA02A> I<B53883FFC0A43A0FFC007C0000
071478A26C6C5BA21401D801FF5BA214036CEB83C0A214C7017F5BA2D93FEFC7FCA214FF
6D5AA36D5AA36D5AA26D5AA36D5A22217EA027> I<003FB512E0A301C013C01300D83E01
1380123CD87C031300495A1278495AA2495AC6485AA2495A5C13FF48EB81E0A2481301EA
07FEA2380FFC03A2D81FF813C0383FF007A2387FE00F147FB6FCA31B217EA021> 122
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmtt9 9 1
/Fi 1 35 df<00101320007C13F838FE01FCAAEAFC00007C13F8A900381370161778AE27
> 34 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr9 9 70
/Fj 70 123 df<EC1FE0ECFFFC903803F01E90390FC00780EB1F8090393F000FC0017E13
1F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F150FB3A6486CEB1FE0267FFFC1
B5FCA328357FB42B> 12 D<017C1503D803FEED078026078780140F260F01C0141F261E
00E0EC3F00003E01F8147E003C017CEB01FE007C90397F8007FC913933FFFEF800789038
307FF900F89039380001F00218495A16075F4C5A161F4CC7FC163E5E023813FC00780130
5B007C4A5AEC7003003C01605B003E9038E007C0001EEBC00FD80F015C270787801FC8FC
3903FE003FD8007C133E90C748131F03FCEBFF809239F801E1E0913A01F003C070020390
38078030DBE00F1338DA07C0EB0018020F49131C0380140C91381F001E4A013E130E023E
15065C14FC495A5C495A13075C4948150E011F021E130C91C7121F013E161C017E6E1318
017CED803849020713300001923803C07049913801E1E049913800FF806C48ED1F00373C
7CB740> 37 D<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90
C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203
A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E> 40
D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E13
1FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A48
5AA2485A48C7FC120E5A123C12705A5A124A7CB71E> I<123C127EB4FCA21380A2127F12
3D1201A412031300A25A1206120E120C121C5A5A126009177A8715> 44
D<B512F0A514057F921A> I<123C127E12FFA4127E123C08087A8715> I<1530157815F8
A215F01401A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA2147814
F8A25C1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8
A25B1201A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A2
5A12601D4B7CB726> I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0
391F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14
F0A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126> I<
13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126> I<
EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F0006013
0712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F801500147E
5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C1470
001FB512F05A5AB612E0A31D327CB126> I<EB1FE0EBFFFC4813FF3907E03F80390F001F
C0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0FE0
15C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315FC
140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1FE0390F
E03F800003B51200C613FCEB1FE01F347DB126> I<EC01C0A214031407A2140F141FA214
3F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA018012
0313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B51280A321
337EB226> I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9EB
0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215F8
A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F00380F
80FE3807FFF8000113E038003F801D347CB126> I<14FE903807FF80011F13E090383F00
F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A127E
EB07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01F8130015FC
1400A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E039
03E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126> I<1230123C003FB6FCA348
14FEA215FC0070C7123800601430157015E04814C01401EC0380C7EA07001406140E5C14
1814385CA25CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126>
I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F0001E1300001C
14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C0390FFE078039
07FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF8001E
131F003EEB07FC003C1303481301EC007E12F848143EA2151EA37E153C1278007C14787E
6C14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126> I<EB0FE0EB
7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F8127E
A200FE14FC1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C00E3803E01C
3801F03838007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715C0
140FEC1F809038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126>
I<123C127E12FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15> I<15E0A3
4A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00F
A2D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249800118C77EA2498116
3FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>
65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17F0A617
E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80EE1FC0
EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC00003913803FF
00B75A16F816C02E337DB236> I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C
903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C
485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F161C17
186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D9
0FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437> I<B77E16F016FE
3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3
EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000
014AB45AB748C7FC16F8168034337EB23B> I<B812C0A3D803FCC7127F0001150FEE03E0
1601A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E151E15
0EA21506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812E0A32E
337DB234> I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A41760150CA3
1700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB512FEA32B
337DB232> I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD9
1FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C485A171C
123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F7F121F
A26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF8
1C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C> I<B5D8FE03B512F8A3000190
C73807FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335337EB2
3A> I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C> I<017FB5FCA39038
003FE0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F03803
FFC0C690C7FC20357DB227> I<B512FEA3D803FEC9FC6C5AB3A9EE0180A416031700A45E
A25E5E5E5E16FE00031407B7FCA329337DB230> 76 D<D8FFFC923801FFF86D5DA20003
EFFE00D801BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D981
F814C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5A
A36E6C5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D33
7CB246> I<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EB
C3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED
1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A216
031601A2486C1400D807F81578B500C01438A2171835337EB23A> I<EC07FC91387FFFC0
903901FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E
7EA248486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0
AB6C17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A0001
5E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0
DA07FCC8FC33377CB43C> I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80
EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001FC
C9FCB3A2487EB512F8A32C337DB234> I<EC07FC91387FFFC0903901FC07F0903907E000
FC4948137E013FC7EA1F80017E6E7E496E7E48486E7E00038249140148486E7E000F8249
157E001F167FA24848ED3F80A2007F17C0A390C9121F4817E0AB6C17C0A26D153FA2003F
1780A26D157F001F1700A2270FE001F013FE0007D907FC5B9039F00E0E013B03F80C0703
F8000190391C0383F03B00FC180187E0017EECCFC0013FECDF8090271F9C00FFC7FCD907
EC13FC902701FE07F013609038007FFF913807FC7091C7007813E0A2EE7C01EE7E039338
7F07C0EE3FFFA21880821800705A705AEE01F033447CB43C> I<B612FCEDFF8016F03A01
FE0007FC0000EC01FEED007F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0F
F090B612C093C8FC9039FE001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A2
043F131C486C1618B500FEEB1FE0040F1338933807F070C93801FFE09338003F8036357E
B239> I<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880
A200788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0
C680013F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA2
6CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003
FEC7FC22377CB42B> I<007FB712FEA390398007F001D87C00EC003E0078161E0070160E
A20060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237> I<B500
FE90381FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F
15E06E495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0
020190C8FC35357EB23A> I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F00000116
1E6D151C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074A
C7FCA26D6C1306A28001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5AA2
15E1020F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A> I<B5D8
F007B539800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F000019
30836D020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303
010F95C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C
01011718A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5E
A203D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E020315
3CA24B141C020115184C357FB24F> I<267FFFFC90B512C0A3000101E090381FF8002600
7F80EB0FC0013F6E5A6E91C7FC6D6C130E010F140C6E5B6D6C133801035C6E13606D6C13
E06D6C485A5EDA7F83C8FCEC3FC715C6EC1FECEC0FFC5D14076E7EA26E7E815C6F7E9138
063FC0140E4A6C7E9138180FF0EC380702707F91386003FCECC0010101804A6C7E49C77E
4981010E6E7E010C6E7E131C496E7E01786E7E13FCD807FEEC1FFEB56C90B512F8A33533
7EB23A> I<B500F8ECFFFEA300030180EC3FE06C90C8EA1F806CEE0E006D6C5C6D6C1418
17386D6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13065E91387F801C91
383FC018163891381FE0306E6C5A16E06E6C5AEDF980EC03FF6E90C8FC5D1400B14A7E91
B512FCA337337FB23A> I<003FB612FCA39039F80007F813C090C7EA0FF0003EEC1FE012
3C0038EC3FC00078EC7F801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A5A4A5AA24A
5A4AC7FCA2495A495AA2495A495AA24948130C495AA2495A49C7FCA24848141CA2485A48
5A1638485A4848147816F84848130148481307153FB7FCA326337CB22F> I<EB7F803803
FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF87
3803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F1
80391FC1E1FF2607FFC013003900FE003C22237DA126> 97 D<EA03F012FFA312071203
AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A215
0316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801
FFE0C76CC7FC25357EB32B> I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807
C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D
1330000F14706C6C13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122> I<15
3FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F81
48C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900
F81E3FEB3FFCD90FE0130026357DB32B> I<EB0FE0EB7FFCEBF83F3903F00F80D807E013
C0390FC007E0381F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E12
7FA26C1418A26C6C1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07
F01D237EA122> I<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB
070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417> I<151F90391F
C07F809039FFF8E3C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB00
074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3
121EA2121F380FFFFEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F804814
0FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337E
A126> I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E
13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B> I<EA0780EA0FC0EA1FE0
A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215> I<EB
03C0EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA313071303B3B01238127C00
FE13E0130714C0130F007C138038381F00EA1FFCEA07F0144384B217> I<EA03F012FFA3
12071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8
EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500
C313F0A324347EB329> I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>
I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7
003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A3
3C217EA041> I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE49
7FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B> I<EB07F0EB3FFE9038FC1F8039
01F007C03903C001E000078048486C7E48C7127CA248147E003E143E007E143FA300FE15
80A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93F
FEC7FCEB07F021237EA126> I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE
7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F
6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325
307EA02B> I<903807F00390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4
FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F
3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA326307DA029> I<3803E07C38FF
E1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A3
1A217FA01E> I<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90
C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C13
07A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E> I<1330A51370
A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC
0EEB7E1CEB1FF8EB07E0182F7FAD1E> I<D803F0133F00FFEB0FFFA30007EB007F000380
B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>
I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D
1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5A
A36D5AA2146024217E9F29> I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000
030100141C816C6C017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090
263F030F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF8
0116FE6D486C5AA36D481378A36D48133034217F9F37> I<B53801FFF8A32603FE001380
6C48EB7C0000001478017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE
6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB0C0790381C03F0496C7E01
707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29> I<3A7FFF807FF8A33A07
F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F
1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430
A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F
9F29> I<003FB512F0A2EB000F003C14E00038EB1FC00030EB3F800070137F1500006013
FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A12035B48481370485A001F
14604913E0485A387F000348130F90B5FCA21C207E9F22> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmtt10 10.95 88
/Fk 88 126 df<00101304007C131F00FEEB3F80A26C137FA248133FB2007E1400007C7F
003C131E00101304191C75B830> 34 D<903907C007C0A2496C487EA8011F131FA202C0
5BA3007FB7FCA2B81280A36C16006C5D3A007F807F80A2020090C7FCA9495BA2003F90B5
12FE4881B81280A36C1600A22701FC01FCC7FCA300031303A201F85BA76C486C5AA22938
7DB730> I<1438147C14FCA4EB03FF011F13E090B512FC4880000780481580261FFEFD13
C09039F0FC3FE0D83FC0131FD87F80EB0FF001001307007E15F800FE14035A1507A36CEC
03F0A2007F91C7FC138013C0EA3FF0EA1FFE13FF6C13FF6C14E0000114F86C6C7F011F7F
01037F0100148002FD13C09138FC7FE0151FED0FF015070018EC03F8127E1501B4FCA35A
A26CEC03F07E01801307ED0FE0D83FC0131F01F0EB7FC0D81FFEB512806CB612006C5C6C
5CC614F0013F13C0D907FEC7FCEB00FCA5147C143825477BBE30> I<EB07E0EB1FF8497E
137F497E803801FC7F497E810003131F13F0A6143F92C8FC91387F0FFF9026F87E1F1380
000113FEEBF9FC13FB4A6C1300D9FFF013C06C13E0151F02C05BEB7F809038FF003F4892
C7FC485C48EB807E5A15FE391FDFC0FC383F8FE014E1397F07F1F8EB03F300FEEBFBF0EB
01FF5D7FEDC006027F130F91393F801F8015C06C137F6CEBFFE049EBF83F018701FC1300
263FFFFBB5FC6C01F15B14E06C9038C03FFC00039038001FF8D801FCEB07E0293A7DB830
> 38 D<EA07C0EA0FF0EA1FF8A213FCA213FE120F1207EA007EA513FE13FCA2120113F8
1203EA07F0120FEA1FE0127FEAFFC013801300127C12380F1D70B730> I<141E147F14FF
5BEB03FEEB07FCEB0FF0EB1FE0EB3FC0EB7F80EBFF00485A5B12035B485A120F5BA2485A
A2123F5BA2127F90C7FCA412FEAD127FA47F123FA27F121FA26C7EA27F12076C7E7F1201
7F6C7EEB7F80EB3FC0EB1FE0EB0FF0EB07FCEB03FEEB01FF7F147F141E184771BE30> I<
127812FE7E7F6C7E6C7EEA0FF06C7E6C7E6C7E6C7EEB7F80133F14C0131FEB0FE014F013
07A2EB03F8A214FC1301A214FE1300A4147FAD14FEA4130114FCA2130314F8A2EB07F0A2
130F14E0EB1FC0133F1480137FEBFF00485A485A485A485AEA3FE0485A485A90C7FC5A12
78184778BE30> I<14E0497E497EA60038EC0380007EEC0FC0D8FF83EB3FE001C3137F90
38F3F9FF267FFBFB13C06CB61280000FECFE00000314F86C5C6C6C13C0011F90C7FC017F
13C048B512F04880000F14FE003FECFF80267FFBFB13C026FFF3F913E09038C3F87F0183
133FD87E03EB0FC00038EC0380000091C7FCA66D5A6D5A23277AAE30> I<143EA2147FAF
007FB7FCA2B81280A36C1600A2C76CC8FCAF143EA229297DAF30> I<EA03E0EA0FF0EA1F
F813FCEA3FFEA213FFA27EA27E1203EA007FA2137E13FEEA01FC1203EA07F8EA3FF0127F
EAFFE0EA7F801300123C1019708B30> I<007FB612F0A2B712F8A36C15F0A225077B9E30
> I<120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F000C0C6E8B30> I<16F01501
ED03F8A21507A2ED0FF0A2ED1FE0A2ED3FC0A2ED7F80A2EDFF00A24A5AA25D1403A24A5A
A24A5AA24A5AA24A5AA24A5AA24AC7FCA2495AA25C1303A2495AA2495AA2495AA2495AA2
495AA249C8FCA2485AA25B1203A2485AA2485AA2485AA2485AA2485AA248C9FCA25AA212
7CA225477BBE30> I<14FE903807FFC0497F013F13F8497F90B57E48EB83FF4848C61380
49137F4848EB3FC04848EB1FE049130F001F15F0491307A24848EB03F8A290C712014815
FCA400FEEC00FEAD6C14016C15FCA36D1303003F15F8A26D1307001F15F0A26D130F6C6C
EB1FE0A26C6CEB3FC06C6CEB7F806D13FF2601FF8313006CEBFFFE6D5B6D5B010F13E06D
5BD900FEC7FC273A7CB830> I<EB03C0497EA2130FA2131FA2133F137F13FF1203123FB5
FCA213EF138FEA7E0F1200B3B0003FB512F84814FCB612FEA26C14FC6C14F81F3977B830
> I<EB07FC90383FFFC090B512F00003804814FE4880261FF80F1380263FE00113C09038
C0007F4848EB3FE090C7121FED0FF04814075A6C15F81503A3127E1218C8FCA2150716F0
150F16E0151F16C0153FED7F8015FF4A13005DEC07FC4A5A4A5A4A5A4A5A4A5A4990C7FC
495A495AEB0FF0EB3FE0495A495A4890C8FC4848EB01F04848EB03F8485AEA1FE048B6FC
B7FCA37E6C15F025397BB830> I<EB03FF013F13E090B512F84814FE4880481580260FFE
0113C09038F0007F4848EB1FE0150F16F01507A26C5A6C5AC8FC150F16E0A2151FED3FC0
157FEDFF8002071300903807FFFE495B5D8115FF6D1480D9000113C09138003FE0ED1FF0
ED07F8150316FC150116FE1500A21218127EB4FCA2150116FC4814036C15F86C6C13076D
EB1FF0D83FF0133F3A1FFE01FFE06CB612C06C15806CECFE00C65C013F13F00103138027
3A7CB830> I<EC03FC4A7E140F141FA2143F147F157E14FEA2EB01FCEB03F8A2EB07F0A2
EB0FE0EB1FC0A2EB3F80A2EB7F0013FEA2485A485AA2485AA2485A485AA2485AA248C7FC
12FEB8FC1780A46C1600C8007EC7FCAA91387FFFFE91B6FCA46E5B29397DB830> I<000F
B612804815C05AA316800180C8FCAEEB83FF019F13C090B512F015FC8181D9FE03138090
39F0007FC049133F0180EB1FE06CC7120F000E15F0C81207A216F81503A31218127EA2B4
FC150716F048140F6C15E06C141F6DEB3FC06D137F3A3FE001FF80261FFC0F13006CB55A
6C5C6C5C6C14E06C6C1380D90FFCC7FC25397BB730> I<EC0FF8EC7FFF49B51280010714
E0131F4914F090387FF80F9039FFC007F84813803803FE005B485A4848EB03F0ED01E048
4890C7FC5B123F5BA2127FEB000C903803FFE0010F13F8D8FF3F13FE48B6FCB7128016C0
9039FE007FE001F8EB1FF001E0130F49EB07F849EB03FCA290C7120116FE1500A37EA46C
7E15016D14FC121F6D1303000FEC07F86D130F6C6CEB1FF06DEB3FE03A03FF81FFC06C90
B512806C15006D5B011F13F8010713E001011380273A7CB830> I<127CB712FC16FEA416
FC48C7EA0FF816F0ED1FE0007CEC3FC0C8EA7F80EDFF00A24A5A4A5A5D14075D140F5D4A
5AA24A5AA24AC7FCA25C5C13015CA213035CA213075CA4495AA6131F5CA96D5A6DC8FC27
3A7CB830> I<49B4FC011F13F0017F13FC90B57E0003ECFF804815C048010113E03A1FF8
003FF049131FD83FC0EB07F8A24848EB03FC90C71201A56D1303003F15F86D13076C6CEB
0FF06C6CEB1FE0D807FCEB7FC03A03FF83FF806C90B512006C6C13FC011F13F0497F90B5
12FE48802607FE0013C0D80FF8EB3FE0D81FE0EB0FF04848EB07F8491303007F15FC90C7
12014815FE481400A66C14016C15FC6D1303003F15F86D1307D81FF0EB1FF06D133F3A0F
FF01FFE06C90B512C06C1580C6ECFE006D5B011F13F0010190C7FC273A7CB830> I<49B4
FC010F13E0013F13F890B57E4880488048010113803A0FFC007FC0D81FF0EB3FE0484813
1F49EB0FF048481307A290C7EA03F85A4815FC1501A416FEA37E7E6D1303A26C6C13076C
6C130F6D133FD80FFC13FF6CB6FC7E6C14FE6C14F9013FEBE1FC010F1381903800600114
00ED03F8A2150716F0150F000F15E0486C131F486CEB3FC0157FEDFF804A1300EC07FE39
1FF01FFC90B55A6C5C6C5C6C1480C649C7FCEB3FF0273A7CB830> I<120FEA3FC0EA7FE0
A2EAFFF0A4EA7FE0A2EA3FC0EA0F00C7FCAF120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA
3FC0EA0F000C276EA630> I<EA03C0EA0FF0EA1FF8A2EA3FFCA4EA1FF8A2EA0FF0EA03C0
C7FCAFEA03C0EA0FF0121F13F8123F13FCA3121FA2120F12031200120113F8120313F012
07EA1FE0123FEA7FC0EAFF80EA7F00127E12380E3470A630> I<16F01503ED07F8151F15
7FEDFFF014034A13C0021F138091383FFE00ECFFF8495B010713C0495BD93FFEC7FC495A
3801FFF0485B000F13804890C8FCEA7FFC5BEAFFE05B7FEA7FF87FEA1FFF6C7F000313E0
6C7F38007FFC6D7E90380FFF806D7F010113F06D7FEC3FFE91381FFF80020713C06E13F0
1400ED7FF8151F1507ED03F01500252F7BB230> I<007FB7FCA2B81280A36C16006C5DCB
FCA7003FB612FE4881B81280A36C1600A229157DA530> I<1278127EB4FC13C07FEA7FF8
13FEEA1FFF6C13C000037F6C13F86C6C7EEB1FFF6D7F010313E06D7F9038007FFC6E7E91
380FFF806E13C0020113F080ED3FF8151F153FEDFFF05C020713C04A138091383FFE004A
5A903801FFF0495B010F13804990C7FCEB7FFC48485A4813E0000F5B4890C8FCEA7FFE13
F8EAFFE05B90C9FC127E1278252F7BB230> I<EB1FFE90B512E0000314F8000F14FE4880
481580267FF80313C09038C0007F48C7121F16E0150FA3127E151F0018EC7FC0C812FF02
0313804A13004A5AEC1FF84A5AEC7FC04A5A92C7FC495AA2495A5CA213075CA86D5A90C9
FCA8EB01C0EB07F0A2497EA36D5AA2EB01C023397AB830> I<147F4A7EA2497FA4497F14
F7A401077F14E3A3010F7FA314C1A2011F7FA490383F80FEA590387F007FA4498049133F
90B6FCA34881A39038FC001F00038149130FA4000781491307A2D87FFFEB7FFFB56CB512
80A46C496C130029397DB830> 65 D<007FB512F0B612FE6F7E82826C813A03F8001FF8
15076F7E1501A26F7EA615015EA24B5A1507ED1FF0ED7FE090B65A5E4BC7FC6F7E16E082
9039F8000FF8ED03FC6F7E1500167FA3EE3F80A6167F1700A25E4B5A1503ED1FFC007FB6
FCB75A5E16C05E6C02FCC7FC29387EB730> I<91387F803C903903FFF03E49EBFC7E011F
13FE49EBFFFE5B9038FFE07F48EB801F3903FE000F484813075B48481303A2484813015B
123F491300A2127F90C8FC167C16005A5AAC7E7EA2167C6D14FE123FA27F121F6D13016C
6C14FCA26C6CEB03F86D13076C6CEB0FF03901FF801F6C9038E07FE06DB512C06D14806D
1400010713FC6D13F09038007FC0273A7CB830> I<003FB512E04814FCB67E6F7E6C816C
813A03F8007FF0ED1FF8150F6F7E6F7E15016F7EA2EE7F80A2163F17C0161FA4EE0FE0AC
161F17C0A3163F1780A2167F17005E4B5A15034B5A150F4B5AED7FF0003FB65A485DB75A
93C7FC6C14FC6C14E02B387FB730> I<007FB7FCB81280A47ED803F8C7123FA8EE1F0093
C7FCA4157C15FEA490B5FCA6EBF800A4157C92C8FCA5EE07C0EE0FE0A9007FB7FCB8FCA4
6C16C02B387EB730> I<003FB712804816C0B8FCA27E7ED801FCC7121FA8EE0F8093C7FC
A5153E157FA490B6FCA69038FC007FA4153E92C8FCAE383FFFF8487FB5FCA27E6C5B2A38
7EB730> I<02FF13F00103EBC0F8010F13F1013F13FD4913FF90B6FC4813C1EC007F4848
133F4848131F49130F485A491307121F5B123F491303A2127F90C7FC6F5A92C8FC5A5AA8
92B5FC4A14805CA26C7F6C6D1400ED03F8A27F003F1407A27F121F6D130F120F7F6C6C13
1FA2D803FE133F6C6C137FECC1FF6C90B5FC7F6D13FB010F13F30103EBC1F0010090C8FC
293A7DB830> I<3B3FFF800FFFE0486D4813F0B56C4813F8A26C496C13F06C496C13E0D8
03F8C7EAFE00B290B6FCA601F8C7FCB3A23B3FFF800FFFE0486D4813F0B56C4813F8A26C
496C13F06C496C13E02D387FB730> I<007FB6FCB71280A46C1500260007F0C7FCB3B3A8
007FB6FCB71280A46C1500213879B730> I<49B512F04914F85BA27F6D14F090C7EAFE00
B3B3123C127EB4FCA24A5A1403EB8007397FF01FF86CB55A5D6C5C00075C000149C7FC38
003FF025397AB730> I<D83FFF90380FFF80486D4813C0B56C5AA26C497E6C496C1380D8
03F0903803F8004B5A4B5A151F4B5A5E4BC7FC15FE14014A5A5D4A5A4A5A141F5D4A5A4A
C8FC5C13F18101F37F13F790B57E14EFECC7F01483EC03F8140101FE7F496C7E5B157F49
7F82151F82150F826F7EA26F7E1501821500D83FFF903803FFC0486D4813E0B56C5AA26C
497E6C496C13C02B387FB730> I<383FFFF8487FB57EA26C5B6C5BD801FCC9FCB3B0EE0F
80EE1FC0A9003FB7FC5AB8FCA27E6C16802A387EB730> I<D83FF8ECFFE0486C4913F048
6C4913F8A2007F16F06C6C4913E00007160001EF14BFEC800FA39039E7C01F3FA4ECE03F
01E3133EA2ECF07EA201E1137CA2ECF8FCA201E013F8A214FDEC7DF0A3147FEC3FE0A3EC
1FC0A2EC070091C7FCADD83FFC903801FFE0486C4913F0B54913F8A26C486D13F06C486D
13E02D387FB730> I<D83FFC90381FFF80486C4913C0B54913E0A26C6D6C13C06C6E1380
0003913801F800EBF7C0A3EBF3E0A314F013F1A214F8A213F014FCA2147C147EA2143E14
3FA2141FA21581A2140F15C1A2140715E1A2140315F1A21401A215F91400A3157DA3153F
EA3FFF481380B5EAC01FA26CEB800F6C496C5A2B387EB730> I<90383FFFE048B512FC00
0714FF4815804815C04815E0EBF80001E0133FD87F80EB0FF0A290C71207A44815F84814
03B3A96C1407A26C15F0A36D130FA26D131F6C6CEB3FE001F813FF90B6FC6C15C06C1580
6C1500000114FCD8003F13E0253A7BB830> I<007FB512F0B612FE6F7E16E0826C813903
F8003FED0FFCED03FE15016F7EA2821780163FA6167F17005EA24B5A1503ED0FFCED3FF8
90B6FC5E5E16804BC7FC15F001F8C9FCB0387FFFC0B57EA46C5B29387EB730> I<90383F
FFE048B512FC000714FF4815804815C04815E0EBF80001E0133F4848EB1FF049130F90C7
1207A44815F8481403B3A8147E14FE6CEBFF076C15F0EC7F87A2EC3FC7018013CF9038C0
1FFFD83FE014E0EBF80F90B6FC6C15C06C15806C1500000114FCD8003F7FEB00016E7EA2
1680157F16C0153F16E0151F16F0150FED07E025467BB830> I<003FB57E4814F0B612FC
15FF6C816C812603F8017F9138003FF0151F6F7E15071503821501A515035E1507150F4B
5A153F4AB45A90B65A5E93C7FC5D8182D9F8007FED3FE0151F150F821507A817F8EEF1FC
A53A3FFF8003FB4801C0EBFFF8B56C7E17F06C496C13E06C49EB7FC0C9EA1F002E397FB7
30> I<90390FF803C0D97FFF13E048B512C74814F74814FF5A381FF80F383FE001497E48
48137F90C7123F5A48141FA2150FA37EED07C06C91C7FC7F7FEA3FF0EA1FFEEBFFF06C13
FF6C14E0000114F86C80011F13FF01031480D9003F13C014019138007FE0151FED0FF0A2
ED07F8A2007C140312FEA56C140716F07F6DEB0FE06D131F01F8EB3FC001FF13FF91B512
80160000FD5CD8FC7F13F8D8F81F5BD878011380253A7BB830> I<003FB712C04816E0B8
FCA43AFE003F800FA8007CED07C0C791C7FCB3B1011FB5FC4980A46D91C7FC2B387EB730
> I<3B7FFFC007FFFCB56C4813FEA46C496C13FCD803F8C7EA3F80B3B16D147F00011600
A36C6C14FE6D13016D5CEC800390393FE00FF890391FF83FF06DB55A6D5C6D5C6D91C7FC
9038007FFCEC1FF02F3980B730> I<D87FFE90380FFFC0B54913E06E5AA24A7E6C486D13
C0D807F0903801FC00A26D130300035DA46C6C495AA46C6C495AA46D131F6D5CA3EC803F
013F5CA46D6C48C7FCA490380FE0FEA401075B14F1A301035BA314FB01015BA314FFA26D
5BA46E5A6E5A2B397EB730> I<D83FFC903801FFE0486C4913F000FF16F8A2007F16F06C
486D13E0D81FC09038001FC0000F1680A76D143F00071600A7000390380F803E9039F01F
C07EEC3FE0A3EC7FF0A2147D0001157CA29039F8FDF8FCA314F8A300005D01F913FCA2EC
F07CA201FD137DA2017D5CECE03DA3017F133FA2ECC01FA2013F5CA2EC800F6D486C5A2D
397FB730> I<3A3FFF01FFF84801837F02C77FA202835B6C01015B3A01FC007F806D91C7
FC00005C6D5BEB7F01EC81FCEB3F8314C3011F5B14E7010F5B14FF6D5BA26D5BA26D5BA2
6D90C8FCA4497FA2497FA2815B81EB0FE781EB1FC381EB3F8181EB7F0081497F49800001
143F49800003141F49800007140FD87FFEEB7FFFB590B5128080A25C6C486D130029387D
B730> I<001FB612FC4815FE5AA490C7EA03FCED07F816F0150FED1FE016C0153FED7F80
003E1500C85A4A5A5D14034A5A5D140F4A5A5D143F4A5A92C7FC5C495A5C1303495A5C13
0F495A5C133F495A91C8FC5B4848147C4914FE1203485A5B120F485A5B123F485A90B6FC
B7FCA46C15FC27387CB730> 90 D<007FB5FCB61280A4150048C8FCB3B3B3A5B6FC1580
A46C140019476DBE30> I<127CA212FEA27EA26C7EA26C7EA26C7EA26C7EA26C7EA26C7E
A212017FA26C7EA26D7EA26D7EA26D7EA26D7EA26D7EA26D7EA2130180A26D7EA26E7EA2
6E7EA26E7EA26E7EA26E7EA26E7EA2140181A26E7EA2ED7F80A2ED3FC0A2ED1FE0A2ED0F
F0A2ED07F8A21503A2ED01F0150025477BBE30> I<007FB5FCB61280A47EC7123FB3B3B3
A5007FB5FCB6FCA46C140019477DBE30> I<1307EB1FC0EB7FF0497E000313FE000FEBFF
80003F14E0D87FFD13F039FFF07FF8EBC01FEB800F38FE0003007CEB01F00010EB00401D
0E77B730> I<007FB612F0A2B712F8A36C15F0A225077B7D30> I<EB7FF80003B5FC4814
C04880488048809038E01FFC9038C003FE14016E7E6C487F6CC77FC8123FA491B5FC130F
137F48B6FC12075A48EB803F383FF800EA7FE0138048C7FC5AA4157F7E6C6C13FFEBC003
263FF01FEBFF8090B712C07E6C14EF000314876CD9FE01138026003FE0C8FC2A2A7BA830
> 97 D<EA3FFC487E12FFA2127F123F1200AAEC03FE91381FFF80027F13E091B57E90B6
12FC82ECFE079138F001FF4A6C13804A137F4AEB3FC091C7121F17E049140FA217F01607
A8160FA217E07F161F6EEB3FC0A26EEB7F806E13FFDAF00313009138FC0FFE91B55A5E49
5CD97E7F13C0D93C1F90C7FC90380003FC2C3980B730> I<ECFFE0010713FC011F7F017F
7F90B612804815C048EB807F3907FC003F485A485A49EB1F804848EB0F004990C7FC127F
90C9FCA25A5AA87E7EA27F003FEC07C06DEB0FE06C7E6D131F6C6C14C0D807FE133F9039
FFC0FF806C90B5FCC615006D5B011F13F801075B01011380232A7AA830> I<913801FFE0
4A7F5CA28080EC0007AAEB03FE90381FFF874913E790B6FC5A5A481303380FFC00D81FF0
133F49131F485A150F4848130790C7FCA25AA25AA87E6C140FA27F003F141F6D133F6C7E
6D137F390FF801FF2607FE07EBFFC06CB712E06C16F06C14F76D01C713E0011F010313C0
D907FCC8FC2C397DB730> I<49B4FC010713E0011F13F8017F7F90B57E48804801811380
3A07FC007FC04848133FD81FE0EB1FE0150F484814F0491307127F90C7FCED03F85A5AB7
FCA516F048C9FC7E7EA27F003FEC01F06DEB03F86C7E6C7E6D1307D807FEEB1FF03A03FF
C07FE06C90B5FC6C15C0013F14806DEBFE00010713F8010013C0252A7CA830> I<EDFF80
020713E0021F13F05C4A13F891B5FC491387903803FE079138FC03F0903907F800C04A13
00A8003FB612C04815E0B7FCA36C15C0260007F0C7FCB3A9003FB512FE4880B71280A26C
15006C5C25397DB830> I<D903FC13FF90261FFF8713C04913DF90B712E05A5A2607FE07
138F903AF801FE07C048486C6CC7FCA2497F001F8149133FA56D137F000F92C7FC6D5BA2
6C6C485AEBFE0790B55A5D485C15C001DF5BD9C3FCC8FC01C0C9FCA37F7F6CB512F015FF
6C15C04815F0488148813A3FE0001FFE0180130148C8127F007E8100FE168048151FA56C
153F007FED7F006D5C6C6C495A01F013076CB4EB7FFC6C90B55A6C5D000115C06C6C91C7
FC011F13FC010113C02B3E7DA730> I<EA3FFC487E12FFA2127F123F1200AAEC01FE9138
0FFF80023F13E091B57E90B67EA29138FE07FCECF8039138E001FE14C0EC8000A291C7FC
A25BB3A23B3FFFF81FFFF8486D4813FCB500FE14FEA26C01FC14FC6C496C13F82F3880B7
30> I<14E0EB03F8A2497EA36D5AA2EB00E091C8FCA9381FFFF8487F5AA27E7EEA0001B3
A9003FB612C04815E0B7FCA27E6C15C023397AB830> I<EC01C0EC07F0A2EC0FF8A3EC07
F0A2EC01C091C7FCA990B512F04814F8A47EEB0003B3B3A5EC07F0A2123C007EEB0FE0B4
131FEC3FC0147F90B512806C14005C6C5B000F13F0000313C01D4E7CB830> I<EA7FF848
7EA4127F1200AB0203B512804A14C017E0A217C06E14809139001FE0004B5A4B5A4BC7FC
4A5A4A5AEC0FF84A5A4A5A4A5A4A5A01FD7F90B57E8114F7ECE3F8ECC1FCEC81FEEC00FF
497F496D7E6F7E826F7E15076F7E6F7E3B7FFFF81FFFE0B56C4813F017F8A217F06C496C
13E02D387FB730> I<387FFFF8B57EA47EEA0001B3B3A8007FB612F0B712F8A46C15F025
387BB730> I<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F15DF92B57E6C010F
13872607FE07EB03F801FC13FE9039F803FC01A201F013F8A301E013F0B3A23C7FFE0FFF
07FF80B548018F13C0A46C486C01071380322881A730> I<EC01FE3A3FFC0FFF80267FFE
3F13E000FF90B57E90B67E7E6C9038FE07FCC6EBF8039138E001FE14C0EC8000A291C7FC
A25BB3A23B3FFFF81FFFF8486D4813FCB500FE14FEA26C01FC14FC6C496C13F82F2880A7
30> I<49B4FC010F13E0013F13F8497F90B57E0003ECFF8014013A07FC007FC04848EB3F
E0D81FE0EB0FF0A24848EB07F8491303007F15FC90C71201A300FEEC00FEA86C14016C15
FCA26D1303003F15F86D13076D130F6C6CEB1FF06C6CEB3FE06D137F3A07FF01FFC06C90
B512806C15006C6C13FC6D5B010F13E0010190C7FC272A7CA830> I<EC03FE3A3FFC1FFF
80267FFE7F13E000FF90B57E90B612FC6C816CEBFE07C69038F001FF4A6C13804A137F4A
EB3FC091C7121F17E049140FA217F01607A8160FA217E07F161F6EEB3FC0A26EEB7F806E
13FFDAF00313009138FC0FFE91B55A5E495C6E13C0021F90C7FCEC03FC91C9FCAD383FFF
F8487FB57EA26C5B6C5B2C3C80A730> I<49B413F8010FEBC1FC013F13F14913FD48B6FC
5A481381390FFC007F49131F4848130F491307485A491303127F90C7FC15015A5AA77E7E
15037FA26C6C1307150F6C6C131F6C6C133F01FC137F3907FF01FF6C90B5FC6C14FD6C14
F9013F13F1010F13C1903803FE0190C7FCAD92B512F84A14FCA46E14F82E3C7DA730> I<
ED07F83A3FFF803FFF486DB51280B512C302CF14C06C13DF6C9038FFFC3FD8001F13E092
38801F809238000F004A90C7FC5C5C5CA25CA45CAF003FB512FC4880B7FCA26C5C6C5C2A
287EA730> I<90381FFC1E48B5129F000714FF5A5A5A387FF007EB800100FEC7FC4880A4
6C143E007F91C7FC13E06CB4FC6C13FC6CEBFF806C14E0000114F86C6C7F01037F903800
0FFF02001380007C147F00FEEC1FC0A2150F7EA27F151F6DEB3F806D137F9039FC03FF00
90B6FC5D5D00FC14F0D8F83F13C026780FFEC7FC222A79A830> I<EB0780497E131FA900
3FB612E04815F0B7FCA36C15E026001FC0C7FCB216F8ED01FCA5ECE003010FEB07F814F0
9138FC1FF06DB512E06D14C016806D14009038007FFCEC1FF026337EB130> I<D83FFCEB
3FFC486C497E00FF14FFA2007F147F003F143F00001400B3A41501A2150315076D130F90
3A7FC07FFFF891B612FC6D15FE7F6D4913FC6D9038F87FF8010001C0C7FC2F2880A630>
I<3B3FFFC07FFF80486DB512C0B515E0A26C16C06C496C13803B01F80003F000A26D1307
00005DA26D130F017E5CA2017F131F6D5CA2EC803F011F91C7FCA26E5A010F137EA2ECE0
FE01075BA214F101035BA3903801FBF0A314FF6D5BA36E5A6E5A2B277EA630> I<3B3FFF
C01FFFE0486D4813F0B515F8A26C16F06C496C13E0D807E0C7EA3F00A26D5C0003157EA5
6D14FE00015DEC0F80EC1FC0EC3FE0A33A00FC7FF1F8A2147DA2ECFDF9017C5C14F8A301
7E13FBA290393FF07FE0A3ECE03FA2011F5C90390F800F802D277FA630> I<3A3FFF81FF
FC4801C37FB580A26C5D6C01815BC648C66CC7FC137FEC80FE90383F81FC90381FC3F8EB
0FE3ECE7F06DB45A6D5B7F6D5B92C8FC147E147F5C497F81903803F7E0EB07E790380FE3
F0ECC1F890381F81FC90383F80FE90387F007E017E137F01FE6D7E48486D7E267FFF80B5
FCB500C1148014E3A214C16C0180140029277DA630> I<3B3FFFC07FFF80486DB512C0B5
15E0A26C16C06C496C13803B01FC0003F000A2000014076D5C137E150F017F5C7F151FD9
1F805BA214C0010F49C7FCA214E00107137EA2EB03F0157C15FCEB01F85DA2EB00F9ECFD
F0147D147FA26E5AA36E5AA35DA2143F92C8FCA25C147EA2000F13FE486C5AEA3FC1EBC3
F81387EB8FF0EBFFE06C5B5C6C90C9FC6C5AEA01F02B3C7EA630> I<001FB612FC4815FE
5AA316FC90C7EA0FF8ED1FF0ED3FE0ED7FC0EDFF80003E491300C7485A4A5A4A5A4A5A4A
5A4A5A4A5A4990C7FC495A495A495A495A495A495A4948133E4890C7127F485A485A485A
485A485A48B7FCB8FCA46C15FE28277DA630> I<ED3FF0913803FFF8140F5C147F16F091
38FFF00092C7FC495A5CB3A21303495A133F383FFFF0B55A5C91C8FC14C080003F7F3800
3FF813076D7E1301B3A2806D7E15F091387FFFF016F8141F8014039138003FF025477BBE
30> I<127CA212FEB3B3B3AD127CA207476CBE30> I<EA7FE0EAFFFE6D7E8014F07EC66C
7E13076D7E1301B3A2806D7E15E091387FFFE06E13F8801407141F5C4A13E09138FFE000
92C7FC495A5CB3A21303495A137F387FFFF0B5FC14C05C49C8FCEA7FE025477BBE30> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr7 7 5
/Fl 5 54 df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521> 49
D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
0012065A001FB5FC5A485BB5FCA219267DA521> I<13FF000313E0380F01F8381C007C00
30137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC3800
01E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01
F03807FFC0C690C7FC19277DA521> I<1438A2147814F81301A2130313071306130C131C
131813301370136013C012011380EA03005A120E120C121C5A12305A12E0B612E0A2C7EA
F800A7497E90383FFFE0A21B277EA621> I<0018130C001F137CEBFFF85C5C1480D819FC
C7FC0018C8FCA7137F3819FFE0381F81F0381E0078001C7F0018133EC7FC80A21580A212
30127C12FCA3150012F00060133E127000305B001C5B380F03E03803FFC0C648C7FC1927
7DA521> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmsl10 10.95 50
/Fm 50 123 df<39078003C0391FE00FF0003F131F01F013F8A6390F3007980000EB0018
0170133801601330A201E01370491360A2000114E039038001C001001380481303000EEB
0700000C1306001C130E485B485B485B4813601D1C75BE2D> 34
D<1530157015E0EC03C0EC0780EC0F00141E5C147C5C5C495A1303495A5C130F49C7FCA2
133E137E137C13FC5B1201A2485AA25B1207A2485AA3485AA448C8FCA45A127EA512FE5A
A95AA87EA2127CA5123C123EA2121EA2121F7EA26C7EA26C7EA26C7E120013707FA21318
1C5A74C323> 40 D<497E806D7E1470147880A280A280A2EC0780A215C01403A215E0A3
EC01F0A615F8AF140315F0A5140715E0A4140F15C0A3141F1580A3EC3F00A2143E147EA2
147C14FC5C13015C13035C13075C495AA249C7FC131E133E5B13785B485A485A12075B00
0EC8FC5A5A12F05A1D5A7FC323> I<EA0780EA0FE0EA1FF0123FA5121FEA0F301200A213
701360A213E013C0120113801203EA07001206120E5A5A5A5A5A0C1C7A8919> 44
D<007FB5FCA2B512FEA418067C961E> I<121EEA3F80EA7FC012FFA41380EA7F00123C0A
0A788919> I<EC07F8EC3FFF9138FC0FC0903903F003E0903907C001F0D90F8013F849C7
FC013E14FC017E147C017C147E13FC485AA20003157F5B1207A2120F5BA2121F16FF5BA2
123FA44848EB01FEA648C7EA03FCA5ED07F8A25A16F0A2150F16E0A3ED1FC0A21680007E
143F1600157E123E003F5C4A5AD81F805B000FEB07E06C6C485A2603F03FC7FC3800FFFC
EB1FE0283F79BC2D> 48 D<157015F014011407143F903803FFE0137FEBFFCFEBF80F13
00141F15C0A5143F1580A5147F1500A55C5CA513015CA513035CA513075CA5130F5CA313
1F497EB612F8A31D3D78BC2D> I<EC07FC91383FFF809138F80FE0903903C007F0903907
8003FC90380F0001011C14FE013C14FF137F1480EBFFC0A31480A291380003FE137E90C7
FCED07FC16F8150F16F0ED1FE016C0ED3F80ED7E005DEC07F0903803FF8015F090380001
FC6E7EED7F80ED3FC0A2ED1FE016F0A316F8A4120EEA3F80486C133F16F012FFA216E015
7F5B48C7EAFFC000F01580007049130012786C495A003EEB07F86C495A390FE03FE00003
B51280C649C7FCEB1FE0283F7ABC2D> 51 D<ED7F80913803FFE091380FC0F091383E00
3802FC131C495A494813FE903807E003EB0FC090381F8007133FD97F0013FC01FE1303ED
01F0484890C7FC1203A2485AA2120F5BA2001FEB3F809038E0FFE0393FE3C0F89038E700
7C01EE7F01FC133F4848EB1F80A24914C05B16E0A2485AA216F05BA2ED3FE0A290C7FCA4
157F16C0A316804814FF007E1500007F5C14016C5C4A5A6C6C485A4A5A6C6C485A2607E0
7FC7FC3803FFFEC613F8EB3FC0273F78BC2D> 54 D<EA0380120713E090B712805AA217
005E485D5E001EC85A484A5A00385D150300784A5A00704AC7FC151E5D485CC8127015F0
4A5A4A5A4A5A4AC8FC140E141E5C147C14785C1301495AA213075C130F495AA2133F91C9
FC5BA25B5B1201A312035BA21207A3485AA5121F5BA26C5AEA0780294074BD2D> I<EC03
FC91381FFF8091387C07E0903901F001F0903903C000F84948137C49C7123E131E013E14
1F133C137C137813F8A3163F486C143E167E6D147C6C6C14FC6E13F89138C001F09138F0
03E090397FF807C09138FC0F0090383FFF3E6D13F86D13E06D7F01017F8101077F90391F
1FFF80D93E0F13C0EBF8072601F00113E048486C13F04848137F4848131F001FEC0FF890
C71207003E1403A2481401A300FC15F05AA3ED03E0A26CEC07C0007C1580007E140F003E
EC1F00003F143E6C6C5B6C6C485A3907F00FE00001B512806C6C48C7FCEB0FF0283F7ABC
2D> I<EC07F8EC3FFE9138FC0F80903901F007C0903907E003E0D90FC013F090381F8001
013F14F8EB7F004914FC48481300A24848EB01FEA21207A3485AA41503121F5BA31507A2
000F15FC150FA2151F1207153F000315F86C6C137F000014EF90387C01CF90393E078FF0
90380FFE1FEB03F890C713E0A2ED3FC0A3ED7F8016005D003F5C487E4A5A00FF495A5D4A
5A49485A48495A007049C7FC0078137E383E03FC381FFFF06C13C0D801FEC8FC273F79BC
2D> I<17E016011603831607A2160FA2161F83163FA2167F167716F7EEE7FCED01E316C3
150316831507EE03FEED0F01150E151E151C153C03387FED7800157015F05D4A4880177F
4A5AA24AC7FCA2020E81173F5C021FB6FC5CA20270C7EA3FE0171F5CA2495AA249488117
0F49C8FCA2130EA24982013C1507A2137CD801FE4B7E2607FF80EC3FFEB500F00107B512
FC19F85E3E417DC044> 65 D<DCFFC01338030F01F01378037F01FC13F0913A01FF803F
01913A07FC000781DA1FE0EB03C3DA7FC0EB01E74AC812FF4948ED7FE0D907FC153F495A
4948151F495A4948150F494816C018074890C9FC485AA2485A000F1880491603121FA248
481607A295C7FC485AA412FF5BA75BA2181C183C1838A27F007F1778187018F0003F5F6D
150160001F16036C6C4B5A95C7FC6C6C5D6C6C151E6C6C5D6C6C15F86D6C495A6D6CEB07
C0D91FF0EB1F80D907FE01FEC8FC0101B512F86D6C13E0DA07FEC9FC3D4276BF42> 67
D<013FB812F8A39026007FF0C7127F6E48140F18034B14011800A31978147F4B1570A502
FF147092C7FCA3190017F0495D4A1301A21607161F91B6FC495DA29138FC003F160F1607
160301075D5CA219E0180119C0010FEC07004A90C712031980A218071900011F5E5C181E
A2183E183C013F167C4A15FC4D5A1707017F151F01FF4AB45AB9FCA2603D3E7DBD3E> 69
D<013FB812E0A3903A007FF000016E48EB003F180F4B14071803A31801147F4B15C0A514
FF92C71270A395C7FC17F0495D5C160116031607161F49B65AA39138FC003F160F160701
075D4A1303A5010F4AC8FC5C93C9FCA4131F5CA5133F5CA3137FEBFFF0B612F8A33B3E7D
BD3B> I<4BB46C1370031F01F013F0037F9038FC01E0913A03FF807E03913A0FF8000F83
DA1FE0EB07C7DA7F80EB01EF4AC812FFD903FE16C04948157F4948153F495A4948151F49
5A4948168091C9120F5A485AA2485A000F18004982121FA248485EA295C7FC485AA412FF
5BA6043FB512E05BA29339001FFC00715AA2607F127FA2171F123F6D5EA2121F7F000F16
3F6C7E6C6C4B5A7F6C6C15FF6C6DEB01EFD93FC0EB07C7D91FF0EB1F87D907FE9038FE03
800101B5EAF8016D6C01E0C8FCDA07FEC9FC3C4276BF47> I<013FB5D8F807B6FC04F015
FEA29026007FF0C7380FFE006E486E5AA24B5DA4180F147F4B5DA4181F14FF92C85BA418
3F5B4A5EA491B8FC5B6102FCC8127FA318FF13074A93C7FCA45F130F4A5DA41703131F4A
5DA41707133F4A5DA3017F150F496C4A7EB6D8E01FB512FC6115C0483E7DBD44> I<011F
B512FC5BA29039003FF8006E5AA25DA5143F5DA5147F5DA514FF92C7FCA55B5CA513035C
A513075CA5130F5CA5131F5CA3133F497E007FB512F0A2B6FC263E7EBD21> I<021FB512
FCA3DA000713006F5AA25EA41507A25EA4150FA25EA4151FA25EA4153FA25EA4157FA25E
A415FFA293C7FCA45C121FD87F805BEAFFC0A214035D13804A5AEAFE0000F8495A48495A
00705C6C495A6C01FEC8FC380F81FC3803FFE0C690C9FC2E407ABD2F> I<90263FFFF093
381FFFF85013F0629026007FF8EFF000023F4D5AA2023B933801DFC0A2DA39FCED039FA2
F1073F14790271040E5BEC70FE191C19381A7F02F01670DAE07F94C7FC19E0A2F001C062
01016D6C495A02C05FF00700A2180E6F6C14010103161C028003385BA218706F7EF0E003
13070200DA01C05BA2923907F00380A294380700075B010E902603F80E5C5FA25F190F01
1E6D6C5A011C605FA2EEFDC0DB00FF141F013C5D013860013C92C7FC017C5C01FE027E14
3F2607FF80017C4A7EB500FC037FB512E004785E4A1338553E7CBD53> 77
D<013FB612FEEFFFE018F8903B007FF0000FFC6E48EB01FF7113804BEC7FC0183F19E0F0
1FF0A2147F5D19F8A402FFED3FF092C8FCA219E0A2F07FC05B4AEDFF8019004D5A4D5AEF
0FF80103ED3FE04A903801FF8091B648C7FC17F002FCCAFCA213075CA5130F5CA5131F5C
A5133F5CA3137F497EB612E0A25D3D3E7DBD3E> 80 D<9238FF80070207EBE00F021FEB
F81E91387F00FE02FCEB1F3ED903F0EB0FFE49481307494813034AEB01FC49C7FC491400
133E137E177C491578A57F1770A26D1500808080EB7FFEECFFE06D13FEEDFFC06D14F06D
14FC010380010080143F02031480DA003F13C015031500EE7FE0163F161FA2160F121CA3
1607160F003C16C0A31780003E151F1700007E5D007F153E6D5C16FC01E0495AD87DF049
5AD8FCFCEB0FC03AF87F803F8027F01FFFFEC7FCD8E00713F839C0007FC030427BBF33>
83 D<0007B912F0A33C0FFE000FF8003F01F0160F01C04A13034848160190C7FC121EF0
00E048141F5E1238A212781270153F5E5AA3C81600157F5EA515FF93C9FCA55C5DA51403
5DA514075DA5140F5DA3141FEC7FFC0003B7FCA33C3D76BC42> I<B6017FB5D88007B512
804A1A00A2000701C0010101E0C713F06C90C80180EC3FC06C48735A99C7FC057F150E1B
1E6D191C6C1A3C1B3805FF15787214705E636EEB03BF017F4E5AEE073F505A040E7F051F
4AC8FC161C6E170E013F143862167804706D5BEEF00F04E05D90381FE00104C015F00303
5E0480140106F85B9226070007130302F05F010F010E150797C9FC5D190E4BEB03FC616E
5A01075F5D61DAF9C014FE05015BECFB8002FF6F5A7F92C75CA24A93CAFC835C606D5A60
5C604A15781870594074BD5D> 87 D<0118130C0138131C491338491370484813E03903
8001C0390700038000061400000E5B48130E0018130C0038131C00301318A20070133800
601330A300EFEB778039FFC07FE001E013F0A4397FC03FE0A2393F801FC0391E000F001E
1C6CBE2D> 92 D<EC7FC0903803FFF890380FC07E90383E003F496D7E01FF6D7E82A248
140782A26C5A137890C7120FA25EA2EC03FF147F903807FF1FEB1FE0D97F805B3801FE00
EA03F8485A4848133F485A003F5D49EC81C048C7FCA2157F48ED03804814FFA2007F5B91
3903BF0700903880073F3A3FC00E1F8E260FE03C13FC3A03FFF00FF83A007FC003E02A2A
7CA82D> 97 D<EB3F80EA1FFFA3C6FC137FA291C9FCA55B5BA512015BA4EC07F80003EB
3FFF9039F8F80FC09039FBE003E09039FF8001F891C77E5B4848147E49147F5B821780A2
120F5B17C0A3167F001F16805BA4EEFF00123F5B4B5AA24B5A5E007F4A5AA24B5A6D495A
4BC7FCD87CE0137E39F87001F839F03C07E039E00FFF80260003FCC8FC2A4077BE33> I<
EC1FF0ECFFFE903903F01F8090390FC003C0D93F0013E0017E130F49131F000115F04848
EB3FE0485AA24848EB1FC0001FEC0F004990C7FC123FA2485AA412FF90C9FCA96CEC0380
150716006C6C5B151E001F5C6C6C5B6C6C5B6C6C485A3901F80F8026007FFEC7FCEB0FF0
242A7AA828> I<EE03F8ED01FFA3ED000F1607A217F0A4160FA217E0A4161FA217C0A491
380FF03FECFFFC902603F81F138090390FC007BF90391F8003FF90387E0001497F000115
7F48481500485A120F5B001F5D485A5E5B127FA2150112FF90C75BA41503A25EA37E1507
A26C4A5A7F001F141F6C6C133F6C6CEBFFF83B03F001EFFFC03900F80F8F90383FFE0FD9
0FF0EBE0002D407ABE33> I<EC3FE0903801FFF8903807E07E90380F801F90393F000F80
017E14C049EB07E0485A12034848EB03F0485AA2121F5B123FA248481307A290B6FCA2D8
FF80C8FC90C9FCA87EED01C015036C15806D1307001FEC0F006D131E000F5C6C6C5B6C6C
485A3900FC07C0D93FFFC7FCEB07F8242A7BA828> I<ED07F0ED3FFCEDFC1E913803F03F
4A48B4FC4A481380141FEC3F81DA7F0113008102FE137C93C7FCA213015CA513035CA500
07B512F8A3260007F0C8FCA3130F5CA5131F5CA5133F5CA5137F91C9FCA55B5BA4EA03FF
007F13FEB5FCA229407DBF1C> I<177C913907F803FE91393FFE0F8F9139FC0F9C3F9039
01F007F8903907E003E0D90FC013F0011F903801F80C02801400133FD97F007FA315035B
495CA3017E495A5E150F6D5C6D495A90263F803EC7FCECC0FC903871FFF09038E07F8091
C9FC485AA47FA27F90B512F8EDFF806C15E016F86D8048B6FC3A07E0000FFED80F801300
003FC8127F003E815A00FC815AA25E163EA25E6C15FC007C4A5A6C4A5A6CEC0FC0D80FC0
013FC7FC3903F801FCC6B512F0010F90C8FC303D7FA82D> I<147FEB3FFFA313017FA25C
A513015CA513035CA4ED07F80107EB1FFF9139F0781FC09138F1E00F9139F38007E0ECF7
0002FE14F0495A5CA25CA24A130F131F4A14E0A4161F133F4A14C0A4163F137F91C71380
A4167F5B491500A300015D486C491380B5D8F87F13FCA32E3F7DBE33> I<1478EB01FE13
0314FFA25B14FE130314FCEB00F01400ACEB03F8EA01FF14F0A2EA001F130FA314E0A513
1F14C0A5133F1480A5137F1400A55B5BA4EA03FF007F13F0A2B5FC183E7DBD1A> I<147F
EB3FFFA313017FA25CA513015CA513035CA501070103B5FC02F014FEA26F13F06F1380EE
FE00010F14F84A485AED03C04B5A031FC7FC153E011F13784A5AECC3E0ECC7F0ECCFF814
FF497F14F9ECE1FE14C04A7E4A7E4980017E133F82151F82150F01FE8049130782A20001
81486C49B4FCB5D8F03F13F04B13E0A2303F7EBE30> 107 D<143FEB1FFF5BA213017FA2
14FEA5130114FCA5130314F8A5130714F0A5130F14E0A5131F14C0A5133F1480A5137F14
00A55B5BA4EA03FF007F13F8A2B5FC183F7DBE1A> I<902707F007F8EB03FCD803FFD91F
FF90380FFF80913CE0781FC03C0FE09126E1E00FEBF0073E001FE38007E1C003F090260F
E700EBE38002EEDAF70013F802FC14FE02D85C14F84A5CA24A5C011F020F14074A4A14F0
A5013F021F140F4A4A14E0A5017F023F141F91C74914C0A549027F143F4992C71380A300
014B147F486C496DEBFFC0B5D8F87FD9FC3F13FEA347287DA74C> I<903907F007F8D803
FFEB1FFF9139E0781FC09138E1E00F3B001FE38007E090380FE70002EE14F014FC14D814
F85CA24A130F131F4A14E0A4161F133F4A14C0A4163F137F91C71380A4167F5B491500A3
00015D486C491380B5D8F87F13FCA32E287DA733> I<EC0FF0ECFFFE903903F01F809039
0FC007C049C66C7E013E6D7E01FC6D7E48488049147C0003157E485A000F157F5B121FA2
485AA2007F1680A2170048C85AA54B5AA25E5A6C4A5A7E4B5A5E6C140F6C6C5C4B5A6C6C
013EC7FC6C6C5B6C6C485A3900FC0FE090383FFF80D90FF8C8FC292A7BA82D> I<91387F
01FE903A7FFF0FFFC09139FE3E03F09238F801F8903A03FFE000FE6D49137F4B7F92C713
804A15C04A141FA218E0A20103150F5C18F0A3171F010716E05CA3173F18C0130F4A147F
1880A2EFFF004C5A011F5D16034C5A6E495AEE1FC06E495AD93FDC017EC7FC91388F01F8
913883FFE0028090C8FC92C9FC137FA291CAFCA45BA25BA31201487EB512F8A3343A81A7
33> I<903907F01F80D803FFEB7FE09138E1E1F09138E387F839001FE707EB0FE614EE02
FC13F002D813E09138F801804AC7FCA25C131FA25CA4133F5CA5137F91C8FCA55B5BA312
01487EB512FEA325287EA724> 114 D<9138FF81C0010713E390381F807F90397C003F80
49131F4848130F5B00031407A248481400A27FA27F6D90C7FCEBFF8014FC6C13FF6C14C0
15F06C6C7F011F7F13079038007FFE1403140100381300157EA2123C153E157E007C147C
A2007E147815F8007F495A4A5A486C485A26F9E01FC7FC38E0FFFC38C01FE0222A7DA824
> I<EB0380A4130791C7FCA25BA25BA2133EA2137E13FE12011207001FB512C0B6FCA2D8
01FCC7FCA312035BA512075BA5120F5BA41407001F130E13C0A4141E141C1380A26D5AA2
000F5B14F03807E1E03801FF80D8007EC7FC1A3978B723> I<01FE147F00FFEC7FFF4914
FEA20007140300031401A34914FCA4150312074914F8A41507120F4914F0A4150F121F49
14E0A2151FA3153F4914C0157F15FFEC01DF3A0FC003BFE09138073FFF3803F01E3801FF
F826003FE01380282977A733> I<B539E007FFF05D17E02707FE000313006C48EB01FC6F
5A5E00014A5A5EA24B5A6D1307000092C7FC5D150E6D5B7F5DA25D1480013F5B14815D14
C3011F5B02C7C8FCA214CE14EEEB0FFCA25CA26D5A5CA25CA26D5A2C2878A630> I<48B5
39C07FFFC0A33C000FFE003FF8006D48EB1FE0010315800101023EC7FC6E133C01005C02
7F5B6F5A91383F81C0EDC380DA1FC7C8FC15EFEC0FFE6E5A5D140381A24A7E140FEC1E7F
023C7FEC383F02707FECE01F010180903803C00F49486C7ED90F007F491303017E80D801
FE80D807FF497EB5D8803F13F8A332277FA630> 120 D<90B539E007FFF05E18E0902707
FE000313006D48EB01FC705A5F01014A5A5F16036E5C0100140794C7FC160E805E805E16
78ED8070023F13F05EED81C015C191381FC38015C793C8FC15EF15EEEC0FFCA25DA26E5A
A25DA26E5A5DA24AC9FC5C140E141E141C5C121C003F5B5A485B495A130300FE5B4848CA
FCEA701EEA783CEA3FF0EA0FC0343A80A630> I<017FB512FEA2ECC00190397E0003FC49
EB07F849EB0FF049EB1FE049EB3FC0ED7F8000011500495B4A5A4A5A4848485A4A5AC748
5A4A5A5D147F4AC7FC495A495A49481370494813E0495A5C133F90387F8001D9FF0013C0
485A48481303485A4848EB078049130F4848131F003F143F397F8001FFB71200A227277E
A628> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmmi10 10.95 3
/Fn 3 60 df<133F14E0EB07F0EB03FC13016D7EA3147FA26E7EA36E7EA36E7EA36E7EA3
6E7EA26E7EA36E7EA3157FA36F7E157F15FF4A7F5C913807CFE0EC0F8FEC1F0F91383E07
F0147C14FC49486C7EEB03F0EB07E049486C7EEB1F80EB3F00496D7E13FE4848147F485A
485A4848EC3F80485A123F4848EC1FC048C8FC4816E048150F48ED07F0007015032C407B
BE35> 21 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919> 58
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
120E5A1218123812300B1C798919> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmb10 10.95 70
/Fo 70 123 df<EC07FF027F13C049B512F001078090391FFE03FC90393FF001FE90387F
E0034948487E4A5A481300A2485AA36F5A6F5AED00F093C7FCA616FFB8FCA50003EB0007
81B3ABB5D8F87F13FCA52E407EBF33> 12 D<147814F81301EB03F0EB07E0EB0FC0A2EB
1F80133FEB7F00A213FEA2485A1203A25B1207A2485AA3121F5BA2123FA4485AA612FFB3
A2127FA66C7EA4121FA27F120FA36C7EA212037FA212016C7EA2137FA2EB3F80131FEB0F
C0A2EB07E0EB03F0EB01F813001478155A78C323> 40 D<127012F87E127E7E6C7EA26C
7E7F6C7EA26C7EA26C7E7FA212007FA2EB7F80A314C0133FA214E0A4EB1FF0A614F8B3A2
14F0A6EB3FE0A414C0A2137F1480A3EBFF00A25B1201A25B485AA2485AA2485A5B485AA2
48C7FC127E5A5A1270155A7BC323> I<EB01E0EB07F8A2497E13075CA3001E141E007FEC
3F80903883F07FD8FFC3EBFFC0EBE3F1EBF3F3267FFBF713806D5A001FB5EAFE00000314
F0C66C1380D91FFEC7FCA290387FFF800003B512F0001F14FE3A7FFDEFFF80497E26FFF3
F313C0EBE3F1EBC3F0D87F83EB7F80903807F83F001EEC1E00000091C7FCA380130F6D5A
A2EB01E022287BC32D> I<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA313FEA3127F123F121F
EA0FDEEA001EA2133E133CA2137CA2137813F813F01201EA03E0EA07C0A2EA0F80EA1F00
121E120C0F207B8D19> 44 D<B512FEA917097F981E> I<EA0FC0EA1FE0EA3FF0EA7FF8
EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E0E7B8D19> I<ED0380ED07C0150FA2151F1680
A2153F1600A25D157EA215FE5DA214015DA214035DA214075DA2140F5DA2141F5DA2143F
92C7FCA25C147EA214FE5CA213015CA213035CA313075CA2130F5CA2131F5CA2133F91C8
FCA25B137EA213FE5BA212015BA212035BA212075BA2120F5BA2121F5BA2123F90C9FCA2
5A127EA212FE5AA25A1278225B7BC32D> I<EB01FE90380FFFC0013F13F090B512FC48EB
87FE3903FE01FF48486C1380A24848EB7FC0001F15E049133FA2003F15F0A3007F15F8A5
00FF15FCB3A3007F15F8A6003F15F0A36C6CEB7FE0A2000F15C06D13FF000715806C6C48
13003901FF87FE6CEBFFFC013F13F06D5BD901FEC7FC263D7DBB2D> I<143C147CEB01FC
1307131FEA03FFB5FCA4EAFC1F1200B3B3A8007FB6FCA5203C7ABB2D> I<EB0FFC90387F
FF8048B512E04814F84880390FF07FFE391F801FFF48486C1380387FC00701E014C0486C
6C13E013F88016F0A4EA7FF0EA3FE0EA1FC0EA0700C7FC16E05CA216C04A1380A24A1300
5D4A5A5D4A5A5D4A5A4A5A4990C7FC5CEB03F8903907F001F0EB0FE014C090391F8003E0
EB3F00137E5B491307485A48B6FC4815C05AA25A5A5AB7FC1680A4243C7CBB2D> I<EB0F
FC90383FFFC090B512F048803903F83FFC3907E00FFED80FC07F486C6C138013F801FC14
C0123F13FEA5EA1FFC1680EA0FF8D803E01400C75A5D5D4A5A5DEC7FE090381FFFC092C7
FC15C015F09038003FF8EC0FFE816E1380A216C06E13E0A316F0EA0FC0EA1FE0EA3FF0EA
7FF8EAFFFCA416E0A2495A007F15C013F0263FC00F13801600391FF83FFE6CB55A6C5C00
0114E06C6C1380D90FFCC7FC243D7CBB2D> I<ED1F80A2153F157FA215FF5C5CA25C5CA2
5C5CA25C91B5FC14FBEB01F31303EB07E314C3EB0F83131F1403133E137E137C13F81201
13F0EA03E01207EA0FC01380EA1F005A123E5A12FCB8FCA5C700071380AA010FB6FCA528
3C7EBB2D> I<EC3FE0903801FFF801077F011F7F90383FF07F90397FC01F809038FF807F
48EB00FF484913C048485AA2EA0FFCA2121FA2003F6D1380496C1300157E007F91C7FCA3
14309038F9FF80D8FFFB13E090B512F881EC07FE496C7E496C1380A216C0A201F814E0A3
16F0A6127FA5123F16E0A2121F16C0EA0FFC168000075B01FE14003903FF0FFE6CEBFFFC
6C5C013F5B6D13C0D903FEC7FC243D7CBB2D> 54 D<121F7F13F090B612FCA45A16F816
F016E0A216C016805A007EC7EA3F00157E007C147C15FC4A5A4A5A485C14074A5AC75B14
1F4AC7FCA25C14FEA21301A2495AA31307A2130FA25C131FA3133FA6137FAA6D5A6D5A6D
5A263F7BBD2D> I<EB07FE90381FFFC0017F13F090B57E3901FE0FFC3903F803FE48486C
7E000F6D1380A2485AED7FC0123FA37FA27F7F6DEBFF806D7E6E13006C13F1ECFBFE6CEB
FFFC5D6C14E0A26C14F86C806C80814815805AD807FB14C0EA0FF048486C13E0003F131F
497E007F010313F08000FF7F49137F153FA2151FA416E06C7E153F6D14C0003F147F6D14
803A1FF801FF00390FFE07FE6CB55A6C5CC65C013F13C0D907FEC7FC243D7CBB2D> I<EA
0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC0C7FCACEA0FC0EA1FE0
EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E287BA719> 58
D<007FB912E0BA12F0A4003F18E0CDFCB0003FB912E0BA12F0A46C18E03C1C7BA447> 61
D<ED07804B7E4B7EA34B7EA34B7EA34B7EA34A7FA34A7FA24A8015CFA2020F801587A202
1F801503A2023F80EC3E01A2027E80EC7C00A24A6D7EA20101814A133FA20103814A7FA2
49B77EA34982A29138800007011F8291C77EA2496E7F133EA2496E7FA201FC8249157FB5
00F0013FB512FCA53E3F7DBE45> 65 D<B712FEEEFFE017F817FE83C69026F0001F1380
040713C07013E0A27013F0A28218F8A718F05EA218E05E18C04C1380041F1300EE7FFC91
B612F017C017F817FE913AF00007FF807013C07013E07013F018F8177F18FCA318FEA317
3F177FA418FCA217FF18F85E18F04C13E0160FB912C018005F17F01780373E7CBD41> I<
DB7FF8130E0207B5131E023FECC03E91B6EAF07E0103EDF9FE499038F807FF011FEBC000
4990C7123FD97FFC141F4948140F48491407484914035C484914015A91C9FC5A187E485A
A3007F173EA25BA200FF1700AE127F183E7FA2123FA2187E6C7E187C7E6E15FC6C6D15F8
6C16016EEC03F06C7F6C6DEC07E06D6CEC0FC06DB4EC3F806D01C0EBFF0001079038F807
FE6D90B55A010015F0023F5C020714809126007FF8C7FC37407BBE42> I<B712FCEEFFC0
17F017FC17FFC69026F0003F7F04077F040113F082717E717E717E170F84831980A219C0
83A219E0A519F0A483A55FA419E0A519C0A25F1980A24D1300A24D5A4D5A177F4D5A4C5B
04075B043F5BB9C7FC5F17F817C004FCC8FC3C3E7CBD46> I<B812FEA483C69038F8003F
16071601828383A2EF1F80A3170FED01F0A3EF07C0A3150394C7FCA21507151F91B5FCA5
ECF81F1507150318F8A21501EF01F0A592C71203A218E0A21707A2170F171F18C0173F17
FF1603161FB9FCA21880A3353D7CBC3C> I<B812F8A417FCC69038F8007F161F16071603
16011600A2177EA3173EA2ED03E0A2171FA417001507A2150F153F91B5FCA5ECF83F150F
1507A21503A792C8FCACB612FEA5303D7CBC39> I<DB7FF0131C912607FFFE133C023F90
38FF807C91B6EAE0FC010315F3010F9038F80FFF49EBC0014948C7127F4948143FD9FFF0
141F4849140F4816075C484914035A91C812015A1700485AA3007F177CA25BA200FF94C7
FCAC0303B612F0A2127FA27F92C7387FFC00123FA36C7EA27E807E6C7F806C7F6C7F6D6C
14FF6DB45B6DEBC0036DEBF80F010390B512E7010015C1023FEC807C02079038FE001C91
26007FF090C7FC3C407BBE47> I<B6D8F87FB512FCA5C601F8C7387FFC00B3A491B7FCA5
02F8C7127FB3A7B6D8F87FB512FCA53E3E7CBD47> I<B612F8A5C6EBF800B3B3B0B612F8
A51D3E7DBD24> I<010FB61280A5D90001EBE000B3B3A4EA1FE0EA3FF0EA7FF8A2EAFFFC
A44A5BA26C48485B01F091C7FC6C48485A391FF03FFC6CB55A6C5C000114C026001FFCC8
FC293F81BD2F> I<B7FCA5C601F8C8FCB3AD177CA417FC17F8A41601A3160317F01607A2
160F161F163F16FF1503B8FC17E0A42E3E7CBD37> 76 D<B500FC93B512F86E5DA36E5D
C6F1F800A26FEC07BFA301FD6DEC0F3FA201FC6D141EA36E6C143CA36E6C1478A36E6C14
F0A26E6CEB01E0A36E6CEB03C0A36E9038800780A36E9038C00F00A26EEBE01EA36F6C5A
A36F6C5AA36F6C5AA26FB45AA36F5BA36F5BA36F90C7FCA26F5AB500FC033FB512F8A216
7CA216384D3E7CBD56> I<B500F891B512FC80A28080C6933800FC008181A28181A201FD
7F01FC7FA26E7E6E7E80826E7F80826E7F6E7FA26E7F6F7EA26F7E6F1380A26F13C06F13
E0A26F13F06F13F8A26F13FCEE7FFEA2EE3FFF82A28282A2828282A2177F173FA2171F17
0FA21707B500FC1403A217011700A23E3E7CBD47> I<913801FFC0021F13FC91B67E0103
15E04901807F903A1FFE003FFCD93FF8EB0FFE49486D7E49486D7F48496D7F48834A7F48
834890C86C7EA2488349153FA2003F83A249151F007F83A400FF1880AE007F1800A36D5D
A2003F5FA36C6C4B5AA26C5F6E14FF6C5F6C6D495B6E5B6C5F6C6D495B6D6C4990C7FCD9
3FFEEB3FFE6D6C6CB45A010790B512F06D5D01001580021F01FCC8FC020113C039407BBE
44> I<B712F816FF17E08317FCC6D9F0007FEE1FFF7013808218C08218E0A318F0A818E0
A318C05E18804C13005EEEFFFE91B612F85F17C04CC7FC02F8C9FCB3A4B612F8A5343E7C
BD3E> I<913801FFC0021F13FC91B67E010315E04901807F903A1FFE003FFCD93FF8EB0F
FE49486D7E49486D7F48496D7F48496D7FA24890C86C7E488349153F001F83A249151F00
3F83A3007F834981A300FF1880AE007F1800A46D5D003F5FA36C6C4B5AA2000F027F5C90
3AFF01FF807F6C4901E05B6C01876D485A15C16C9026CF80795B6C9026EF007F5B6DB46D
90C7FC6D5D6D01805B01079038C0FFF06D90B55A0100ED8001021FED03800201EBCFC091
C7EA0FE01807EFF81F94B5FCA3701400A4705BA2705B60705B715AEF1FC039517BBE44>
I<B712E016FF17C017F883C69039F0007FFE93381FFF801607707F84A2707FA284A860A2
4C5BA2604C5B041F90C7FCEEFFFE91B612F817E094C8FC17C0DAF00113F06F6C7E707E83
161F83A2707FA684A6191F18E0A282F0F03FB6D8F003143E70EBF87E70EBFFFC053F13F8
050F13F0CB13C0403F7CBD45> I<D907FE133890393FFFC07890B5EAF0F84814F9000714
FF380FFE07EBF0004848133F4848131F150F007F1407491303A212FF1501A36D1300A27F
7F6D140013FE387FFFE014FEECFFE06C14FC816CECFF806C15C06C15E016F012016C15F8
6D14FC131F010114FEEB001F14019138003FFF150F81A200788012F8A281A27EA216FE7E
15036C15FC7F6DEB07F813F001FCEB1FF09039FFC07FE091B512C000FC1580D8F83F1400
D8F00713FC48C613E028407BBE33> I<003FB812FCA5D9FC03EBE01FD87FE0ED07FE01C0
1501018015001300007E177EA3007C173EA400FC173F48171FA5C71600B3AF013FB612FE
A5383D7DBC3F> I<B600F0010FB5FCA5C601F8C8EA1F00A26E5D017F163EA26E157E013F
167C6E15FC6D5EA26F13016D5EA26D6D495AA26F13076D5EA26F130F6D5E816D4BC7FCA2
6F5B027F143EA26F137E023F147C6F13FC6E5CA216816E5CA216C36E5C16E76E5CA216FF
6E5CA36E91C8FCA26F5AA36F5AA36F5AA26F5AA36F5AA2403F7EBD45> 86
D<B600E0B6D8F007B51280A500019026F0000101F8C73807C00070160F6C6D6184177F6D
6C4EC7FC84173F6D6C183E177F846E187E6D92B5147C856F17FC6D4A5E05F77F03C01601
6D02035E05E313E003E016036D02075E05C113F003F016076D61DC0F8013F803F8160F6D
6193391F007FFC03FC161F027F95C8FC4C14FE043E013F5BDA3FFE163E047E14FF047C6D
137EDA1FFF167C04FC15FC4C7F6E5FA24C7F6E5FA24C7F6E5FA24C7F6E5FA24C7F6E5FA2
93C8127FA26F93C9FC037E81033E153E593F7EBD5E> I<003FB5D8FC0FB512F0A5D8003F
90C7380FC0006D6D495A4DC7FC6D7F6D6D137E5F6D7F4C5A6D6D485A6D13FC4C5ADA7FFE
5B160F6E6C485A6E139F04BFC8FC6E13FEA26E5B6E5BA28082806F7EA26F7E83A24B7F92
B5FC83DA01FB7FEC03F303F17FEC07E1DA0FC07F707EEC1F804B6C7E5C027E6D7F707F5C
49486D7FA249486D7F49486D7FA249486D7F49486E7EA2B6011FB6FCA5403E7EBD45> I<
B600F80103B512C0A5C66C48C8380F80006E151F6D4CC7FC816D167E6D7F6F5C6D5E6F13
016D5E6F13036D4B5A6D7F6F495A027F5D6F131F6E92C8FC6E6D5AEEC07E80705A80EEF1
F86E5C6E13FBEEFFE0805F815F6F90C9FC815EB3A2021FB6FCA5423E7FBD45> I<003FB7
12F8A5DAC00313F09026FC000713E05B01E04913C05B49491380127F90C74813004B5A12
7E4B5AA24A5B127C4A5B5C5E4A5BC7FC4A5BA24A90C7FC5C5D4A5AA2495BA2495B5B5D49
49137CA2495BA24990C7FC4915FC4A14F8495AA2485B1601485BA248491303485B160748
49130F161F4890C7123FEEFFF04848130FB8FCA52E3E7BBD38> I<EAFFFEA6EAFC00B3B3
B3B3A7EAFFFEA60F5B78C319> I<EAFFFEA6EA007EB3B3B3B3A7EAFFFEA60F5B7FC319>
93 D<EB0FFE90387FFFC048B512F04814FC3907FC0FFE48486C7E6D6C7F486C7E82A26E
7FA36C5A6C5AEA01E0C8FC5C49B5FC131F90B6FC000313F84813C0481300EA1FFC485A12
7F5B12FF5BA45CA26C6C5A16F83B3FF807BFFF80391FFC1F3F390FFFFE1F6C497E0001EB
F80326003FE0C8FC292B7EA92C> 97 D<13FFB5FCA512077EAFEC03FE91381FFFC0027F
13F091B57E9138FE0FFE9138F003FF4A7E02C014804A6C13C017E0A3EE7FF0A317F8AC17
F0A3EEFFE0A217C05D02C014806E4813006E485A9138FC1FFC01FCB55A496C13E0D9F01F
1380C7D807FCC7FC2D407EBE33> I<EB03FF011F13E0017F13F890B57E48EB83FE3903FE
01FF00075B4848481380121F13F8123FA2127F496C13006E5AEC007800FF91C7FCAC127F
A27F003FEC07C0A26C6C130F16806C6C131F000715006C6C137F6CEBC1FE6CEBFFFC6D13
F0011F5B010390C7FC222B7DA928> I<ED01FEEC01FFA5EC000F1507AFEB01FF011F13C7
017F13F790B6FC4813C148EB007F4848131F485A001F140F5B123FA2485AA312FFAC127F
A36C7EA3001F141F6C7E00074A7E6D90B512F83803FF83C690B6FC6D13EF011F13CF903A
03FE0FF8002D407DBE33> I<49B47E010F13F0013F7F90B512FE48EBC3FF480100138048
48EB7FC04848133F001F15E05B003FEC1FF0A2485A150F16F8A212FFA290B6FCA401F0C8
FCA5127FA37F003F15F8A26C6C1301000F15F06D13036C6CEB07E06C9038800FC06C9038
F07F806C6CB512006D5B010F13F8010013C0252B7EA92A> I<EC1FF8ECFFFE01077F4914
80D91FF813C0D93FE013E0EB7FC1EBFF81481301A348486C13C0ED7F80ED3F0092C7FCAA
B6FCA5000390C8FCB3ACB6FCA523407EBF1C> I<D907FE13FC90393FFFC3FE90B5EAF7FF
4891B5128048130F3907FC03FE3A0FF801FF7F001FEDFF00496C13BE1680003F81A7001F
5DA26D5A000F92C7FC6C6C485A3903FF0FFCECFFF8485CD80F3F13C0D907FEC8FC90CAFC
5AA27FA213E090B512F015FF6C15C0826C816C8182120F4881393FE0003FD87F80EB07FF
150148C7FC81A56D5B007F5D6D13036C6C495AD81FF8EB1FF86CB4EBFFF06C90B55A0001
15806C6C49C7FC010713E0293D7EA82D> I<13FFB5FCA512077EAFED7FE0913801FFF802
077F4A7F91381FC3FFDA3E031380147CEC780102F014C014E0A214C0A31480B3A4B5D8FE
1F13FFA5303F7EBE33> I<EA01F8487E487E487E481380A66C13006C5A6C5A6C5AC8FCA9
13FFB5FCA512077EB3ABB512F8A515407EBF19> I<EC1F80EC3FC0EC7FE0ECFFF04913F8
A66D13F0EC7FE0EC3FC0EC1F8091C7FCA9EC07F8EB0FFFA5EB003F141FB3B3A2EA1F80EA
3FC0EA7FE0EAFFF015F0143FA2EC7FE015C0397FE0FF80D83FC113006CB45A6C5B6C13F0
C613801D5387BF1C> I<13FFB5FCA512077EB092B512E0A592380FE0004B5A4B5A4BC7FC
15FE4A5A4A5A4A5A4A5A4A5A143FECFFE0A28181A2ECDFFCEC8FFE140F6E7E6E7FA26E7F
6E7FA26F7E6F7EA26F7E6F7EB539FC7FFFF8A52D3F7FBE30> I<13FFB5FCA512077EB3B3
AFB512FCA5163F7EBE19> I<01FFD97FE0EB3FF0B52601FFF8EBFFFC0207D9FC037F4A6D
487F91281FC3FF0FE17FDA3E03D99F017F0007017C14BE6CD97801EBBC0002F002F88002
E05CA202C05CA302805CB3A4B5D8FE1FD9FF0FEBFF80A549297EA84C> I<01FFEB7FE0B5
3801FFF802077F4A7F91381FC3FFDA3E0313800007137C6CEB780102F014C014E0A214C0
A31480B3A4B5D8FE1F13FFA530297EA833> I<49B47E010F13F0013F13FC90B6FC480181
13803A03FE007FC04848EB3FE0000F15F049131F001F15F8A24848EB0FFCA2007F15FEA4
00FF15FFAB007F15FEA3003F15FC6D131F001F15F8A26C6CEB3FF0000715E06C6CEB7FC0
3A01FF81FF806C90B51200013F13FC010F13F001011380282B7EA92D> I<9038FF03FEB5
381FFFC0027F13F091B57E9138FE1FFE9138F007FF0007497E6C01C014804A6C13C017E0
81A217F0A2167F17F8ACEEFFF0A317E05D17C0A26E4813806E4813006E485A9138FC1FFC
91B55A16E0029F1380DA87FCC7FC0280C8FCACB512FEA52D3B7EA833> I<49B4131E010F
EBC03E013FEBE07E90B5EAF0FE48EBC1F948EB807F48EB003F485A4848131FA2003F140F
5B127F1507A2485AAC127F7FA2123F150F6C7E151F6C7E0007143F6C6C13FF6C13C36C90
B5FC6D13EF011F138F903803FE0F90C7FCAC0203B512F8A52D3B7DA830> I<3901FE07F8
00FFEB0FFE91383FFF804A13C0EC7C7F9138F8FFE03807FFF06C5B5CA2ED7FC09138803F
80ED1F0092C7FCA291C8FCB3A3B6FCA523297FA827> I<90387FE1E03803FFFB4813FF5A
381FE07F383F801F387F000F007E130712FE1403A27EA26DC7FC13F013FF6C13F014FC6C
13FF15806C14C07E6C14E0000114F06C7E010313F8EB003F140F0078130712F814037EA3
6C14F06C1307A29038800FE09038F03FC090B51280150000F813FC38E03FF01D2B7DA924
> I<131FA65BA55BA25BA25A5A5A001FEBFFC0B6FCA4000790C7FCB3EC03E0A97EEC87C0
A26CEBCF806C13FF6D1300EB1FFEEB07F81B3B7EB923> I<D9FF80EB7FC0B5EB7FFFA500
0714036C80B3A55DA35D7E4B13E0DAC01E13FF6CEBE07E6DB45A6D5B010F13E001010180
1300302A7EA833> I<B539FC1FFFE0A5000390398000F800ECC0016C5DA2ECE0036C5D15
07D97FF05BA2ECF80F013F5CA2ECFC1F011F91C7FC5D90380FFE3EA2157E903807FF7CA2
15FC6D5BA26D5BA36D5BA36E5AA26E5AA36EC8FC2B287EA730> I<B500E1B53887FFF8A5
0007903B801FF0003F006C6F133E150F02C0157E6C4A6C137CA26C01E05D4B7EA2D97FF0
4A5AED7FFF157DD93FF84A5A03FD138303F81387D91FFCECC7C014FD9238F07FCFD90FFF
ECEF80A29238E03FFF6D93C7FCA24B7E6D5DA2ED800F6D5DA2ED00076D5DA24A1303027E
5C027C13013D287EA742> I<3B7FFFFC7FFFE0A5C69039E007E0004B5A90387FF01FD93F
F85B4BC7FC90381FFC7EEB0FFE5D6D6C5A7F5D6D5B7FA26E7E143F814A7E14FF81497FEB
03F301078002E17FEB0FC049487F6F7E90383F003F017E806F7EB500E0B512F8A52D287F
A730> I<B539FC1FFFE0A5000390398000F800ECC0016C5DA2ECE0036C5D1507D97FF05B
A2ECF80F013F5CA2ECFC1F011F91C7FC5D90380FFE3EA2157E903807FF7CA215FC6D5BA2
6D5BA36D5BA36E5AA26E5AA36EC8FCA25C143EA2000E5BEA3F80387FC0FC486C5AA2EBE1
F0A2EBE3E013C7387FCFC0387D3F80D83FFFC9FC5BEA0FF8EA07E02B3B7EA730> I<001F
B61280A4D9F80F1300EBE01F01C05B49485A130048495A4A5AA2D83E015B5B5D495BA2C6
4890C7FC5B5C495A017FEB0F8014F8EBFFF0A248EBE01F48150014C0481380A248495A48
5A5D48485B007F5B9038F80FFEB6FCA421287EA728> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmbx12 17.28 39
/Fp 39 122 df<16F04B7E1507151F153FEC01FF1407147F010FB5FCB7FCA41487EBF007
C7FCB3B3B3B3007FB91280A6395E74DD51> 49 D<913801FFF8021FEBFFC091B612F801
0315FF010F16C0013F8290267FFC0114F89027FFE0003F7F4890C7000F7F48486E7FD807
F86E148048486E14C048486E14E048486F13F001FC17F8486C816D17FC6E80B56C16FE83
80A219FFA283A36C5BA26C5B6C90C8FCD807FC5DEA01F0CA14FEA34D13FCA219F85F19F0
4D13E0A294B512C019804C14004C5B604C5B4C5B604C13804C90C7FC4C5A4C5A4B13F05F
4B13804B90C8FC4B5AED1FF84B5A4B5A4B48143F4A5B4A48C8FC4A5A4A48157E4A5A4A5A
EC7F8092C9FC02FE16FE495A495A4948ED01FCD90FC0150749B8FC5B5B90B9FC5A4818F8
5A5A5A5A5ABAFCA219F0A4405E78DD51> I<92B5FC020F14F8023F14FF49B712C04916F0
010FD9C01F13FC90271FFC00077FD93FE001017F49486D8049C86C7F484883486C6F7F14
C0486D826E806E82487FA4805CA36C5E4A5E6C5B6C5B6C495E011FC85A90C95CA294B55A
614C91C7FC604C5B4C5B4C5B4C5B047F138092260FFFFEC8FC020FB512F817E094C9FC17
F817FF91C7003F13E0040713F8040113FE707F717F7113E085717FA2717F85A285831A80
A31AC0EA03FCEA0FFF487F487F487FA2B57EA31A80A34D14005C7E4A5E5F6C495E49C848
5BD81FF85F000F5ED807FE92B55A6C6C6C4914806C01F0010791C7FC6C9026FF803F5B6D
90B65A011F16F0010716C001014BC8FCD9001F14F0020149C9FC426079DD51> I<F01F80
4E7E187F18FFA25F5F5F5FA25F5F5FA294B5FC5E5E5EA25E5EEE3FBFEE7F3FA216FEED01
FCED03F8ED07F0A2ED0FE0ED1FC0ED3F8016005D15FE4A5A4A5AA24A5A4A5A4A5A4A5AA2
4AC7FC14FE495A5C1303495A495A495A5C133F49C8FC13FE485AA2485A485A485A5B121F
485A48C9FC12FEBCFCA6CA6CEBC000B1037FB8FCA6485E7CDD51> I<01C0EE01C0D801F8
160F01FF167F02F0EC07FFDAFF8090B5FC92B7128019006060606060606095C7FC17FC5F
17E0178004FCC8FC16E09026FC3FFCC9FC91CBFCADED3FFE0203B512F0020F14FE023F6E
7E91B712E001FDD9E00F7F9027FFFE00037F02F801007F02E06EB4FC02806E138091C8FC
496F13C04917E07113F0EA00F090C914F8A219FC83A219FEA419FFA3EA03F0EA0FFC487E
487E487FA2B57EA319FEA35C4D13FC6C90C8FC5B4917F8EA3FF001804B13F06D17E0001F
5E6C6C17C06D4B1380D807FC92B512006C6C4A5B6C6C6C01075B6C01E0011F5BD97FFE90
B55A6DB712C0010F93C7FC6D15FC010115F0D9003F1480020301F0C8FC406078DD51> I<
EE1FFF0303B512E0031F14F892B612FE0203814AD9FC037F021F9039C0007FC04A90C7EA
1FE0DAFFFC6E7E494914074949EC7FF8494914FF49495B4949497F4990C7FC495D5C13FF
485BA25A4A6E5B5A715B48496E5B725A4894C8FCA35AA35C48913801FFE0030F13FE033F
6D7E4B14E092B612F89126E1FE037FB53AE3F0007FFEDAE7E06D7EDAEFC06D7F4B6D7F02
FFC76C7F4A82717F4A82A2854A8085A24A1780A54A17C0A37EA77EA47E6E1780A27EA21A
007E4D5B7E6E5E7E6E5E6C4C5B6D7E013F4B5B6D6C4A5B6D01C0495B6D6D90B5C7FC6DD9
FC0713FC6D90B65A6D5E023F15C0020F92C8FC020114F8DA001F1380426079DD51> I<EA
07E0120F7F13FCEBFFFC91B912F8A45AA21AF01AE01AC01A801A00A248606161616101E0
C9123F01804C5A48CA485A4D90C7FC60007E4C5A17074D5A4D5A4D5A485F4D5A17FF4C90
C8FCC9485A5F4C5A160F4C5A5F163F4C5A16FF5F5D94C9FC5D5D5E150FA24B5AA2153FA2
4B5AA215FFA34A5BA25CA35CA44A5BA45CA65CAD6E5BA26E5BDA03FECAFC6E5A456377E0
51> I<EA01FCEA07FF4813804813C04813E04813F0A2B512F8A76C13F0A26C13E06C13C0
6C13806C1300EA01FCC8FCB3A4EA01FCEA07FF4813804813C04813E04813F0A2B512F8A7
6C13F0A26C13E06C13C06C13806C1300EA01FC154074BF2D> 58
D<BB12F0F2FF801BF81BFEF3FFC088D800010280C7000114F8DF003F7F080F13FF748074
80867480757FA2757FA28987A289A965A26365A2515BA298B55A505C505C5091C7FC505B
505B087F13F00703B512C096B6C8FC93B812F81BC01BF8F3FF801CE00480C8001F13F808
0713FE08016D7E7480757F757F757F89757F89871E80871EC0A41EE087A663A21EC0A363
1E80A2511400A2515B515B6398B55A505C08075C081F5C97B6C7FCBD5A1CF81CE099C8FC
1BF898C9FC63627AE173> 66 D<4DB5ED03C0057F02F014070407B600FE140F047FDBFF
C0131F4BB800F0133F030F05FC137F033F9127F8007FFE13FF92B6C73807FF814A02F002
0113C3020702C09138007FE74A91C9001FB5FC023F01FC16074A01F08291B54882490280
824991CB7E49498449498449498449865D49498490B5FC484A84A2484A84A24891CD127F
A25A4A1A3F5AA348491A1FA44899C7FCA25CA3B5FCB07EA380A27EA2F50FC0A26C7FA37E
6E1A1F6C1D80A26C801D3F6C6E1A00A26C6E616D1BFE6D7F6F4E5A7F6D6D4E5A6D6D4E5A
6D6D4E5A6D6E171F6D02E04D5A6E6DEFFF806E01FC4C90C7FC020F01FFEE07FE6E02C0ED
1FF8020102F8ED7FF06E02FF913803FFE0033F02F8013F1380030F91B648C8FC030117F8
6F6C16E004071680DC007F02F8C9FC050191CAFC626677E375> I<BB12E0F2FF801BF01B
FE757E1CF0D800010280C7000780DF007F13FE080F6D7E0801807480093F7F090F13FC75
7F757F877580767F8A88767F8A888AA2767FA28A881F80A37614C0A41FE0A5881FF0B052
14E0A51FC0A4521480A31F006466A2525BA2525BA2525B666499B55A515C5191C7FC515B
515B515B097F5B50B512C008075C083F91C8FC0707B512FCBD12F01CC051C9FC1BF81B80
08E0CAFC6C627AE17C> I<BD12FCA488A2D8000102C0C71201F1000F1A01F2007F1B3F1B
0F1B07757EA28787A288A3F43F80A31C1FA3197EA3F40FC0A499C7FC19FEA31801A21803
1807181F18FF93B6FCA6EEC000181F180718031801A21800A21D7E197EA21DFCA696C812
011DF8A31C03A3F407F0A31C0FA21C1F1C3F1DE01C7F1CFF63631B0F093F13C098B5FC1A
0797B6FCBEFCA31D80A35F617AE06A> I<BD12E0A41CF0A2D8000102C0C71207F1003F1A
0F1A031A001B7F1B3FF31FF81B0FA21B07A21B03A21B011CFCA31B00A419FCA21C7EA41C
00A21801A31803A21807180F183FEF01FF93B6FCA6EEC001EF003F180F18071803A21801
A31800A896C9FCB3A5B912F8A657617AE065> I<4DB5ED03C0057F02F014070407B600FE
140F047FDBFFC0131F4BB800F0133F030F05FC137F033F9127F8007FFE13FF92B6C73807
FF814A02F0020113C3020702C09138007FE74A91C9001FB5FC023F01FC16074A01F08291
B54882490280824991CB7E49498449498449498449865D49498490B5FC484A84A2484A84
A24891CD127FA25A4A1A3F5AA348491A1FA44899C8FCA25CA3B5FCB07E071FB812F880A3
7EA296C70001ECC000A26C7FA37E807EA26C80A26C80A26C807F6D7F816D7F7F6D7F6D6D
5F6D14C06D6E5E6E7F6E01FC5E020F01FF5E6E02C0ED7FEF020102F8EDFFC76E02FF0207
1383033F02FC013F1301030F91B638FC007F03014D131F6F6C04E01307040704801301DC
007F02F8CAFC050191CBFC6D6677E37F> I<B96C90B91280A6D8000102C0C9000102C0C7
FCB3B3A293BBFCA604C0C91201B3B3A6B96C90B91280A671627AE17E> I<B912E0A6C702
E0C7FCB3B3B3B3AEB912E0A633627CE13C> I<BB7E1AFCF2FFC01BF81BFE757ED8000102
80C7001F80070114F0736C7F081F7F747F747F7414807414C0A27414E0A21DF0A27513F8
A41DFCA91DF8A498B512F0A21DE0A25014C01D8062501400505B505B087F5B4FB512E007
1F5C93B9C7FC1BFC1BF01B8008F0C8FC04C0CCFCB3B3A2B97EA65E627AE16E> 80
D<DBFFFCEC01E0020FD9FFE01303027F02FC130749B7130F0107EEC01F011F16F049D9C0
07EBF83F4948C7383FFE7FD9FFF8020FB5FC4801E014014849804849153F91C97E484882
001F834982003F83845B007F187FA2193FA200FF181FA27F190FA27FA26D17078080806C
01F893C7FC80ECFF8015F86CECFFC016FC6CEDFFE017FE6CEEFFE018F86C17FE6C717E6C
846C846D17F86D836D836D8313036D18806D6C17C0020F17E01401DA000F16F015000407
15F8EE007F1703050014FC183F84060713FE84A2007C8300FC83A2197FA3193F7EA31AFC
7EA27F1AF86D177F7F1AF06D17FF6D18E06D5E01FF18C06E4B138002E04B130002F84B5A
02FFED3FFC01CF01E0ECFFF8018301FF010F5B010191B65A6D6C5E48011F93C7FC480103
15FC48D9003F14E048020149C8FC476677E35A> 83 D<001FBEFCA64849C79126E0000F
148002E0180091C8171F498601F81A0349864986A2491B7FA2491B3F007F1DC090C9181F
A4007E1C0FA600FE1DE0481C07A5CA95C7FCB3B3B3A3021FBAFCA663617AE070> I<B96C
023FB612FEA6D8000102C0CA0007EBF000E2007FC7FCB3B3B3AA656D63A2821C01806570
170380525A6E7F6E4F5A70171F6E626E6D4D5A6E6D177F525A6E6E030390C8FC033F01E0
4B5A6F6DED1FFC6F01FCED7FF80303D9FF80903803FFE06F02F8017F5B6F6C90B7C9FC04
1F5E040716F8040016C0050F4ACAFCDD003F13C06F647AE17C> I<913803FFFE027FEBFF
F00103B612FE010F6F7E4916E090273FFE001F7FD97FE001077FD9FFF801017F486D6D7F
717E486D6E7F85717FA2717FA36C496E7FA26C5B6D5AEB1FC090C9FCA74BB6FC157F0207
B7FC147F49B61207010F14C0013FEBFE004913F048B512C04891C7FC485B4813F85A5C48
5B5A5CA2B55AA45FA25F806C5E806C047D7F6EEB01F96C6DD903F1EBFF806C01FED90FE1
14FF6C9027FFC07FC01580000191B5487E6C6C4B7E011F02FC130F010302F001011400D9
001F90CBFC49437CC14E> 97 D<903807FF80B6FCA6C6FC7F7FB3A8EFFFF8040FEBFF80
047F14F00381B612FC038715FF038F010014C0DBBFF0011F7FDBFFC001077F93C76C7F4B
02007F03F8824B6F7E4B6F13804B17C0851BE0A27313F0A21BF8A37313FCA41BFEAE1BFC
A44F13F8A31BF0A24F13E0A24F13C06F17804F1300816F4B5A6F4A5B4AB402075B4A6C6C
495B9126F83FE0013F13C09127F00FFC03B55A4A6CB648C7FCDAC00115F84A6C15E091C7
001F91C8FC90C8000313E04F657BE35A> I<92380FFFF04AB67E020F15F0023F15FC91B7
7E01039039FE001FFF4901F8010113804901E0010713C04901804913E0017F90C7FC4948
4A13F0A2485B485B5A5C5A7113E0485B7113C048701380943800FE0095C7FC485BA4B5FC
AE7EA280A27EA2806C18FCA26C6D150119F87E6C6D15036EED07F06C18E06C6D150F6D6D
EC1FC06D01E0EC7F806D6DECFF00010701FCEB03FE6D9039FFC03FFC010091B512F0023F
5D020F1580020102FCC7FCDA000F13C03E437BC148> I<F17FF8050FB5FCA6EF000F8484
B3A892380FFF804AB512F8020F14FE023FECFF8391B712E301039138807FF3499039F800
0FFB011F01E00103B5FC494913004990C87E49488148498148834A815A485BA2485BA25A
A3485BA4B5FCAE7EA46C7FA37EA26C7FA26C5F806C5F6C6D5D6C6D5D017F93B5FC6D6C6C
0103806D6D49806D01F0D91FF7EBFFFE6D9039FE01FFE7010190B612876D6CECFE07021F
14F8020314E09127003FFE00ECC0004F657BE35A> I<92380FFFC04AB512FC020FECFF80
023F15E091B712F80103D9FE037F499039F0007FFF011F01C0011F7F49496D7F4990C76C
7F49486E7F48498048844A804884485B727E5A5C48717EA35A5C721380A2B5FCA391B9FC
A41A0002C0CBFCA67EA380A27EA27E6E160FF11F806C183F6C7FF17F006C7F6C6D16FE6C
17016D6C4B5A6D6D4A5A6D01E04A5A6D6DEC3FE0010301FC49B45A6D9026FFC01F90C7FC
6D6C90B55A021F15F8020715E0020092C8FC030713F041437CC14A> I<EE3FFC0307B512
80033F14C04AB612F0020715F84A9038F03FFC4AEB807F913A7FFE00FFFE4A5A4B4813FF
4913F05B4913E0A24913C0A27013FE4949EB7FFCEF3FF8EF1FF0EF07C094C7FCB0B812C0
A6D8001F01C0C8FCB3B3B0007FB612FCA638657CE431> I<F107F8DB7FFEEC3FFE020FB5
D8F001B5FC027FDAFE03148049B7128F49DCDFFD13C0010FD9F00FEBFFC149D980011401
4990C7EBFC0349486E6C7E4948EC3FFF48496E018113800780130048F0C03E97C7FC4849
6E7FA34884A96C60A36C6D4A5BA26C60A26C6D4A90C8FC6D6C4A5A6D6C4A5A6D6D485BDB
F00F5B4990B612C060D97C7F4AC9FCD9FC0F14F09126007FFECAFC92CCFC1201A47FA27F
8014F091B77E18FE6CEFFFC019F06D17FC19FF6D846D846D846D84013F8490BAFC000385
4801E0C712014890C9000F7F484816014848EE007F4848717E8512FF5B85A56D5F007F61
6D173F003F616D177F6C6C4D5A6C01C003035B6C6D4B5B6C01F8031F5BC601FF92B5C7FC
6D01F8011F5B011F90B712F8010717E0010094C8FC020F15F0DA003F01FCC9FC4A607CC1
51> I<EB0FE0EB3FF8497E48B5FCA24880A24880A76C5CA26C91C7FCA238007FFC6D5AEB
0FE090C9FCAF903807FF80007FB5FCA6C6FC7F7FB3B3AEB712C0A622657BE42C> 105
D<903807FF80B6FCA6C6FC7F7FB3B3B3B3ADB712E0A623647BE32C> 108
D<902607FF80EB1FFFB691B512F0040714FC041F14FF4C8193267FE07F7F922781FE001F
7FC6DA83F86D7F6DD987F07F6DD98FC0814C7F039FC78015BE03BC8003FC825DA25DA25D
A45DB3B2B7D8F007B71280A651417BC05A> 110 D<923807FFE092B6FC020715E0021F15
F8027F15FE494848C66C6C7E010701F0010F13E04901C001037F49496D7F4990C87F4948
6F7E49486F7E48496F13804819C04A814819E048496F13F0A24819F8A348496F13FCA348
19FEA4B518FFAD6C19FEA46C6D4B13FCA36C19F8A26C6D4B13F0A26C19E06C6D4B13C0A2
6C6D4B13806C6D4B13006D6C4B5A6D6D495B6D6D495B010701F0010F13E06D01FE017F5B
010090B7C7FC023F15FC020715E0020092C8FC030713E048437CC151> I<D90FFFEB0FFC
B690383FFF8093B512E04B14F04B14F8923907FC7FFC92390FE0FFFEC6EC1F806DD93F01
13FF6D133E157E157C15F8A215F07013FEA24BEB7FFCEF3FF8EF0FE04B90C7FCA55DB3B0
B712F8A638417BC042> 114 D<913A3FFF8007800107B5EAF81F011FECFE7F017F91B5FC
48B8FC48EBE0014890C7121FD80FFC1407D81FF0801600485A007F167F49153FA212FF17
1FA27F7F7F6D92C7FC13FF14E014FF6C14F8EDFFC06C15FC16FF6C16C06C16F06C826C82
6C826C82013F1680010F16C01303D9007F15E0020315F0EC001F1500041F13F81607007C
150100FC81177F6C163FA2171F7EA26D16F0A27F173F6D16E06D157F6D16C001FEEDFF80
6D0203130002C0EB0FFE02FCEB7FFC01DFB65A010F5DD8FE0315C026F8007F49C7FC4801
0F13E035437BC140> I<EC07E0A6140FA5141FA3143FA2147FA214FF5BA25B5B5B5B137F
48B5FC000F91B512FEB8FCA5D8001F01E0C8FCB3AFEF0FC0AC171F6D6D1480A2173F6D16
006F5B6D6D137E6D6D5B6DEBFF836EEBFFF86E5C020F14C002035C9126003FFCC7FC325C
7DDA3F> I<902607FFC0ED3FFEB60207B5FCA6C6EE00076D826D82B3B3A260A360A2607F
60183E6D6D147E4E7F6D6D4948806D6DD907F0ECFF806D01FFEB3FE06D91B55A6E150002
1F5C020314F8DA003F018002F0C7FC51427BC05A> I<B700C00103B512FCA6C66C01C0C8
381FFE006D6DED07F0A26D6D5E190F6D6D5E191F6D606F153F6D95C7FC6F5DA26D6D157E
19FE6D6E5C18016E5E7013036E5E701307A26E6D5C180F6E6D5C181F6E6D5C183F6E93C8
FC705BA26E6D13FEA26E6E5A17816FEBC1F817C36F5C17E76F5C17FFA26F5CA26F5CA26F
91C9FCA26F5BA36F5BA2705AA2705AA2705AA2705A4E417DBF55> I<B70081B600FC0103
B512FCA6C66C0180C701FCC8381FFE006F6FED03F86D047F5F856F6E16076D646F70140F
6D705F866F6E161F6D646F4A6D143F6D99C7FC4E7F6F616D1B7E6F4A6D14FE6D6395B57E
7001FC15016E62DCC0016E13036EDBF87F5D05038004E0496C14076E62DCF007ED800F6E
4B6C5D050F15C004F8496C141F6E62DCFC1FEDE03F6E4B6C92C8FC053F15F004FE496C5C
6E197E7048EDF8FE6E027E6D5C05FE15FC4D6D13FD6F601BFF6F496E5BA24D806F60A26F
496E5BA24D806F60A26F496E90C9FCA294C87E6F5FA26F486F5A047C6F5A6E417DBF75>
I<007FB600C0017FB512F8A6D8001F01F8C70007EBF0006D040190C7FC6D6D5D6D6D4A5A
6D6D4A5A70495A6D4C5A6E7F6E6D495A6E6D495A7049C8FC6E4A5A6E6D485A6E6D485A6E
13FFEF8FF06EEC9FE06FEBFFC06F5C6F91C9FC5F6F5B816F7F6F7F8481707F8493B57E4B
805D4B80DB0FF37FDB1FE17F04C080153F4B486C7F4B486C7F4A486D7F4A486D7F4A5A4B
6D7F020F6E7F4A486D7F4A486D804A5A4AC86C7F49486F7F4A6F7F0107707FEB3FFFB600
F049B7FCA650407EBF55> I<B700C00103B512FCA6D8003F01C0C8381FFE006FED07F0A2
6D6D5E190F6D6D5E191F6D6D5E193F6D95C7FC6F5D6D177E6F15FEA26D6E495AA26E6D5C
18036E6D5C18076E5E70130F6E5E70131FA26E6D495AA26E6D91C8FC606E6D137E18FE6E
5D17816F5C17C3A26FEBE7F0A26FEBF7E017FF6F5CA26F5CA26F91C9FCA36F5BA26F5BA2
705AA2705AA2705AA35FA25F163F94CAFC5E167E16FED807E05CD81FF81301487E486C49
5AA2B5495AA24B5A5E151F4B5A6C4849CBFC15FEEBFC01393FF807FC391FF03FF06CB55A
6C5C6C91CCFCC613FCEB1FE04E5D7DBF55> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmsy10 10.95 2
/Fq 2 14 df<007FB812F8B912FCA26C17F83604789847> 0 D<EE7FFE0307B512E0033F
14FC92B7FC0203D9C00313C0DA0FFCC7EA3FF0DA3FE0EC07FCDA7F80EC01FED901FEC9EA
7F80D903F8EE1FC0D907E0EE07E04948707E4948707E49CB7E017E187E498449844848F0
0F8000031AC04918074848F003E0A24848F001F0A248CD12F8A2001E1A78003E1A7CA200
3C1A3C007C1A3EA200781A1EA300F81A1FA2481A0FAB6C1A1FA200781A1EA3007C1A3EA2
003C1A3C003E1A7CA2001E1A78001F1AF8A26C6CF001F0A26C6CF003E0A26C6CF007C06D
180F00011A806C6CF01F006D60017E187E6D606D6C4C5A6D6C4C5A6D6C4C5AD903F8EE1F
C0D901FEEE7F809026007F80DA01FEC7FCDA3FE0EC07FCDA0FFCEC3FF0913B03FFC003FF
C0020090B6C8FC033F14FC030714E09226007FFEC9FC50557BC05B> 13
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmbx12 14.4 58
/Fr 58 123 df<EEFFFC031FEBFF804AB612E0020781021F9038C00FF8913A7FFE0003FC
DAFFF0EB00FE4949EB03FF4901805B4990C7487F49485CA2495A4D7F013F6F5B5CA37190
C7FC715AEF01F894C9FCA90403B512C0BAFCA526003FFCC7120783B3B3A6003FB5D8FC03
B612C0A542547DD34B> 12 D<EA07F0EA1FF8487E487E7FB5FC1480A314C0A37EA27E7E
EA07F3EA0003A213071480A3130F1400A25B131E133E133C137C5BA2485A485A485A485A
48C7FC121E120C1228769025> 44 D<EA07F0487E487E487E487EB51280A76C13006C5A
6C5A6C5A6C5A1111769025> 46 D<157815FC14031407141F14FF130F0007B5FCB6FCA2
147F13F0EAF800C7FCB3B3B3A6007FB712FEA52F4E76CD43> 49
D<EC3FFE0103B512E0010F14FC013F14FF90B712C048D9C07F7F2703FE000F13F8D807F8
01037FD80FE06D7F48486D7F48488001F01680486C6E13C07F486C6E13E07FA27013F0A5
6C5AA26C5AEA0FF0EA03C0C914E05EA218C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B
4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC
02FEEC03E0495A495A495A495AD91F80140749C8FC013E150F017FB7FC90B812C05A5A5A
5A5A5A5AB9FC1880A4344E79CD43> I<91380FFFC091B512FC0107ECFF80011F15E09026
3FF8077F9026FF800113FC4848C76C7ED803F86E7E491680D807FC8048B416C080486D15
E0A4805CA36C17C06C5B6C90C75AD801FC1680C9FC4C13005FA24C5A4B5B4B5B4B13C04B
5BDBFFFEC7FC91B512F816E016FCEEFF80DA000713E0030113F89238007FFE707E701380
7013C018E07013F0A218F8A27013FCA218FEA2EA03E0EA0FF8487E487E487EB57EA318FC
A25E18F891C7FC6C17F0495C6C4816E001F04A13C06C484A1380D80FF84A13006CB44A5A
6CD9F0075BC690B612F06D5D011F1580010302FCC7FCD9001F1380374F7ACD43> I<177C
17FEA2160116031607160FA2161F163F167FA216FF5D5DA25D5DED1FBFED3F3F153E157C
15FCEC01F815F0EC03E01407EC0FC01580EC1F005C147E147C5C1301495A495A5C495A13
1F49C7FC133E5B13FC485A5B485A1207485A485A90C8FC123E127E5ABA12C0A5C96C48C7
FCAF020FB712C0A53A4F7CCE43> I<D80380150ED807E0157E01FEEC03FED9FFF0137F91
B65A5F5F5F5F5F94C7FC5E5E16F016C093C8FC15F801E190C9FC01E0CAFCABEC0FFF027F
13F001E3B512FE01E76E7E9026FFF8077FDAC0017F49C713F8496E7E49143F4981496E7E
6C481680C9FC18C08218E0A418F0A3EA0FE0487E487E487E487EA418E0A35B6C484A13C0
5B491680003EC85A003F17006C6C4A5A6D5D6C6C4A5AD807F8495BD803FE01075B2701FF
C03F5B6C90B65A013F4AC7FC6D14F8010314C09026007FF8C8FC344F79CD43> I<ED0FFF
92B512E0020780021F14FC91397FFE03FE903A01FFF0007F4901C0EB3F804990C7121F49
48EC7FC0494814FF49484913E049485B01FF5C485BA2485B5AA2486F13C04A6D1380486F
1300177E94C7FC5AA291CAFC5AA21508913801FFF8020713FFB54814C04A14F04AC66C7E
023C6D7E4A6D7E4A6D7E7013804A15C0A24A15E07013F05C18F8A491C714FCA37EA67EA4
6C17F880A27E18F06C5D18E06C6D15C07E6E4913806C6D15006D6C495A6D6CEB7FFC6DB4
48485A6D90B55A010315C0010092C7FC023F13FC020713C0364F7ACD43> I<121F7F7FEB
FF8091B81280A45A1900606060A2606060485F0180C86CC7FC007EC95A4C5A007C4B5A5F
4C5A160F4C5A484B5A4C5A94C8FC16FEC812014B5A5E4B5A150F4B5AA24B5AA24B5A15FF
A24A90C9FCA25C5D1407A2140FA25D141FA2143FA4147F5DA314FFA55BAC6D5BA2EC3FC0
6E5A395279D043> I<91380FFF8091B512F8010314FE010F6E7E4901037F90267FF8007F
4948EB3FF048496D7E484980486F7E484980824817805A91C714C05A7013E0A218F0B5FC
A318F8A618FCA46C5DA37EA25E6C7F6C5DA26C5D6C7F6C6D137B6C6D13F390387FF80301
1FB512E36D14C30103028313F89039007FFE03EC00401500A218F05EA3D801F816E0487E
486C16C0487E486D491380A218005E5F4C5A91C7FC6C484A5A494A5A49495B6C48495BD8
03FC010F5B9027FF807FFEC7FC6C90B55A6C6C14F06D14C0010F49C8FC010013F0364F7A
CD43> 57 D<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5AC8FCB3EA
07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A113576B425> I<171F4D7E
4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C8083047F80167E8304FE804C7E03
018116F8830303814C7E03078116E083030F814C7E031F81168083033F8293C77E4B8215
7E8403FE824B800201835D840203834B800207835D844AB87EA24A83A3DA3F80C88092C9
7E4A84A2027E8202FE844A82010185A24A820103854A82010785A24A82010F855C011F71
7FEBFFFCB600F8020FB712E0A55B547BD366> 65 D<BA12C019FEF1FFC01AF01AFCD800
0701F0C7000313FFDE007F7F737F070F7F737F878587858785A287A84F5BA26361636163
4F5B4F5B077F90C7FC4E485A060713F892B812E097C8FC861AF003F0C7000313FE953900
3FFF80070F13E0737F07017F87737F747E1C807413C0A27413E0A31CF0A386A362A31CE0
A2621CC0A250138097B5FC1C004F5B19074F5B073F13F04EB55ABC128098C7FC1AF81AC0
07F8C8FC54527CD160> I<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03
FE131F92B8EA803F0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A018002
03B5FC494848C9FC4901F8824949824949824949824949824990CA7E494883A248498348
5B1B7F485B481A3FA24849181FA3485B1B0FA25AA298C7FC5CA2B5FCAE7EA280A2F307C0
7EA36C7FA21B0F6C6D1980A26C1A1F6C7F1C006C6D606C6D187EA26D6C606D6D4C5A6D6D
16036D6D4C5A6D6D4C5A6D01FC4C5A6D6DEE7F806D6C6C6C4BC7FC6E01E0EC07FE020F01
FEEC1FF80203903AFFE001FFF0020091B612C0033F93C8FC030715FCDB007F14E0040101
FCC9FC525479D261> I<BA7E19FCF1FF801AF01AFCD8000701F0C7000F13FF060014C007
1F7F070713F807017F737F747E747F747F86747F747F8886888688A2757EA31D8087A21D
C0A51DE0A387A963A31DC0A51D80A2631D00A3515AA2646264505B6264505B505B5090C7
FCF2FFFE4F5B07075B071F5B96B512C0060F91C8FCBB5A1AF01AC007FCC9FC19805B527C
D167> I<BC1280A5D8000701F8C7000114C0F0001F19071901851A7F1A3F1A1FA2F20FE0
A21A07A31A03A318F81BF01A01A497C7FC1701A317031707170F177F92B6FCA59238F800
7F170F170717031701A317001B3EA31B7CA395C8FCA21BFCA21BF8A21A01A31A031BF01A
071A0FA21A1F1A3FF27FE0F101FF1907191F0603B5FCBCFCA21BC0A34F517CD058> I<BB
12FEA5D8000701F8C700077FF0007F191F190785858586861B80A21A1FA31A0FA41BC006
F81307A497C7FCA31701A317031707170F177F92B6FCA59238F8007F170F170717031701
A31700A795C9FCB3B812F8A54A517CD055> I<932601FFFCEC01C0047FD9FFC013030307
B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F020F01FCC7383FF0FF023F01
E0EC0FF94A01800203B5FC494848C9FC4901F8824949824949824949824949824990CA7E
494883A2484983485B1B7F485B481A3FA24849181FA3485B1B0FA25AA298C8FC5CA2B5FC
AE6C057FB712E0A280A36C94C7003FEBC000A36C7FA36C7FA27E6C7FA26C7F6C7FA26D7E
6D7F6D7F6D6D5E6D7F6D01FC93B5FC6D13FF6D6C6D5C6E01F0EC07FB020F01FEEC1FF102
03903AFFF001FFE0020091B6EAC07F033FEE001F030703FC1307DB007F02E01301040149
CAFC5B5479D26A> I<B8D8C003B8FCA5D8000701F8C9001FEBE000B3AE92BAFCA503F8C9
121FB3B1B8D8C003B8FCA560527CD169> I<B812C0A5D8000701F8C7FCB3B3B3B2B812C0
A52A527CD132> I<B812F8A5D8000701F8CAFCB3B3A91A7CA41AFC1AF8A51901A31903A2
19071AF0190FA2191F193F197F19FF180360183F4DB5FCBB12E0A546527CD151> 76
D<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF6DEF03CFA202
E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A26F6C17F0A26F
6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D5DA3706C5DA2
706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2706D5BA2716C
5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2715BA2725AA2
725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180> I<B600FC93B7FC8181A282
D800076E9239003FFC0070EE07E08282A28202EF7F02E77F02E380A202E18002E0806F7F
6F7F6F7FA26F7F6F7F6F806F80A26F80707F707F707F707FA2707F708070807080858371
7F717F717F717FA27114807114C07114E07213F07213F8A27213FC7213FE7213FF721487
A27214C77214E77313F77313FF85A285858585A28586868686A286868686A2D93FFC187F
B7173F1B1F1B0F1B07755A60527CD169> I<93380FFFC00303B6FC031F15E092B712FC02
03D9FC0013FF020F01C0010F13C0023F90C7000313F0DA7FFC02007F494848ED7FFE4901
E0ED1FFF49496F7F49496F7F4990C96C7F49854948707F4948707FA24849717E48864A83
481B804A83481BC0A2481BE04A83A2481BF0A348497113F8A5B51AFCAF6C1BF86E5FA46C
1BF0A26E5F6C1BE0A36C6D4D13C0A26C6D4D1380A26C1B006C6D4D5A6E5E6C626D6C4C5B
6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B90C7FC6D6D4B5A6D01FF02035B023F01E0
011F13F0020F01FC90B512C0020390B7C8FC020016FC031F15E0030392C9FCDB001F13E0
565479D265> I<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313
C0070F13E01BF0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0
614F13C04F13004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A55052
7CD15C> I<93380FFFC00303B6FC031F15E092B712FC0203D9FC0013FF020F01C0010F13
C0023F90C7000313F0DA7FFC02007F902601FFF0ED3FFE49496F7E49496F7F49496F7F49
90C96C7F4948707F4948707F01FF854A177F48864849717EA24849711380A2481BC04A83
481BE0A24A83481BF0A3481BF8A291CB7EA3B51AFCAF6C1BF8A26E5FA36C1BF0A36C6D4D
13E0A36C1BC06E5F6C1B806E5F6CDB01FE16006C6D902607FF80495A4C13E06C6D013F6D
495A017F91267F03F85C6D6C90277C00FC015B6D6C49D97E035B6D01806E485B6D6D48D9
1F8F5B6D01E0039F90C7FC6D01F06EB45A6DD9FCF85DDA3FFF6E13F0020F6D4913C00203
01FF90B5C8FC020091B512FC031F180C0303181EDB001FEBE3FE93C7EA01FF74133E7413
7E7413FEF2F8077290B5FC1CFCA285A21CF8A2851CF07314E0A27314C073148073140073
5B9638007FF8F21FE0576A79D265> I<B912F0F0FF8019F819FF1AC0D8000701F0C714F0
060F7F060113FE727F737F737F85737F87A2737FA387A863A2616363A24F5B4F5B4F90C8
FC4F5A06035B060F13F095B512C092B8C9FC19F819E019F89226F0000313FE9439007FFF
80727F727F727F727F727F8684A28684A787A71D1C75133EA38575137E73157C7513FC73
1401B86C6D9038F803F807039038FE07F07390B512E0736C14C0080F1400CEEA7FFC5F53
7CD164> I<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC00
6D5A4801E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F4981007F
82A28412FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFF
C017F06C16FC6C16FF6C17C06C836C836D826D82010F821303010082021F16801400030F
15C0ED007F040714E01600173F050F13F08383A200788200F882A3187FA27EA219E07EA2
6CEFFFC0A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFF
C003FFE0486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479D2
4B> I<003FBC1280A59126C0003F9038C0007F49C71607D87FF8060113C001E08449197F
49193F90C8171FA2007E1A0FA3007C1A07A500FC1BE0481A03A6C994C7FCB3B3AC91B912
F0A553517BD05E> I<B800C00103B612FCA5D8000701F8CAEBF000F31F80B3B3B11B3FA2
6D97C7FC81637F1B7E6D6D17FE505A6E7E505A6E6D15076E4D5A6E6D4B5A6E6D4B5A6E01
F84B5A6E6DDA03FFC8FC6E6CB46CEB0FFE6F9039F001FFF8030F90B65A030316C0DB007F
92C9FC040F14F8DC007F13805E537CD167> I<B700FE031FB512FEA5D8001F01F0CA383F
FE00F307F06D626F170F6D62811B1F6D6D601B3F6D97C7FC6F5F6D197E821BFE6E6D5E1A
016E6D5E1A036E60701507A26E6D5E1A0F6E6D5E1A1F6E6070153FA26E6D93C8FC626E6E
147E1AFE6F5E711301A26F6D5C19036F6D5C19076F5E71130FA26F6D5C191F6F6D5C193F
6F93C9FC715BA26FEC807E19FE706D5A18C1705C18E3705C18F318F770EBFFE0A2705CA2
705CA37091CAFCA2705BA2715AA3715AA2715AA2715A715A5F537DD166> I<003FB7D880
03B7FCA5D8000749C8000701F8C7FC6D6D9238007F806D6E93C8FC7015FE6D17016E6D5D
704A5A6E16076E6D4A5A6E6D5D4F5A6E6D143F6E6D4A5A7191C9FC6E16FE6EECC0017148
5A6F5D6F6D485A6FEBF80F71485A6F5D6F6D485AEFFF7F6F4ACAFC6F5C6F5CA2705B705B
8482707F707FA2707F7080855E4C80855E4C80DC3FCF7F058F7FEE7F074C6C7FDB01FE81
4C7E4B486C8003076E7F4B48814C7F4B486D7F033F824C7F4BC76C7F4B6E7F4A5A4B6E80
4A486E800207844A48814B6F7F4A4883023F824A486F7F92C96C7F02FE84010183010371
8090263FFFC084B76C0103B712F8A55D527CD166> 88 D<EC7FFF0107B512F0013F14FE
90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7F
A26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC01071487013FEBF0074913803901FF
FC004813F0485B485B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F
6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F01FC
010713E0010101E090C8FC3C387CB641> 97 D<EB3FF0B5FCA51203C6FCB3A4923801FF
E0030F13FE033FEBFFC092B612F002F301017F913AF7F8003FFEDAFFE0EB0FFF03806D7F
92C76C7F4A6E7F4A824A6E7FA2727EA285A28584A31A80AC1A00A44E5AA36118FF616E4A
5BA26E4A5B6E4A5B6F495BDACFC04990C7FCDA87F0EB7FFC913A03FE03FFF849C6B612E0
496D148049011F01FCC8FC90C7000313C041547BD24B> I<913801FFF8021FEBFF8091B6
12F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC491380D9FFF05B4817C048495B
5C5A485BA2486F138091C7FC486F1300705A4892C8FC5BA312FFAD127F7FA27EA2EF03E0
6C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F
9038E01FF0010390B55A01001580023F49C7FC020113E033387CB63C> I<4DB47E0407B5
FCA5EE001F1707B3A4913801FFE0021F13FC91B6FC010315C7010F9038E03FE749903800
07F7D97FFC0101B5FC49487F4849143F484980485B83485B5A91C8FC5AA3485AA412FFAC
127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF
80903A0FFFC07FCF6D90B5128F0101ECFE0FD9003F13F8020301C049C7FC41547CD24B>
I<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF849486D7E49486D7E
4849130F48496D7E48178048497F18C0488191C7FC4817E0A248815B18F0A212FFA490B8
FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C
6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390B55A010015C002
1F49C7FC020113F034387CB63D> I<ED3FFC0203B5FC020F14C0023F14E09139FFF81FF0
499038C03FF849EB807F49903800FFFC495A495AA2495AA2EE7FF8495AEE3FF0EE0FC093
C7FCAEB712E0A526007FF8C8FCB3B3A7007FB512FEA52E547CD329> I<DA3FFF14FF0103
B5D8F00713C0010FDAFC1F13E0013FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F
48496C13E0484990387FF01F4890C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2
003F82A9001F5EA26C6C4A5AA26C5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FC
D803EF14FC01C314F02607C03F90C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817
FF18C06C836C836C836D828448B9FC12074848C700031480D81FF8EC003F484815074848
6F13C083485A83A56D5D007F18806D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF8
6C01E049485A6C01FE011F5B6C6CB71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F
7CB543> I<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391FE07F
FC92393F001FFE037C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3AC
B6D8F807B612C0A542537BD24B> I<137F497E000313E0487FA2487FA76C5BA26C5BC613
806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325> I<EB3FF0B5FC
A51203C6FCB3A54CB512F8A59339003FFE00EF1FF0EF3FC04D5A4DC7FCEE03FEEE07F84C
5A4C5AEE7FC04CC8FC4B5A4B5AED0FF8ED1FE04B7E4B7EECF1FF02F37F02F77F91B6FC83
159F030F7F02FE80DAF8077F4A7E6F7F6F7F83707E82707F84707F707F82707F84707F17
7F717E4D13C0B6D8F003B6FCA540537CD247> 107 D<EB3FF0B5FCA512017EB3B3B3B1B6
12F0A51C537BD225> I<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E
030F6E017F8092271FE07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080
C602F06DD90780137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C
4A5EA24A5EA44A5EB3ACB6D8F807B6D8C03FB512FEA567367BB570> I<D93FF0EB1FFCB5
91B512C0030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081
ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B> I<9138
01FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49
486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400
FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D
495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC0201
13E03A387CB643> I<903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F91
3AF7F8007FFE0003D9FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285
187F85A4721380AC1A0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7
FC03F0EBFFFC9126FBFE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612
F8A5414D7BB54B> I<912601FFE0EB0780021F01F8130F91B500FE131F0103ECFF80010F
9039F03FC03F499039800FE07F903A7FFE0003F04948903801F8FF4849EB00FD4849147F
4A805A4849805A4A805AA291C87E5AA35B12FFAC6C7EA37EA2806C5EA26C6D5CA26C6D5C
6C6D5C6C93B5FC6C6D5B6D6C5B6DB4EB0FEF010F9038C07FCF6D90B5120F010114FED900
3F13F80203138091C8FCB1040FB61280A5414D7CB547> I<90397FE003FEB590380FFF80
033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF1500
14EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537> I<903903
FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148487F4980127F90C8
7EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C816C816C
81C681013F1580010F15C01300020714E0EC003F030713F015010078EC007F00F8153F16
1F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FFC00FFC6D
B55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635> I<143EA6147EA414FEA21301
A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE07C0AB01
1FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B020313802A4D
7ECB34> I<D93FF8913801FFC0B50207B5FCA50003ED001FC61607B3AE5FA35FA2017F5D
173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC0903A0FFFC03F836D90B51203010114
FE6D6C13F8020701E091C7FC42377BB54B> I<B600F00107B5FCA5000101F8C8EA7FE06C
6DED3F00A2017F163E6E157E013F167C6E15FC6D5E6F13016D5E8117036D5E6F13076D5E
6F130F6D5E6F131F6D93C7FC815F6E6C133E177E023F147C6F13FC6E5C16816E5C16C3A2
6EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F5AA36F5AA26F5AA26F5AA26F5A6F5A4036
7DB447> I<B6D8E07FB5D8C003B512C0A5000101F0C701F0C7381FF8006E027FED07E06C
715DA26E023F150F017F705DA26E181F013F4B6C92C7FC6E606D70143E94B5FC6F177E6D
4A6E137C03C001F315FC6D715B160303E001E114016D020702E05B03F013C06D71485A16
0F03F8D9807F13076D05F85B93381F003F03FC160F027F4902FC5BDBFE3E011F131F023F
04FE90C8FC167EDBFF7C010F5B6E01FCECFF3E4C6D137E6E5FA24C7F6E5F4C7F6E5FA24C
7F6E5F4C147FA26E5F93C8123F6F5EA2033E6FC9FC5A367DB461> I<007FB500F090387F
FFFEA5C66C48C7000F90C7FC6D6CEC07F86D6D5C6D6D495A6D4B5A6F495A6D6D91C8FC6D
6D137E6D6D5B91387FFE014C5A6E6C485A6EEB8FE06EEBCFC06EEBFF806E91C9FCA26E5B
6E5B6F7E6F7EA26F7F834B7F4B7F92B5FCDA01FD7F03F87F4A486C7E4A486C7E020F7FDA
1FC0804A486C7F4A486C7F02FE6D7F4A6D7F495A49486D7F01076F7E49486E7E49486E7F
EBFFF0B500FE49B612C0A542357EB447> I<B600F00107B5FCA5C601F8C8EA7FE06EED3F
00A26D6C153E187E013F167C6E15FC6D5E6F13016D5E6F13036D5E8117076D6D5C170F6D
6D5C171F6D93C7FC6F5B027F143E6F137E023F147C6F13FCA26E6D5A16816EEBC1F016C3
6E5C16E76E5C16FF6E5CA26E91C8FCA36F5AA26F5AA26F5AA26F5AA26F5AA35E150F5E15
1F93C9FC5DD81FC0133E486C137E486C137C486C13FC5D14015D14034A5A6C48485A4948
5A263FC07FCAFCEB81FE6CB45A6C13F000035BC690CBFC404D7DB447> I<001FB8FC1880
A3912680007F130001FCC7B5FC01F0495B495D49495B495B4B5B48C75C5D4B5B5F003E4A
90C7FC92B5FC4A5B5E4A5B5CC7485B5E4A5B5C4A5B93C8FC91B5FC495B5D4949EB0F805B
495B5D495B49151F4949140092C7FC495A485E485B5C485E485B4A5C48495B4815074849
495A91C712FFB8FCA37E31357CB43C> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmr10 10.95 80
/Fs 80 124 df<4AB4EB0FE0021F9038E03FFC913A7F00F8FC1ED901FC90383FF03FD907
F090397FE07F80494801FF13FF4948485BD93F805C137F0200ED7F00EF003E01FE6D91C7
FC82ADB97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF80A339407FBF35> 11
D<EC03FE91383FFF809138FE03E0903903F800F0D90FE013384948137C90393F8001FE90
387F00035B5BA2485A6F5AED007093C7FCAA16FEB7FCA33901FC000315011500B3AC486C
497EB5D8F87F13FCA32E407EBF33> I<EC03FF023F13EE9138FE01FEEB03F090380FE003
EB1FC0EB3F80EB7F005B5B150148481300AEB7FCA3D801FCC7FCB3AE486C497EB5D8F87F
13FCA32E407EBF33> I<DA03FE49B4FC91273FFF801F13C0913BFE03E07F01F0903C03F0
00F1FC0078D90FE0D97FF0131C49484948133E4948484913FF494848495A5B491500A248
485C03016E5A0300153896C7FCAA197FBBFCA3D801FCC738FE00018485B3AC486C496CEC
FF80B5D8F87FD9FC3F13FEA347407EBF4C> I<013F1603D9FFC04B7E2601E0E0150F2607
C070151F48486C4BC7FC023E157E48486C15FE48D90FC0EB03FC003ED90EF0EB0FF8DA0F
3F13FD007E903A070FFFF1F0007C0200EB03E0160000FC6D6C495A170F604DC8FC5F173E
5F17FC5F4C5A1603007CD907005B4C5A007E150F003E495C020E49C9FC003F5D6C49133E
260F803C5B023813FC6C6C485B3A01E0E001F03800FFC090273F0003E0133F90C70007EC
FFC09339C001E0E0923A0F8007C070031F49487E0400143C033E90381F001C037E497F03
7C133E4B150F0201027E7F4B137C4A5A020702FCEB03805D4A5A141F92C7FC143E147E14
7C5CA2495A0103037CEB07005C4948147E010F033E5B4A160E49C8123F496F5B013E9238
0F803C49173801FC6F6C5A49923801E0E0496FB45A0160043FC7FC41497BC34C> 37
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
120E5A1218123812300B1C79BE19> 39 D<1430147014E0EB01C0EB03801307EB0F0013
1E133E133C5B13F85B12015B1203A2485AA2120F5BA2121F90C7FCA25AA3123E127EA612
7C12FCB2127C127EA6123E123FA37EA27F120FA27F1207A26C7EA212017F12007F13787F
133E131E7FEB07801303EB01C0EB00E014701430145A77C323> I<12C07E12707E7E121E
7E6C7E7F12036C7E7F12007F1378137CA27FA2133F7FA21480130FA214C0A3130714E0A6
130314F0B214E01307A614C0130FA31480A2131F1400A25B133EA25BA2137813F85B1201
5B485A12075B48C7FC121E121C5A5A5A5A145A7BC323> I<EB03C0A2805CA600F0140F00
FC143F00FE147F00FF14FF393FC3C3FC390FE187F03903F18FC03900FDBF00EB3FFCEB0F
F0EB03C0EB0FF0EB3FFCEBFDBF3903F18FC0390FE187F0393FC3C3FC39FF03C0FF00FE14
7F00FC143F00F0140F00001400A6805CA220277AC32D> I<121EEA7F8012FF13C0A213E0
A3127FEA1E601200A413E013C0A312011380120313005A120E5A1218123812300B1C7989
19> 44 D<B512FEA617067F961E> I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A79
8919> I<ED0180ED03C01507A21680150FA216005DA2151E153EA2153C157CA2157815F8
A25D1401A25D1403A25D1407A25D140FA24AC7FCA2141E143EA2143C147CA2147814F8A2
5C1301A25C1303A25C1307A25C130FA291C8FC5BA2131E133EA25BA2137813F8A25B1201
A25B1203A25B1207A25B120FA290C9FC5AA2121E123EA2123C127CA2127812F8A25A1260
225B7BC32D> I<EB01FE90380FFFC090383F03F090387C00F849137C48487F48487F4848
EB0F80A2000F15C04848EB07E0A3003F15F0A290C712034815F8A64815FCB3A26C15F8A5
6C6CEB07F0A3001F15E0A36C6CEB0FC0A26C6CEB1F80000315006C6C133E6C6C5B017C5B
90383F03F090380FFFC0D901FEC7FC263F7DBC2D> I<EB01C013031307131F137FEA07FF
B5FC139FEAF81F1200B3B3ACEB7FF0B612F8A31D3D78BC2D> I<EB07FC90383FFF8090B5
12E03903F01FF83907C007FC390F0001FE001E6D7E001C1580003CEC7FC05AED3FE01270
B4FC6DEB1FF07FA56C5A6CC7FC120CC813E0153FA216C0157F168015FF16004A5A5D4A5A
4A5A5D4A5A4A5A4AC7FC147E147C5C495A495A495A495A49C71270133E133C5B4914E048
5A485A485A48C7120148B6FCA25A4815C0B7FCA3243D7CBC2D> I<EB07FC90383FFF8090
38F80FE03901E003F839078001FCD80F007F000E6D7E001E1580D81F80137F486C14C07F
A27F5BA2121F6C5AC8138015FF1600A24A5AA24A5A5DEC07E04A5A023FC7FCEB1FFCECFF
809038000FE0EC07F86E7E6E7E6E7E1680ED7FC0A216E0153FA216F0A2120C123F487E48
7EA316E0A249137F6CC713C01278EDFF807E6C4913006C495A3907C007FC3903F80FF0C6
B55A013F1380D907F8C7FC243F7CBC2D> I<150E151E153EA2157EA215FE1401A21403EC
077E1406140E141CA214381470A214E0EB01C0A2EB0380EB0700A2130E5BA25B5BA25B5B
1201485A90C7FC5A120E120C121C5AA25A5AB8FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD
2D> I<00061403D80780131F01F813FE90B5FC5D5D5D15C092C7FC14FCEB3FE090C9FCAC
EB01FE90380FFF8090383E03E090387001F8496C7E49137E497F90C713800006141FC813
C0A216E0150FA316F0A3120C127F7F12FFA416E090C7121F12FC007015C012780038EC3F
80123C6CEC7F00001F14FE6C6C485A6C6C485A3903F80FE0C6B55A013F90C7FCEB07F824
3F7CBC2D> I<EC1FE0ECFFF8903803F03E90380FC00F90391F000780133E017EEB1FC049
133F4848137F12035B12074848EB3F80ED1F00001F91C7FC5BA2123FA3485AA214FE9038
87FF8039FF8F07E090389C01F09038B800FC01B0137E13F0497F16804914C0A2ED1FE0A3
4914F0A5127FA6123F6D14E0A2121FED3FC0A26C6C1480A20007EC7F006C6C137E6C6C5B
6C6C485A90387E07F06DB45A010F1380D903FCC7FC243F7CBC2D> I<1238123C123F90B6
12FCA316F85A16F016E00078C712010070EC03C0ED078016005D48141E151C153C5DC812
7015F04A5A5D14034A5A92C7FC5C141EA25CA2147C147814F8A213015C1303A31307A313
0F5CA2131FA6133FAA6D5A0107C8FC26407BBD2D> I<EB03FC90381FFF8090387C07E090
38F001F83901E0007C48487F48487F48C7FCED0F80121E16C0003E1407A4123FA26DEB0F
807F6C6C131F6D140001FC133E6C6C5B9038FF80786C6D5A6CEBF3E06CEBFF806C91C7FC
133F6D13C06D7F013F13F801787F48486C7E3903E01FFF48486C1380260F800313C04848
7E489038007FE0003E143F007E141F007CEC0FF01507481403A31501A46C15E0007C1403
A2007E15C06C14076CEC0F806DEB1F006C6C133ED807F05B3901FC03F86CB512E0011F13
80D903FCC7FC243F7CBC2D> I<EB03FCEB1FFF90387E07C09038FC03F048486C7E48486C
7E4848137C000F147E4848137F81003F15805B007F15C0A2151F12FF16E0A516F0A5127F
153FA36C7EA2001F147F120F6C6C13FF6D13DF000313013900F8039F90387E0F1FD91FFE
13E0EB07F090C7FCA2ED3FC0A41680157FD80F801400487E486C13FEA24A5A5D49485AEB
8007391E000FE0001F495A260FC07FC7FC3803FFFE6C13F838003FC0243F7CBC2D> I<12
1EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121EEA7F80A2EAFFC0A4EA7F80A2EA1E00
0A2779A619> I<007FB912E0BA12F0A26C18E0CDFCAE007FB912E0BA12F0A26C18E03C16
7BA147> 61 D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801C7FC15C3A29138
0381FEA34AC67EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA349486D7E91B6FC
A249819138800001A249C87EA24982010E157FA2011E82011C153FA2013C820138151FA2
017882170F13FC00034C7ED80FFF4B7EB500F0010FB512F8A33D417DC044> 65
D<B712FCEEFF8017F00001903980000FF86C6CC7EA03FE707E701380EF7FC0EF3FE0A2EF
1FF0A218F8A3170F171FA318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8EE7FE0
91B6C7FC17E091C7EA07FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18FC1707
A218FEA718FC170FA2EF1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE00B85A
17E094C7FC373E7DBD40> I<DB3FF01306912603FFFE130E020F9038FF801E913A3FF007
E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948140FD93FE0140749481403495A
91C812014848150012034848167E5B000F173EA24848161EA2123F5B180E127FA3491600
12FFAC127F7F180EA2123FA27F001F171E181C6C7EA20007173C6D16386C6C1678000117
706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E902600
FF8013F891393FF007F0020FB512C0020391C7FC9138003FF037427BBF42> I<B712FCEE
FF8017E000019039C0001FF86C6C48EB03FEEE00FF717E717EEF0FE084717E717E170184
717EA21980187F19C0A3F03FE0A519F0AB19E0A5F07FC0A21980A218FF19004D5AA24D5A
6017074D5A4D5AEF7FC04DC7FCEE03FE48486CEB1FF8B85A178004FCC8FC3C3E7DBD45>
I<B912E0A300019038C000016C6C48EB001FEF0FF01703A217011700A31870A418381638
A41800A21678A216F81501150791B5FCA3EC8007150115001678A21638A2180EA3181C93
C7FCA4183C1838A21878A318F8EF01F0A21707170F173F48486CEB03FFB912E0A3373E7D
BD3E> I<B91280A300019038C000036C6C48EB007FEF1FC0170F1707A21703A31701A4EF
00E0A21638A31800A31678A216F81501150791B5FCA3EC8007150115001678A21638A693
C8FCAF3801FFE0B612F0A3333E7DBD3B> I<DB3FE0130C912603FFFE131C021F9038FF80
3C913A7FF00FC07C9139FF0001F0D903FC90380078FC4948143DD91FE0141F4948140F49
48140701FF15034890C8FC491501485A000716005B000F177C5B001F173CA2485AA2181C
127FA25B95C7FC12FFAB041FB512F0127FA26D9139000FFE00EF03FC123FA27F121FA26C
7EA212077F12036C7E7F6C7F6D6C14076D7E6D6C140FD907F8141ED903FEEC3C7C902600
FF80EBF83C913A7FF007F01C021FB5EAC00C020391C8FC9138003FF03C427BBF47> I<B6
D8C01FB512F8A3000101E0C7383FFC0026007F80EC0FF0B3A691B7FCA30280C7120FB3A9
2601FFE0EC3FFCB6D8C01FB512F8A33D3E7DBD44> I<B612F0A3C6EBF000EB3FC0B3B3B2
EBFFF0B612F0A31C3E7EBD21> I<011FB512FCA3D9000713006E5A1401B3B3A6123FEA7F
80EAFFC0A44A5A1380D87F005B007C130700385C003C495A6C495A6C495A2603E07EC7FC
3800FFF8EB3FC026407CBD2F> I<B600C090387FFFFCA3000101E0C7000F138026007F80
913807FE0018F818E0604D5A4DC7FC173E5F5F4C5A4C5A4C5A4C5A4CC8FC163E5E5E4B5A
4B5AED07804B7E151F4B7E4B7E15FF913881EFF8913883C7FCEC878791388F03FE91389E
01FF14BCDAF8007F4A6D7E5C4A6D7E4A6D7EA2707E707EA2707E707EA2707F717E84173F
717E717EA2717E848419802601FFE04A13C0B600C090B6FCA3403E7DBD47> I<B612F8A3
000101E0C9FC38007F80B3B0EF0380A517071800A45FA35FA25F5F5F4C5A160748486C13
3FB8FCA3313E7DBD39> I<B500C093B512C0A300016D4BEBE000D8007F1880D977F0ED03
BFA3D973F8ED073FA3D971FC150EA2D970FE151CA3027F1538A36E6C1470A36E6C14E0A2
6E6CEB01C0A36E6CEB0380A36E6CEB0700A26E6C130EA36E6C5BA3037F5BA26F6C5AA36F
6C5AA392380FE1C0A3923807F380A26FB4C7FCA36F5AA213F8486C6D5AD807FFEFFFE0B5
00F80178017FEBFFC0A34A3E7CBD53> I<B56C91B512F88080D8007F030713006EEC01FC
6E6E5A1870EB77FCEB73FEA2EB71FF01707FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E
6E7FA26F7E6F7EA26F7E6F7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0F
F8A2EE07FCEE03FEA2EE01FF7013F0A2177F173FA2171F170FA2170701F81503487ED807
FF1501B500F81400A218703D3E7DBD44> I<ED7FE0913807FFFE91391FC03F8091397E00
07E04948EB03F8D907F0EB00FE4948147F49486E7E49486E7E49C86C7E01FE6F7E000183
49150300038348486F7EA248486F7EA2001F188049167F003F18C0A3007F18E049163FA3
00FF18F0AC007F18E06D167FA4003F18C0A26C6CEEFF80A36C6C4B1300A26C6C4B5A0003
5F6D150700015F6C6C4B5A6D5E6D6C4A5A6D6C4A5A6D6C4AC7FC6D6C14FED901FCEB03F8
D9007FEB0FE091391FC03F80912607FFFEC8FC9138007FE03C427BBF47> I<B712F8EEFF
8017E000019039C0003FF86C6C48EB07FCEE01FE707EEF7F80EF3FC018E0A2EF1FF0A218
F8A818F0A2EF3FE0A218C0EF7F80EFFF004C5AEE07FCEE3FF091B612C04CC7FC0280C9FC
B3A73801FFE0B612C0A3353E7DBD3E> I<ED7FE0913807FFFE91391FC03F8091397F000F
E0D901FCEB03F8D907F0EB00FE4948147F49486E7E49486E7E49C86C7E498248486F7E49
150300038348486F7EA2000F834981001F1880A24848EE7FC0A3007F18E0A249163FA200
FF18F0AC007F18E0A26D167FA3003F18C0A26C6CEEFF80A3000F18006D5D0007DA0F805B
6C6C90393FE003FCED70706C6C496C485A6C6C48486C485A017FD9800E5BD93F81903806
1FC0D91FC19038073F80D90FE14AC7FCD907F1EB03FE902601FDC013F8903A007EE007E0
91271FF03FC013180207B5FC9139007FE1E0DB0001143883711378A2706C13F0EFFF0318
FFA27113E0A37113C0711380711300715AEF01F83D527BBF47> I<B712C016FCEEFF8000
01D9C00013E06C6C48EB1FF0EE07FCEE01FE707E84717EA2717EA284A760177F606017FF
95C7FCEE01FCEE07F8EE1FE0EEFF8091B500FCC8FC16F091388001FCED003FEE1FC0707E
707E83160383160183A383A484A4F0C004190EA28218E0057F131E2601FFE0161CB600C0
EB3FF094381FF83805071370CA3801FFE09438003F803F407DBD43> I<D907FC13189039
1FFF8038017FEBE0783901FC03F83A03F0007CF8D807C0133F4848130F001F140748C7FC
003E1403007E1401A2007C140012FC1678A46C1538A27EA26C6C14007F7FEA3FF8EBFF80
6C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0010714F0EB007F020713F89138
007FFC150FED07FE15031501ED00FFA200E0157FA3163FA27EA3163E7E167E6C157C6C15
FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF07F803F8090391FFFFE00D8E007
13F839C0007FC028427BBF33> I<003FB91280A3903AF0007FE001018090393FC0003F48
C7ED1FC0007E1707127C00781703A300701701A548EF00E0A5C81600B3B14B7E4B7E0107
B612FEA33B3D7DBC42> I<B600C090B512F8A3000101E0C70007130026007F80EC01FC71
5A1870B3B3A4013F16F06E5DA21701011F5E80010F15036E4A5A010793C7FC6D6C5C6D6C
141E6D6C5C027F14F86E6C485A91390FF00FE00203B51280020049C8FCED1FF03D407DBD
44> I<B691380FFFFEA3000301E0020113E06C01809138007F806CEF3F00017F163E181C
6E153C013F1638A26E1578011F1670A26D6C5DA26E140101075EA26E140301035EA26D6C
4AC7FCA2806D150EA26F131E027F141CA26F133C023F1438A26E6C5BA26F13F0020F5CA2
EDF80102075CA26E6C485AA2EDFE07020191C8FCA26F5A6E130EA2ED7F9CA216DCED3FF8
A36F5AA36F5AA26F5AA36F5A3F407EBD44> I<B500FE017FB5D88007B5FCA3000301C001
0101E0C713F86C90C849EC3FE07148EC0F807E7215006E143F017F190E84A26D6C60A24D
7E6D6C60A2EFE7F86D6C60A2933801C3FC6E18F001076104037F6E028114010103610407
7F17006D6C4D5AA2040EEB7F806D6C4DC7FCA24CEB3FC0DA7F80160EA24CEB1FE003C016
1E023F171C047814F0DBE070010F133C021F173804F014F84C1307DA0FF05EA2DBF1C0EB
03FCDA07F95EA2DBFB80EB01FEDA03FF6F5AA293C8FCA26E5FA24B157F020094C8FCA24B
81037C153EA20378151E0338151C58407EBD5D> I<007FB5D8C003B512E0A3C649C7EBFC
00D93FF8EC3FE06D48EC1F806D6C92C7FC171E6D6C141C6D6C143C5F6D6C14706D6D13F0
4C5ADA7FC05B023F13036F485ADA1FF090C8FC020F5BEDF81E913807FC1C163C6E6C5A91
3801FF7016F06E5B6F5AA26F7E6F7EA28282153FED3BFEED71FF15F103E07F913801C07F
0203804B6C7EEC07004A6D7E020E6D7E5C023C6D7E02386D7E14784A6D7E4A6D7F130149
486E7E4A6E7E130749C86C7E496F7E497ED9FFC04A7E00076DEC7FFFB500FC0103B512FE
A33F3E7EBD44> I<B66C0103B51280A3000101F0C8EBF8006C6C48ED3FC0725A013F041E
C7FC6D7E606D6C15386D6C1578606D6C5D6E14016D5E6D6D1303606E6C49C8FC6E6C5B17
0E6E6C131E171C6E6C5B6E6C137817706E6C13F06F5B6E13016EEB83C05FED7FC7DB3FE7
C9FC16EFED1FFE5E150F6F5AB3A4ED1FFC020FB512FCA3413E7FBD44> I<003FB712F8A3
91C7EA1FF013F801E0EC3FE00180EC7FC090C8FC003EEDFF80A2003C4A1300007C4A5A12
784B5A4B5AA200704A5AA24B5A4B5AA2C8485A4A90C7FCA24A5A4A5AA24A5AA24A5A4A5A
A24A5A4A5AA24990C8FCA2495A4948141CA2495A495AA2495A495A173C495AA24890C8FC
485A1778485A484815F8A24848140116034848140F4848143FED01FFB8FCA32E3E7BBD38
> I<EAFFFCA4EAF000B3B3B3B3ABEAFFFCA40E5B77C319> I<EAFFFCA4EA003CB3B3B3B3
ABEAFFFCA40E5B7FC319> 93 D<EB0FF8EBFFFE3903F01F8039078007E0000F6D7E9038
E001F8D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90381FF87FEB7F8038
01FC00EA07F8EA0FE0485A485AA248C7FCEE038012FEA315FFA3007F5BEC03BF3B3F8007
1F8700261FC00E13CF3A07F03C0FFE3A01FFF807FC3A003FC001F0292A7DA82D> 97
D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09039FDE001F09039FF
C000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17F0A2160FA217
E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F09039E0780FC09026
C03FFFC7FCC7EA07F82D407EBE33> I<49B4FC010F13E090383F00F8017C131E4848131F
4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9FC5AAB6C7EA3
003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E6C6C137890383F01
F090380FFFC0D901FEC7FC222A7DA828> I<ED01FC15FFA3150715031501B114FF010713
E190381F80F990387E003D49131FD803F81307485A49130348481301121F123F5B127FA2
90C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C497ED8007C0179
13F890383F01F190380FFFC1903A01FE01FC002D407DBE33> I<EB01FE90380FFFC09038
3F03F09038FC01F848486C7E4848137E48487F000F158049131F001F15C04848130FA212
7F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E1501000F15C06C6C1303
6DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0010090C7FC232A7EA828>
I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F811401137FEC00FE01
FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C> I<167C903903F801
FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07E000FC0600000F6EC7FC
49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F803E03903FE0FC026071F
FFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E7E6C15E06C810003813A
0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C153E007E157E6C5D6C6C49
5A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7EA82D> I<EA01
FC12FFA3120712031201B1EC01FE913807FFC091381E07E091387803F09138E001F8D9FD
C07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13FCA32E3F7DBE33> I<EA
01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA3120712031201B3AC487EB512
F0A3143E7DBD1A> I<1478EB01FEA2EB03FFA4EB01FEA2EB00781400AC147FEB7FFFA313
017F147FB3B3A5123E127F38FF807E14FEA214FCEB81F8EA7F01387C03F0381E07C0380F
FF803801FC00185185BD1C> I<EA01FC12FFA3120712031201B292B51280A392383FFC00
16E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F4A7E13FD9038FFDFC0EC9F
E0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F7EA282486C14FEB539F07F
FFE0A32B3F7EBE30> I<EA01FC12FFA3120712031201B3B3B1487EB512F8A3153F7DBE1A
> I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F03F0913B7803F03C01F800
07903BE001F87000FC2603F9C06D487F000101805C01FBD900FF147F91C75B13FF4992C7
FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA347287DA74C> I<3901F801FE00
FF903807FFC091381E07E091387803F000079038E001F82603F9C07F0001138001FB6D7E
91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA733> I<14FF010713E09038
1F81F890387E007E01F8131F4848EB0F804848EB07C04848EB03E0000F15F04848EB01F8
A2003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F15F86C6CEB03F0A26C
6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC90380FFFF0010090C7FC28
2A7EA82D> I<3901FC03FC00FF90381FFF8091387C0FE09039FDE003F03A07FFC001FC6C
496C7E6C90C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE0FF0A4EE1FE0A2EE
3FC06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC780FC0DA3FFFC7FCEC07
F891C9FCAD487EB512F8A32D3A7EA733> I<02FF131C0107EBC03C90381F80F090397F00
387C01FC131CD803F8130E4848EB0FFC150748481303121F485A1501485AA448C7FCAA6C
7EA36C7EA2001F14036C7E15076C6C130F6C7E6C6C133DD8007E137990383F81F190380F
FFC1903801FE0190C7FCAD4B7E92B512F8A32D3A7DA730> I<3901F807E000FFEB1FF8EC
787CECE1FE3807F9C100031381EA01FB1401EC00FC01FF1330491300A35BB3A5487EB512
FEA31F287EA724> I<90383FC0603901FFF8E03807C03F381F000F003E1307003C130312
7C0078130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C7F6C1480000114
C0D8003F13E0010313F0EB001FEC0FF800E01303A214017E1400A27E15F07E14016C14E0
6CEB03C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA824> I<131CA6133CA413
7CA213FCA2120112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A912009038FE01C0
A2EB7F03013F138090381F8700EB07FEEB01F81B397EB723> I<D801FC14FE00FF147FA3
000714030003140100011400B3A51501A31503120015076DEB06FF017E010E13806D4913
FC90381FC078903807FFE00100903880FE002E297DA733> I<B539E00FFFE0A32707FE00
0313006C48EB00FC5E00015D7F00005DA26D13016D5CA26D6C485AA2ECC007011F91C7FC
A290380FE00EA2ECF01E0107131CA26D6C5AA2ECFC7801011370A2ECFEF001005BA2EC7F
C0A36E5AA26EC8FCA3140E2B287EA630> I<B53BC3FFFE03FFF8A3290FFE003FE00013C0
6C486D48EB3F806C4817006D010F141E00016F131C15076D163C00004A6C1338A2017F5E
4B7E151DD93F805DED3DFC1538D91FC04A5AED78FE9238707E03D90FE0017F5BEDE03F02
F0140701070387C7FC9138F1C01F02F9148F010315CE9138FB800F02FF14DE6D15FCED00
076D5DA24A1303027E5CA2027C1301023C5C023813003D287EA642> I<B539F01FFFE0A3
0003D9C00F1300C690388007F8D97F0013E002805BD93FC05B011F49C7FC90380FE00EEC
F01E6D6C5A01035B6D6C5A6E5AEB00FF6E5A6E5A81141F814A7E81147BECF1FC903801E1
FEECC0FF01037F49486C7ED90F007F011E6D7E013E130F496D7E01FC80486C80000F4A7E
B539803FFFF8A32D277FA630> I<B539E00FFFE0A32707FE000313006C48EB01FC6F5A00
015D7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E5A010F130EA26D6C5AA2
ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8FCA2140EA2141E14
1C143C1438A2147800181370127EB45BA2495AA248485AD87E07C9FCEA780EEA3C3CEA1F
F8EA07E02B3A7EA630> I<001FB61280A2EBE0000180140049485A001E495A121C4A5A00
3C495A141F00385C4A5A147F5D4AC7FCC6485AA2495A495A130F5C495A90393FC00380A2
EB7F80EBFF005A5B484813071207491400485A48485BA248485B4848137F00FF495A90B6
FCA221277EA628> I<B812F0A22C0280982D> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmbx12 20.736 16
/Ft 16 122 df<C0FCA48BA4C7003F0280C8120FF3007F1C0F1C030A00801D3F89898989
89A2898B1E7FA21E3FA31E1FA28BA21E0FF207F8A5787EA4080F92C8FCA31A1FA21A3FA2
1A7FF101FF1907193F94B7FCA8943880003F19071901F1007F1A3FA21A1FA21A0FA2F71F
E01A07A2F73FC0A61F7F97CA1380A41FFFA3541300A366A266671E0FA21E1FA21E3F1E7F
545A65651D0F1D3F9AB5FC1C030A3F5C0907B6FCC0FCA567A373757AF47F> 69
D<BC12FCF3FFF01CFF1DE01DFC1DFF1EC08AC7003F91C8000115F8E0000F80090180756C
6D7E76801C0F76808B7680888B7680A28BA2892080A420C0AB2080A49AB61200A267A267
6467525C64670A1F5C525C5291C7FC51B55A090F14F850B65A94BA12C09BC8FC1DFC1DF0
9AC9FC1CF809FCCAFC0580CEFCB3B3A8BA12E0A872767AF584> 80
D<922603FFF8150E037FD9FFC0143F0203B600FC5C021F03FF5C027FEEC00149B8EAF003
49EFFC07010FDA000F13FE4901F09039007FFF8F4901C0020F13DF4990C8000390B5FC49
4815004801F8163F48844A8248498248844A8248844A834885A291CB7E5A86A286B5FC86
80A28680A280A26E8380806E187E6E95C7FC6C8015E015FCEDFFC06C15FCEEFFE06C16FF
18F06CEFFF8019F06C18FE737E6C856C19F06C19FC6D846D846D856D856D850101856D85
023F846E841407020084031F18801500040F17C0EE007F050716E0EF003F1803DE007F14
F0191F8585070114F8A28586007E85B4FC86A286A37F86A36D1AF0A37F1CE06D60A26D1A
C06D607F6D1A806E5F6E4D13006E606E17FF02FC4C5B02FF4C5B03E04B5B03FC031F5B01
FBD9FF80027F5B01F102FE0107B55AD9E07F90B8C7FC6E17FCD9C00F5FD9800317E090C7
6C168048020F4BC8FC48020015F00070030349C9FC557A75F76C> 83
D<92383FFFF80207B612E0027F15FC49B87E010717E0011F83499026F0007F13FC4948C7
000F7F90B502036D7E486E6D806F6D80727F486E6E7F8486727FA28684A26C5C72806C5C
6D90C8FC6D5AEB0FF8EB03E090CAFCA70507B6FC041FB7FC0303B8FC157F0203B9FC021F
ECFE0391B612800103ECF800010F14C04991C7FC017F13FC90B512F04814C0485C4891C8
FC485B5A485B5C5A5CA2B5FC5CA360A36E5DA26C5F6E5D187E6C6D846E4A48806C6D4A48
14FC6C6ED90FF0ECFFFC6C02E090263FE07F14FE00019139FC03FFC06C91B6487E013F4B
487E010F4B1307010303F01301D9003F0280D9003F13FC020101F8CBFC57507ACE5E> 97
D<93387FFF80030FB512FC037FECFF804AB712E0020716F8021F16FE027FD9F8077F49B5
D8C000804991C7003F13E04901FC020F7F49496E7F49498049496E7F49496E7F90B55A48
727E92C914804884485B1BC048841BE0485BA27313F05AA25C5AA21BF885A2B5FCA391BA
FCA41BF002F8CCFCA67EA3807EA47E806CF103F0F207F86C7F1A0F6C6E17F06C191F6F17
E06C6E163F6D6DEE7FC06D6D16FF6D6D4B13806D6D4B13006D6D6CEC0FFE6D02E0EC3FFC
6D02F8ECFFF86D9126FFC00F5B023F91B65A020F178002034CC7FC020016F8031F15E003
0392C8FCDB000F13E04D507BCE58> 101 D<F37F80922607FFFC913807FFE092B600E001
1F13F8020703FC017F13FC021FDBFF01B512FE027F16C349B800F7EBBFFF49DA803F9038
FFF83F010F9026FC000714C04901F00101EC007F49496D148049496E6D7E90B517E04B6E
15FE48F1F01F4891C86C9038F80FFCF307F098C7FC48496F7FA34885AB6C61A36C6D4B5B
A36C6E4A5B6C616F5C6D606D6D91B55A6D6D4991C8FC6D01FC01075B9226FF803F13F893
B65A4917C0D93F1F93C9FC020715FCD97E0015E0030701FCCAFC01FE90CDFCA412017FA2
80A280808014FE6C90B812C019FF1AF01AFC6DF0FF801BE06D851BFC6D856D856D1A806D
1AC05B011F1AE0137F48BC12F0000701FCC9FC4801E0040314F84849EE007F4849171F91
CB1207487313FC5B00FF855B86A56D60007F1BF86D60A26C6D4D13F06E5F6C6D4D13E06C
6D4D13C06C01FC94B512806C01FF04031400C602C0030F13FC6D01F8037F5B011FD9FFE0
011FB512E0010791B8128001014EC7FC6D6C17F8020F17C0DA007F03F8C8FC03014AC9FC
58727BCE61> 103 D<EB01FCEB07FF011F13C0497F497F90B57EA24880A24880A76C5CA2
6C5CA26D5B6D5B6D5B010790C8FCEB01FC90CAFCB2903801FFFC007FB5FCA8C67E131F7F
B3B3B3A5B81280A8297979F835> 105 D<903801FFFCB6FCA8C67E131F7FB3B3B3B3B3AB
B812C0A82A7879F735> 108 D<902601FFF891260FFFE093383FFF80B692B500FE0303B5
12F805036E6C020F14FE050F03E0023F6E7E053F03F891B712E04D6F4982932701FFF01F
6D0107D9C07F7F4CD900076D90270FFC001F7FDC07FC6D9126801FF06D7FC66CDA0FF06D
9126C03FC06D7F011FDA1FC06D4BC77E6D4A48DCE0FE834CC8ECE1FC047E6FD9F1F86E80
4CEFF3F0DBF9F8EFF7E04C6003FB7001FF6F804C6015FF4C95C9FCA24C5FA293C95CA44B
60B3B3A6B8D8E003B8D8800FB712FEA8974E79CDA2> I<902601FFF891380FFFE0B692B5
12FE05036E7E050F15E0053F15F84D81932701FFF01F7F4CD900077FDC07FC6D80C66CDA
0FF06D80011FDA1FC07F6D4A48824CC8FC047E6F7F5EEDF9F85E03FB707F5E15FF5EA25E
A293C9FCA45DB3B3A6B8D8E003B81280A8614E79CD6C> I<93381FFFE00303B6FC031F15
E092B712FC020316FF020F17C0023FD9FC0014F091B500C0010F13FC4991C700037F4901
FC02007F010F496F13C049496F7F49496F7F4B8149496F7F90B5C96C7F4886A24849707F
481B80A248497014C0A2481BE0A348497113F0A3481BF8A5B51AFCAE6C1BF8A46C1BF06E
94B5FCA36C1BE0A26C6D4C14C0A26C1B806E5E6C1B006C6E4B5BA26C6E4B5B6D6D4B5B6D
6D4B5B6D6D4B5B6D6D92B55A6D01FF02035C6D02C0010F91C7FC010002FC90B512FC6E90
B75A021F17E00207178002014CC8FCDA003F15F0030392C9FCDB001F13E056507BCE61>
I<902601FFF8EB07FEB691383FFFC094B512F00403804C14FE4C8093261FFC3F13809326
3FE07F13C0DC7F80B5FCC66C5D011FDAFE0114E06DEBF9FC16F815FB16F016E015FF16C0
7114C05E72138095381FFE0093C76C5AF001E095C8FCA25DA65DB3B3A2B812F8A8434E7A
CD4F> 114 D<912603FFFCEB0780027F9039FFE00FC00103B6EAF83F010FEDFEFF013F92
B5FC49EB000F2601FFF01300480180143F4890C8120F4848814848814981123F83485A18
7FA212FF6D163FA37F7F6DEE1F8002C092C7FC14F014FEECFFF06CECFF8016FEEEFFE06C
16FC6C16FF18C06C836C17F86C836C836C83013F17806D17C0010717E0010117F0EB003F
020716F8EC001F030015FC1607EE007F051F13FE1707007E82B482836D167FA2183F7F18
1FA27F19FC7FA26D163F6D17F86D167F19F06D16FF6E4A13E002E04A13C06E4A138002FE
023F1300913AFFC003FFFE01E790B65A01C316F0018016C026FE003F92C7FC48010714F8
0070D9007F90C8FC3F507ACE4C> I<15FFA75CA55CA45CA25CA25CA25CA25C91B5FCA25B
5B5B131F5B90B9FC120FBAFCA6D8000791C9FCB3B3A3F01FE0AE183F7014C07F187F7014
806D16FF826D4B13006E6D485AEEFE0F6E90B55A020F5D6E5D020115C06E6C5C031F49C7
FC030113F03B6E7CEC4B> I<B892B612F8A8D8001F49C90003EBF0006D6D04001380A26D
6E94C7FC626D61701503A26D6E4B5AA26D6E5E1A0F6E6D5E1A1F80704B5AA26E6D4B5AA2
6E6D5E1AFF6E6E92C8FC61A26E6E495AA26E6E495AA26E6E5C190F6F6D5C191FA26F6D49
5AA26F6D495AA26F6D5C19FF6F6E90C9FC1881A26FECC3FEA26FECE7FCA26FECF7F818FF
705CA3705CA2705CA2705CA27091CAFCA3705BA2705BA2705BA2715AA2715A715A5D4E7C
CC66> 118 D<B892B612F8A8D8001F49C90003EBF0006D6D04001380A26D6E94C7FC626D
6E5E1A03A26D6E4B5AA26D6E4B5AA26E6D5E1A1F6E6D5E1A3F6E6070157FA26E6D4B5AA2
6E6E4990C8FCA26E6E5C19036E6E5C1907A26E6E495AA26F6D495AA26F6D5C193F6F6D5C
197F6F5E7113FFA26F028190C9FCA26FECC3FEA26FECE3FC18E76FECF7F818FFA2705CA2
705CA2705CA2705CA37091CAFCA2705BA2705BA2705BA2715AA3715AA24D5AA26017FF95
CBFC5EA24C5AEA03F8D80FFE4A5A487E486D495A487F5FB56C131F5F163F4C5AA24C5A4B
90CCFC6C49485A4B5AEC800F6C9038003FF849EBFFF0261FFC0713C06CB65A6C92CDFC6C
14FCC614F0013F13C0D907FCCEFC5D6F7CCC66> 121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Ft 150 1318 a(P) -5 b(arallel) 68 b(Eigensystem) e(Solv) -5
b(er) p 150 1418 3600 34 v Fs 2664 1514 a(P) m(eIGS) 30
b(V) -8 b(ersion) 30 b(3.0,) i(rev.) 41 b(0.0) 3266 1731
y(July) 29 b(5,) i(1999) p Fr 150 4935 a(George) 46 b(F) -11
b(ann,) 44 b(Da) l(vid) i(Elw) l(o) t(o) t(d) f(and) g(Ric) l(hard) g
(Little\014eld) 150 5068 y(P) l(aci\014c) g(North) l(w) l(est) i
(National) f(Lab) t(oratory) p 150 5141 3600 17 v 90 rotate
dyy eop
%%Page: 1 2
1 1 bop Fs 3705 -116 a(1) 275 299 y(\045) 150 3688 y(Cop) m(yrigh) m(t)
602 3685 y(c) p Fq 577 3688 a(\015) p Fs 30 w(1993,) 33
b(1994,) f(1995,) g(1999) g(Battelle) g(Memorial) d(Institute.) 150
3823 y(DISCLAIMER) 150 3957 y(This) k(material) i(w) m(as) h(prepared) e
(as) i(an) f(accoun) m(t) h(of) g(w) m(ork) f(sp) s(onsored) f(b) m(y) h
(an) g(agency) i(of) e(the) h(United) 150 4067 y(States) c(Go) m(v) m
(ernmen) m(t.) 43 b(Neither) 30 b(the) h(United) f(States) h(Go) m(v) m
(ernmen) m(t) i(nor) d(the) h(United) e(States) j(Depart-) 150
4177 y(men) m(t) 25 b(of) g(Energy) -8 b(,) 26 b(nor) e(Battelle,) j
(nor) d(an) m(y) h(of) g(their) f(emplo) m(y) m(ees,) j(MAKES) d(ANY) h
(W) -10 b(ARRANTY,) 26 b(EX-) 150 4286 y(PRESS) h(OR) h(IMPLIED,) h(OR)
f(ASSUMES) f(ANY) i(LEGAL) g(LIABILITY) f(OR) g(RESPONSIBILITY) 150
4396 y(F) m(OR) 41 b(THE) f(A) m(CCURA) m(CY,) h(COMPLETENESS,) e(OR) h
(USEFULNESS) f(OF) i(ANY) g(INF) m(ORMA-) 150 4505 y(TION,) 28
b(APP) -8 b(ARA) g(TUS,) 30 b(PR) m(ODUCT,) f(SOFTW) -10
b(ARE,) 28 b(OR) h(PR) m(OCESS) e(DISCLOSED,) h(OR) g(REP-) 150
4615 y(RESENTS) h(THA) -8 b(T) 30 b(ITS) g(USE) f(W) m(OULD) j(NOT) e
(INFRINGE) g(PRIV) -10 b(A) i(TEL) g(Y) 31 b(O) m(WNED) g(RIGHTS.) 150
4749 y(A) m(CKNO) m(WLEDGMENT) 150 4884 y(This) d(soft) m(w) m(are) j
(and) f(its) f(do) s(cumen) m(tation) h(w) m(ere) g(pro) s(duced) e
(with) h(Go) m(v) m(ernmen) m(t) j(supp) s(ort) c(under) g(Con-) 150
4994 y(tract) 43 b(Num) m(b) s(er) e(DE-A) m(C06-76RLO-1830) 47
b(a) m(w) m(arded) 42 b(b) m(y) g(the) g(United) f(States) i(Departmen)
m(t) g(of) f(En-) 150 5103 y(ergy) -8 b(.) 69 b(The) 40
b(Go) m(v) m(ernmen) m(t) h(retains) e(a) h(paid-up) e(non-exclusiv) m
(e,) j(irrev) m(o) s(cable) e(w) m(orldwide) f(license) g(to) 150
5213 y(repro) s(duce,) h(prepare) f(deriv) -5 b(ativ) m(e) 38
b(w) m(orks,) i(p) s(erform) d(publicly) e(and) j(displa) m(y) e
(publicly) f(b) m(y) j(or) h(for) f(the) 150 5322 y(Go) m(v) m(ernmen) m
(t,) 32 b(including) 27 b(the) k(righ) m(t) f(to) h(distribute) d(to) j
(other) f(Go) m(v) m(ernmen) m(t) j(con) m(tractors.) p
90 rotate dyy eop
%%Page: 2 3
2 2 bop Fs 150 -116 a(2) 3301 b(P) m(eIGS) p 90 rotate
dyy eop
%%Page: 3 4
3 3 bop Fs 150 -116 a(Chapter) 30 b(1:) 41 b(P) m(eIGS:) 31
b(an) f(o) m(v) m(erview) 2311 b(3) p Fp 150 299 a(1) 80
b(P) l(eIGS:) 53 b(an) h(o) l(v) l(erview) p Fs 275 544
a(P) m(eIGS) 39 b(is) e(a) i(collection) g(of) f(commonly) h(used) e
(linear) g(algebra) i(subroutines) e(for) h(computing) g(the) 150
654 y(eigensystem) 30 b(of) g(the) g(real) g(standard) f(symmetric) g
(eigensystem) h(problem) p Fo 28 w(Ax) p Fs 25 w(=) p
Fn 25 w(\025) p Fo(x) p Fs 30 w(and) f(the) h(general) 150
763 y(symmetric) 25 b(eigensystem) h(problem) p Fo 24
w(Ax) p Fs 25 w(=) p Fn 25 w(\025) p Fo(Bx) p Fs 25 w(where) p
Fo 25 w(A) p Fs 25 w(and) p Fo 25 w(B) p Fs 25 w(are) g(dense) f(and) g
(real) h(matrices) f(with) p Fo 150 873 a(B) p Fs 38
w(p) s(ositiv) m(e) 38 b(de\014nite) f(and) p Fn 38 w(\025) p
Fs 39 w(is) h(an) g(eigen) m(v) -5 b(alue) 39 b(corresp) s(onding) d
(to) k(eigen) m(v) m(ector) p Fo 41 w(x) p Fs(.) 65 b(The) 38
b(in) m(tended) 150 983 y(computer) e(arc) m(hitecture) h(is) f(a) g
(parallel) f(message) i(passing) f(computer) g(or) g(a) p
Fo 37 w(homogeneous) p Fs 37 w(net) m(w) m(ork) 150 1092
y(of) h(w) m(orkstations.) 61 b(The) 37 b(curren) m(t) f(co) s(de) i
(is) e(written) g(in) f(C) i(and) f(F) -8 b(ortran) 38
b(77) g(with) e(message) i(passing.) 150 1202 y(Subroutine) 23
b(calls) j(are) g(supp) s(orted) e(in) h(F) -8 b(ortran) 26
b(77) h(and) e(in) g(C.) h(P) m(eIGS) g(w) m(as) h(designed) d(for) i
(go) s(o) s(d) g(p) s(erfor-) 150 1311 y(mance) k(in) e(the) i(regime) f
(n/p) f(where) h(n) g(is) g(the) g(size) g(of) h(the) g(matrix) e(and) h
(p) g(is) f(the) i(n) m(um) m(b) s(er) e(of) i(a) m(v) -5
b(ailable) 150 1421 y(pro) s(cessor.) 275 1559 y(\045) 30
b(The) f(P) m(eIGS) i(program) f(is) g(in) f(the) h(\045) g(public) e
(domain.) p Fr 150 1826 a(1.1) 68 b(Problems) 46 b(that) f(P) l(eIGS) g
(can) g(Solv) l(e) p Fs 275 2022 a(P) m(eIGS) 25 b(can) h(solv) m(e) g
(problems) d(in) h(linear) g(algebra) h(that) h(are) g(asso) s(ciated) g
(with) e(the) h(general) h(symmet-) 150 2132 y(ric) 34
b(and) g(the) h(standard) e(symmetric) h(eigensystem) h(problems.) 52
b(P) m(eIGS) 35 b(can) g(also) f(handle) f(asso) s(ciated) 150
2242 y(computations) 26 b(suc) m(h) g(as) g(the) g(Choleski) f
(factorization) i(of) f(p) s(ositiv) m(e) f(de\014nite) g(matrices) h
(in) f(pac) m(k) m(ed) i(stor-) 150 2351 y(age) 38 b(format) g(and) f
(linear) e(matrix) i(equations) g(in) m(v) m(olving) e(lo) m(w) m(er) j
(and) e(upp) s(er) f(triangular) h(matrices) h(in) 150
2461 y(distributed) 27 b(pac) m(k) m(ed) 32 b(ro) m(w/column) e
(storage.) 275 2599 y(Dense) 45 b(and) e(real) i(matrices) f(are) h
(assumed) f(throughout) g(in) f(the) i(computation.) 83
b(Only) 42 b(double) 150 2709 y(precision) 29 b(is) g(curren) m(tly) g
(supp) s(orted.) p Fr 150 2975 a(1.2) 68 b(Computers) 45
b(for) h(whic) l(h) e(P) l(eIGS) h(is) g(Suitable) p
Fs 275 3172 a(P) m(eIGS) 35 b(is) g(designed) f(for) h(parallel) f(and)
g(distributed) f(memory) i(computers) g(with) g(a) g(high) f(startup)
150 3281 y(time) 40 b(for) h(comm) m(unication.) 71 b(The) 40
b(IBM) i(SP) e(and) g(the) h(Cra) m(y) f(T3s) h(are) g(examples) g(of) f
(suc) m(h) h(parallel) 150 3391 y(computers.) 76 b(W) -8
b(orkstations) 43 b(link) m(ed) e(together) j(using) d(net) m(w) m(ork)
i(message) g(passing) e(soft) m(w) m(are,) 47 b(suc) m(h) 150
3500 y(as) 37 b(Rob) s(ert) g(Harrison's) p Fm 36 w(TCGMSG) p
Fl 1432 3467 a(1) p Fs 1469 3500 a(,) g(are) g(also) g(examples) g(of) g
(suc) m(h) p Fk 36 w(") p Fs(parallel) e(computers.) p
Fk(") p Fs 37 w(P) m(eIGS) 150 3610 y(can) 46 b(b) s(e) e(also) i(b) s
(e) e(used) h(on) g(shared) g(memory) g(computers) g(and) g(on) g(v) m
(ector) i(computers) e(using) f(the) 150 3720 y(soft) m(w) m(are) i
(TCGMSG.) g(P) m(eIGS) f(can) g(also) g(also) g(runs) f(in) f(the) j
(MPI) f(en) m(vironmen) m(t.) 84 b(F) -8 b(or) 46 b(the) f(Cra) m(y) 150
3829 y(shmem) 30 b(en) m(vironmen) m(t) g(the) g(user) g(m) m(ust) g
(link) e(with) h(the) i(TCGMSG) f(library) -8 b(.) 275
3967 y(The) 29 b(programming) h(mo) s(del) f(used) g(b) m(y) i(P) m
(eIGS) f(is) g(single) f(program) h(m) m(ultiple) e(data) j(\(SPMD\).) p
Fr 150 4234 a(1.3) 68 b(BLAS) 44 b(and) g(Floating) i(P) l(oin) l(t) g
(Computations) p Fs 275 4431 a(P) m(eIGS) c(has) h(b) s(een) f(written)
f(to) i(tak) m(e) i(adv) -5 b(an) m(tage) 44 b(of) f(optimized) e
(\015oating) i(p) s(oin) m(t) e(computations) 150 4540
y(b) m(y) g(the) g(Basic) g(Linear) f(Algebra) h(Subprograms\(BLAS\)) f
(library) p Fl 2494 4507 a(2) p Fs 2529 4540 a(.) 72
b(Extremely) 41 b(e\016cien) m(t) g(mac) m(hine) 150
4650 y(sp) s(eci\014c) 31 b(BLAS) i(are) f(a) m(v) -5
b(ailable) 32 b(for) g(man) m(y) h(computers.) 47 b(Suc) m(h) 31
b(a) i(mac) m(hine) f(sp) s(eci\014c) g(BLAS) g(library) e(is) 150
4759 y(necessary) h(for) f(ac) m(hieving) g(high) f(p) s(erformance) h
(for) g(\015oating) g(p) s(oin) m(t) f(computations.) p
150 4863 1200 4 v Fl 199 4930 a(1) p Fj 275 4962 a(Harrison,) 43
b(R.J.,) p Fi 44 w(") p Fj(P) n(ortable) d(to) r(ols) h(and) d
(applications) j(for) f(parallel) h(computers,) p Fi(") p
Fj 39 w(In) n(t.) 74 b(J.) 40 b(Quan) n(tum) d(Chem.,) 275
5053 y(40\(1991\),) 24 b(pp.847-863.) 34 b(TCGMSG) 23
b(can) e(b) r(e) g(obtained) g(via) g(anon) n(ymous) f(ftp) h(from) p
Fh 21 w(ftp.tcg.anl.go) n(v) p Fj 22 w(in) g(the) g(directory) p
Fh 275 5144 a(/pub/tcgmsg) p Fl 199 5217 a(2) p Fj 275
5249 a(Dongarra) i(J.) h(et.) 34 b(al.) g(A) 22 b(prop) r(osal) j(for) e
(an) g(Extended) f(Set) h(of) g(F) -6 b(ortran) 23 b(Basic) i(Linear) e
(Algebra) h(Subprograms,) f(NA) n(G) 275 5340 y(rep) r(ort) 17
b(TR3/86,) 22 b(NA) n(G) 17 b(Limited,) i(Oxford,) g(1986.) 33
b(The) 18 b(BLAS) g(library) g(is) g(a) n(v) l(ailable) h(from) e
(netlib) h(at) p Fh 18 w(netlib2.ornl.go) n(v) p 90 rotate
dyy eop
%%Page: 4 5
4 4 bop Fs 150 -116 a(4) 3301 b(P) m(eIGS) p Fr 150 299
a(1.4) 68 b(Algorithms) p Fs 275 495 a(The) 40 b(n) m(umerical) g
(algorithms) g(implemen) m(ted) f(are) j(standard) e(with) g(the) h
(exception) g(of) g(a) h(O\(n) p Fk(^) p Fs(2\)) 150
604 y(algorithm) e(for) h(\014nding) d(orthogonal) j(eigen) m(v) m
(ectors) i(based) e(on) g(the) g(theoretical) g(and) f(exp) s(erimen) m
(tal) 150 714 y(w) m(ork) 34 b(of) h(Vince) f(F) -8 b(ernando,) 35
b(Inderjit) d(Dhillon) g(and) i(Beresford) g(P) m(arlett.) 53
b(Our) 33 b(initial) e(v) -5 b(ariation) 34 b(im-) 150
824 y(plemen) m(ted) i(w) m(as) g(the) g(Berk) m(eley) h(algorithm) e
(describ) s(ed) f(in) h(a) i(series) e(of) h(pap) s(ers) f(b) m(y) h
(Prof.) 58 b(Beresford) 150 933 y(P) m(arlett) 31 b(of) g(Univ) m
(ersit) m(y) e(of) i(California,) d(Berk) m(eley) -8
b(,) 32 b(Inderjit) c(Dhillon) g(and) i(George) i(F) -8
b(ann) p Fl 3271 900 a(3) p Fs 3309 933 a(.) 275 1071
y(\045) p Fl 351 1038 a(4) t(5) p Fs 425 1071 a(.) 275
1209 y(\045) 22 b(In) f(particular,) i(in) m(v) m(erse) f(iteration) g
(to) h(con) m(v) m(ergence) i(is) c(p) s(erformed) g(on) h(all) f(of) i
(\045) f(the) g(eigenpairs) f(in) 150 1318 y(a) 32 b(cluster) f(in) f
(a) i(p) s(erfectly) e(parallel) g(fashion.) 42 b(\045) 31
b(Orthogonalization) g(is) g(then) g(p) s(erformed) f(in) g(parallel)
150 1428 y(using) 40 b(all) g(the) i(pro) s(cessors) f(\045) g(storing)
g(the) g(uncon) m(v) m(erged) h(eigen) m(v) m(ectors) h(of) f(the) g
(cluster.) 73 b(Exactly) 150 1538 y(t) m(w) m(o) 39 b(\045) e
(iterations) g(of) p Fk 38 w(") p Fs(in) m(v) m(erse) h(iteration) f
(follo) m(w) m(ed) g(b) m(y) h(orthogonalization) p Fk(") p
Fs 37 w(are) g(\045) g(alw) m(a) m(ys) g(done.) 150 1647
y(The) 44 b(k) m(ey) h(here) g(is) e(that) i(t) m(w) m(o) h(iterations)
e(of) h(mo) s(di\014ed) d(\045) i(Gram-Sc) m(hmidt) g(are) h(used) f
(in) f(the) i(\014rst) 150 1757 y(orthogonalization.) 40
b(This) 25 b(algorithm) h(\045) h(usually) e(yields) g(highly) g
(orthogonal) j(eigen) m(v) m(ectors,) i(but) c(this) 150
1866 y(is) h(not) h(\045) g(guaran) m(teed) h(to) g(alw) m(a) m(ys) f
(b) s(e) g(the) g(case) h(since) e(a) i(con) m(v) m(ergence) h(test) f
(is) e(not) h(\045) g(curren) m(tly) f(done.) 275 2004
y(One) k(feature) i(of) f(P) m(eIGS) g(is) f(that) i(only) e(pro) s
(cessors) g(holding) f(some) j(matrix) e(elemen) m(ts) h(participate)
150 2114 y(in) 27 b(the) i(computation.) 40 b(Other) 28
b(pro) s(cessors) g(are) h(free) g(to) h(w) m(ork) e(on) h(other) g
(problems.) 38 b(The) 28 b(P) m(eIGS) h(data) 150 2223
y(la) m(y) m(out) 35 b(is) e(a) i(column/ro) m(w) e(wrapping) f
(according) i(to) h(a) g(list) d(of) j(pro) s(cessors) e(marking) g
(the) h(pro) s(cessors) 150 2333 y(that) 22 b(o) m(wn) g(the) f
(columns/ro) m(ws.) 37 b(Most) 23 b(of) e(the) h(algorithms) f(are) h
(based) f(on) g(panel-blo) s(c) m(k) m(ed) g(computation) 150
2443 y(strategies) 34 b(with) e(the) h(exception) g(of) g(the) g(c) m
(holeski) f(factorization) i(and) e(the) i(lo) m(w) m(er) f(triangular)
e(in) m(v) m(erse) 150 2552 y(computations.) 275 2690
y(All) e(of) h(the) h(standard) e(algorithms) g(co) s(ded) i(are) f
(describ) s(ed) f(in) 330 2828 y(Anderson,) h(E.) g(et.) 41
b(al.) p Fk 41 w(") p Fs(LAP) -8 b(A) m(CK) 30 b(User's) h(Guide,) p
Fk(") p Fs(,) e(SIAM,) i(1992.) 330 2964 y(Dahlquist,) e(G.) i(et.) 41
b(al.,) p Fk(") p Fs(Numerical) 30 b(Metho) s(ds,) p
Fk(") p Fs 30 w(Pren) m(tice) g(Hall,) g(1974.) 330 3100
y(Golub,) g(G.) h(and) e(Charles) g(V) -8 b(an) 31 b(Loan,) p
Fk 31 w(") p Fs(Matrix) f(Computations,) p Fk(") p Fs(,) g(Johns) f
(Hopkins,) g(1993.) 330 3236 y(Isaacson,) i(E.) g(and) f(H.B.) h
(Keller,) p Fk 29 w(") p Fs(Analysis) e(of) h(Numerical) f(Metho) s
(ds,) p Fk(") p Fs 30 w(Wiley) -8 b(,) 31 b(1966.) 330
3372 y(P) m(arlett,) g(B.,) p Fk 32 w(") p Fs(Symmetric) e(Eigen) m(v)
-5 b(alue) 29 b(Problem,) p Fk(") p Fs 30 w(Pren) m(tice) h(Hall,) g
(1980.) 330 3509 y(Wilkinson,) e(J.H.,) p Fk 31 w(") p
Fs(Algebraic) i(Eigen) m(v) -5 b(alue) 29 b(Problem,) p
Fk(") p Fs 29 w(Oxford,) h(1988.) p Fr 150 3774 a(1.5) 68
b(P) l(ortabilit) l(y) p Fs 275 3970 a(This) 21 b(pac) m(k) -5
b(age) 25 b(is) e(self-con) m(tained) g(with) f(the) h(exception) h(of)
f(the) g(pro) s(cessor) g(sp) s(eci\014c) f(libraries) f(for) i(the) 150
4080 y(BLAS) 31 b(and) g(LAP) -8 b(A) m(CK.) 31 b(It) h(is) e(curren) m
(tly) g(in) m(tended) g(for) h(cross) h(dev) m(elopmen) m(t) f(and) g
(cross) g(compilation) 150 4189 y(using) 25 b(Unix) h(as) h(the) g
(host) g(en) m(vironmen) m(t) f(and) g(GNU) i(utilites.) 37
b(There) 26 b(is) g(also) h(a) g(Windo) m(ws) f(NT) g(v) m(ersion) 150
4299 y(a) m(v) -5 b(ailable.) 275 4437 y(The) 22 b(comm) m(unication) g
(calls) g(are) h(made) g(through) f(a) h(set) g(of) g(co) s(de) g
(wrapp) s(ers) e(o) m(v) m(er) j(the) f(basic) f(message) 150
4546 y(passing) i(pro) m(vided) g(b) m(y) h(some) h(of) g(the) f
(distributed) d(memory) k(parallel) d(computers) i(and) g(TCGMSG.) g(F)
-8 b(or) 150 4656 y(the) 32 b(distributed) e(memory) i(computers) g(w) m
(e) g(do) g(supp) s(ort) f(nativ) m(e) h(message) i(passing) d(pro) m
(vided) g(b) m(y) h(the) p 150 4758 1200 4 v Fl 199 4826
a(3) p Fj 275 4857 a(Inderjit) 25 b(Dhillon,) h(George) h(F) -6
b(ann,) 26 b(Beresford) h(P) n(arlett,) g(siam8th) p
Fl 199 4930 a(4) p Fj 275 4962 a(F) -6 b(ann,) 28 b(G.) h(and) f(\045) g
(Little\014eld,) h(R.,) p Fi 29 w(") p Fj(P) n(arallel) i(In) n(v) n
(erse) c(Iteration) h(with) h(Reorthogonalization) p
Fi(") p Fj(,) j(\045) c(Pro) r(ceeding) h(of) 275 5053
y(the) c(6th) g(SIAM) g(Conference) i(on) f(P) n(arallel) i(Pro) r
(cessing) f(for) g(\045) e(Scien) n(ti\014c) h(Computing,) f(SIAM,) g
(1993) p Fl 199 5126 a(5) p Fj 275 5157 a(F) -6 b(ann,) 36
b(G.,) h(R.) e(Little\014eld,) i(and) d(\045) g(D.) h(Elw) n(o) r(o) r
(d,) p Fi 38 w(") p Fj(P) n(erformance) h(of) f(a) g(F) -6
b(ully) 34 b(P) n(arallel) i(Dense) e(Real) h(Symmetric) 275
5249 y(Eigensolv) n(er) d(\045) g(in) f(Quan) n(tum) e(Chemistry) i
(Applications) p Fi(") p Fj(,) j(in) e(High) f(P) n(erformance) h
(Computing) f(Symp) r(osium) e(\045) 275 5340 y(1995,) e(Pro) r
(ceedings) g(of) g(the) e(1995) i(Sim) n(ulation) e(Multiconference,) j
(The) e(Computer) f(\045) g(Sim) n(ulation) g(So) r(ciet) n(y) p
90 rotate dyy eop
%%Page: 5 6
5 5 bop Fs 150 -116 a(Chapter) 30 b(1:) 41 b(P) m(eIGS:) 31
b(an) f(o) m(v) m(erview) 2311 b(5) 150 299 y(In) m(tel) 27
b(iPSC) p 569 299 28 4 v 31 w(860,) j(and) d(T) -8 b(ouc) m(hstone) 28
b(DEL) -8 b(T) g(A.) 29 b(W) -8 b(e) 28 b(also) g(supp) s(ort) d(an) j
(in) m(terface) g(to) g(TCGMSG) f(and) g(to) 150 408
y(MPI.) 275 543 y(The) e(installation) e(pro) s(cedure) i(creates) i(a)
f(BLAS) f(library) e(and) i(a) i(LAP) -8 b(A) m(CK) 25
b(library) -8 b(.) 38 b(The) 25 b(user) g(can) 150 653
y(replace) 32 b(these) g(libraries) d(with) h(a) i(more) g(e\016cien) m
(t) g(optimized) e(library) g(or) h(p) s(erhaps) f(new) m(er) i(v) m
(ersions) f(of) 150 762 y(the) 36 b(BLAS) h(and) e(LAP) -8
b(A) m(CK) 37 b(libraries.) 55 b(The) 36 b(user) g(should) e(b) s(e) h
(a) m(w) m(are) j(that) f(there) f(ma) m(y) h(b) s(e) f(c) m(hanges) 150
872 y(in) c(the) h(calling) e(syn) m(tax) j(of) f(the) g(latest) g(LAP)
-8 b(A) m(CK) 34 b(that) f(ma) m(y) h(b) s(e) e(incompatible) f(with) h
(the) h(LAP) -8 b(A) m(CK) 150 981 y(included) 34 b(here.) 59
b(The) 36 b(LAP) -8 b(A) m(CK) 37 b(co) s(des) f(that) h(are) g
(included) d(here) j(are) f(dated) h(\() g(Sept.) 59
b(30,) 39 b(1994) f(\).) 150 1091 y(The) 32 b(sub) s(directory) p
Fo 30 w(/src/f77) p Fs 34 w(con) m(tains) h(a) g(n) m(um) m(b) s(er) e
(of) p Fk 33 w(") p Fs(\014xed) p Fk(") p Fs 31 w(co) s(des) i
(originating) d(from) i(LAP) -8 b(A) m(CK.) 150 1200
y(These) p Fk 39 w(") p Fs(\014xed) p Fk(") p Fs 38 w(co) s(des) 39
b(ha) m(v) m(e) i(the) e(same) h(LAP) -8 b(A) m(CK) 39
b(name) g(with) f(a) i(n) m(um) m(b) s(er) e(after) h(their) g(\014le) f
(name) 150 1310 y(\(as) 29 b(is) f(the) h(case) g(with) e(their) h
(subroutine) e(name\)) j(to) h(distinguish) 25 b(them) j(from) g(the) h
(original) e(LAP) -8 b(A) m(CK) 150 1420 y(co) s(des.) p
Fo 49 w(The) 33 b(INST) -8 b(ALL) 32 b(\014le) h(in) g(the) g(top) h
(lev) m(el) g(of) g(the) f(P) m(eIGS) h(directory) g(sup) s(ersede) e
(the) h(follo) m(wing) 150 1529 y(installation) f(pro) s(cedure) p
Fs(.) p Fr 150 1787 a(1.6) 68 b(Supp) t(ort) p Fs 275
1979 a(W) -8 b(e) 28 b(curren) m(tly) f(supp) s(ort) f(the) i(P) m
(eIGS) g(library) e(routines) g(that) i(are) h(do) s(cumen) m(ted) e
(in) g(the) g(next) h(c) m(hap-) 150 2089 y(ter.) 47
b(All) 31 b(of) h(the) h(comm) m(unication) f(subroutines) e(are) i
(supp) s(orted) f(in) g(the) h(con) m(text) i(of) f(pro) m(viding) d
(com-) 150 2198 y(m) m(unication) 37 b(calls) h(used) g(b) m(y) g(the) h
(linear) e(algebra) h(subroutines.) 63 b(W) -8 b(e) 40
b(supp) s(ort) c(the) j(pac) m(k) -5 b(age) 41 b(in) c(the) 150
2308 y(sense) h(that) g(rep) s(orts) f(of) h(bugs,) h(errors) e(or) h
(p) s(o) s(or) f(p) s(erformance) g(will) e(get) k(our) e(immediate) g
(atten) m(tion.) 150 2418 y(W) -8 b(e) 32 b(will) 27
b(try) k(to) g(solv) m(e) f(y) m(our) h(problems) d(and) i(will) e(pro)
m(vide) h(bug) h(\014xes.) p Fr 150 2675 a(1.7) 68 b(Thanks) p
Fs 275 2868 a(Our) 38 b(thanks) h(to) i(all) d(who) h(help) s(ed) f(to)
i(impro) m(v) m(e) g(this) f(w) m(ork.) 68 b(In) 39 b(particular,) i(w)
m(e) f(thank) f(Rob) s(ert) 150 2977 y(Harrison) 26 b(and) g(Eduardo) g
(Apra) g(for) h(assisting) f(us) g(in) g(understanding) e(c) m
(hemistry) i(problems) g(and) g(their) 150 3087 y(asso) s(ciated) 41
b(sp) s(ectra.) 69 b(W) -8 b(e) 42 b(thank) e(Professor) f(Elizab) s
(eth) g(Jessup) g(of) h(Univ) m(ersit) m(y) f(of) i(Colorado) f(and) 150
3196 y(Prof.) 68 b(Ken) 39 b(Bub) s(e) g(of) g(Univ) m(ersit) m(y) g
(of) h(W) -8 b(ashington) 39 b(for) h(advice) f(and) g(strategies) h
(for) g(P) m(eIGS2.) 69 b(W) -8 b(e) 150 3306 y(thank) 28
b(Prof.) 39 b(Inderjit) 27 b(Dhillon) e(of) k(Univ) m(ersit) m(y) e(of)
h(T) -8 b(exas,) 30 b(Austin) d(and) g(Professor) h(Beresford) g(P) m
(arlett) 150 3416 y(of) 33 b(Univ) m(ersit) m(y) f(of) h(California,) e
(Berk) m(eley) i(for) g(sharing) e(with) h(us) g(their) f(ideas) i(and)
f(preliminary) d(co) s(des) 150 3525 y(for) 38 b(the) h(Berk) m(eley) g
(algorithm) e(in) g(Prof.) 64 b(P) m(arlett's) 39 b(preprin) m(ts) d
(and) i(Inderjit's) f(thesis.) 63 b(Their) 37 b(w) m(ork) 150
3635 y(sho) m(w) m(ed) k(us) g(ho) m(w) g(to) h(reduce) f
(orthonormalization) f(costs) i(for) f(large) g(clusters) f(of) i
(eigen) m(v) -5 b(alues.) 72 b(All) 150 3744 y(mistak) m(es) 31
b(are) f(our) g(o) m(wn.) 275 3879 y(W) -8 b(e) 41 b(thank) e(the) h(F)
-8 b(ree) 41 b(Soft) m(w) m(are) g(F) -8 b(oundation) 40
b(for) g(dev) m(eloping) f(soft) m(w) m(are) i(to) s(ols) f(that) g
(made) g(our) 150 3988 y(w) m(ork) 30 b(easier.) 275
4123 y(W) -8 b(e) 40 b(thank) f(the) g(Molecular) g(Science) g
(Computing) f(F) -8 b(acilit) m(y) 39 b(at) h(the) f(En) m(vironmen) m
(tal) f(Molecular) 150 4232 y(Sciences) 20 b(Lab) s(oratory) h(for) f
(pro) m(viding) e(access) k(to) f(the) g(NWMPP1) h(and) e(NWECS1.) 37
b(W) -8 b(e) 22 b(thank) e(NERSC) 150 4342 y(for) 28
b(pro) m(ving) f(access) j(to) e(the) h(CRA) -8 b(Y-T3E.) 29
b(MSCF) f(is) f(funded) f(b) m(y) i(OBER) g(and) f(NERSC) h(is) f
(funded) f(b) m(y) 150 4452 y(MICS.) 275 4586 y(The) 38
b(researc) m(h) i(supp) s(ort) d(of) i(the) g(ev) m(olution) g(of) g(v)
m(ersion) f(2) i(to) f(v) m(ersion) g(3) g(of) g(P) m(eIGS) g(w) m(as) h
(funded) 150 4696 y(b) m(y) 33 b(DOE's) g(MICS) f(Grand) g(Challenge) g
(in) f(Computational) h(Chemistry) -8 b(.) 47 b(The) 32
b(implemen) m(tation) g(and) 150 4805 y(main) m(tanence) f(supp) s(ort)
d(w) m(as) j(pro) m(vided) e(b) m(y) h(EMSL.) g(\(PNNL's) h(con) m
(tract) i(go) s(es) e(here\).) p 90 rotate dyy eop
%%Page: 6 7
6 6 bop Fs 150 -116 a(6) 3301 b(P) m(eIGS) p 90 rotate
dyy eop
%%Page: 7 8
7 7 bop Fs 150 -116 a(Chapter) 30 b(2:) 41 b(Installation) 2636
b(7) p Fp 150 299 a(2) 80 b(Installation) p Fs 275 554
a(This) 34 b(is) h(a) h(short) f(synopsis) f(of) i(ho) m(w) g(to) h
(install) d(P) m(eIGS) i(on) g(a) g(target) h(system.) p
Fo 58 w(The) e(user) h(should) 150 663 y(consult) d(the) h(INST) -8
b(ALL) 32 b(\014le) h(in) g(the) g(top) g(lev) m(el) i(P) m(eIGS) f
(directory) g(for) g(up) d(to) j(date) g(information) f(re-) 150
773 y(garding) 26 b(the) h(installation) h(pro) s(cedure.) p
Fs 38 w(W) -8 b(e) 28 b(curren) m(tly) d(only) g(supp) s(ort) g
(installation) f(on) i(Unix) f(systems) 150 882 y(with) 36
b(the) i(resources) g(listed) e(b) s(elo) m(w) h(for) g(installing) e
(P) m(eIGS.) j(The) f(library) e(co) s(des) j(and) f(the) h(test) g
(pro-) 150 992 y(grams) 31 b(are) g(created) h(using) p
Fo 30 w(Mak) m(e\014le) p Fs(s.) 43 b(All) 30 b(mac) m(hine) g(sp) s
(eci\014c) g(data) h(is) f(con) m(tained) i(in) d(the) p
Fo 31 w(DEFS) p Fs 30 w(\014le) 150 1102 y(in) c(the) i(main) f(P) m
(eIGS) h(directory) -8 b(.) 40 b(Eac) m(h) 27 b(sub) s(directory) e
(has) h(a) p Fo 27 w(Mak) m(e\014le) p Fs 29 w(whic) m(h) p
Fk 25 w(") p Fs(includes) p Fk(") p Fs 24 w(the) p Fo
27 w(DEFS) p Fs 150 1211 a(\014le.) 38 b(Because) 28
b(the) p Fo 26 w(Mak) m(e\014le) p Fs(s) f(use) p Fo
26 w(ifeq) p Fs 26 w(conditionals,) f(the) g(GNU) h(mak) m(e) g(v) m
(ersion) e(3.68) j(or) e(higher) e(from) 150 1321 y(the) 40
b(F) -8 b(ree) 41 b(Soft) m(w) m(are) g(F) -8 b(oundation) 40
b(is) f(required) f(as) i(the) p Fo 40 w(mak) m(e) p
Fs 41 w(utilit) m(y) -8 b(.) 68 b(If) 39 b(this) g(is) g(not) h(a) m(v)
-5 b(ailable) 39 b(to) 150 1430 y(the) 30 b(installer) d(then) i(the) h
(installer) d(needs) i(to) i(edit) p Fo 29 w(DEFS) p
Fs 28 w(and) e(the) h(v) -5 b(arious) p Fo 28 w(Mak) m(e\014les) p
Fs 31 w(and) 29 b(commen) m(t) 150 1540 y(out) h(the) p
Fo 30 w(ifeq) p Fs 30 w(and) p Fo 29 w(endif) p Fs 29
w(statemen) m(ts) h(and) e(lea) m(v) m(e) i(the) f(appropriate) f
(lines) f(for) h(the) h(in) m(tended) e(system.) p Fl
3712 1507 a(1) p Fs 150 1650 a(The) p Fo 31 w(DEFS) p
Fs 31 w(\014le) j(curren) m(tly) g(has) h(a) h(list) d(of) i(w) m
(orkstations) h(and) e(parallel) f(computers) i(and) f(their) g(corre-)
150 1759 y(sp) s(onding) 24 b(compilation) h(switc) m(hes.) 39
b(Most) 27 b(of) g(the) f(curren) m(tly) g(a) m(v) -5
b(ailable) 25 b(distributed) f(memory) i(parallel) 150
1869 y(computers) h(are) h(on) f(this) f(list:) 38 b(Cra) m(y) 28
b(T3D,) g(IBM) g(SP-1/2,) h(In) m(tel) e(DEL) -8 b(T) g(A,) 28
b(In) m(tel) f(P) m(aragon,) j(SGI) d(P) m(o) m(w-) 150
1978 y(erChallange,) j(Kendall) e(Square) j(Researc) m(h) g(KSR-2.) p
Fo 41 w(Homogeneous) p Fs 33 w(net) m(w) m(orks) g(of) g(w) m
(orkstations) g(are) 150 2088 y(also) f(supp) s(ort) f(via) h(TCGMSG) g
(or) g(MPI.) 275 2229 y(Th) m(us,) f(the) i(follo) m(wing) d(soft) m(w)
m(are) k(resources) f(are) f(needed) h(to) g(mak) m(e) g(the) g
(library:) 330 2371 y(1.) 41 b(ANSI-C) 30 b(compatible) g(C) g
(compiler) 330 2509 y(2.) 41 b(F) -8 b(ortran) 31 b(77) g(compiler) 330
2647 y(3.) 41 b(GNU) 31 b(mak) m(e) g(utilit) m(y) -8
b(,) 30 b(v) m(ersion) g(3.68) i(and) d(higher.) 275
2816 y(W) -8 b(e) 29 b(assume) e(that) i(all) e(F) -8
b(ortran) 28 b(callable) f(subroutines) e(ha) m(v) m(e) 30
b(a) e(trailing) e(underscore) h(at) h(the) h(end) e(of) 150
2926 y(their) c(name) h(in) f(the) h(name-space.) 39
b(Th) m(us,) 25 b(w) m(e) f(assume) g(that) g(C) g(subroutines) d(call)
j(F) -8 b(ortran) 24 b(subroutines) 150 3036 y(using) 39
b(subroutine) f(names) j(with) e(a) i(trailing) e(underscore) g(added) h
(to) h(the) g(end) f(of) h(their) e(name,) 44 b(e.g.) p
Fo 150 3145 a(f77name) p 486 3145 28 5 v Fs 33 w(.) 39
b(W) -8 b(e) 24 b(also) f(assume) g(that) h(a) g(F) -8
b(ortran) 24 b(subroutine) d(calls) i(a) g(C) g(subroutine) f(using) f
(a) j(subroutine) 150 3255 y(name) 35 b(with) f(a) i(trailing) d
(underscore) i(added) g(to) h(the) f(end) g(of) g(their) g(name,) i
(e.g.) p Fo 56 w(call) g(cname) p 3426 3255 V Fs 33 w(.) 55
b(Users) 150 3364 y(of) 34 b(IBM) g(AIX) g(RS6000) h(v) m(ersion) e(3) h
(systems) g(m) m(ust) f(add) g(the) p Fo 34 w(-qextname) p
Fs 35 w(or) p Fo 33 w(-qEXTNAME) p Fs 34 w(options) 150
3474 y(to) i(the) p Fo 34 w(xlf) p Fs 34 w(compiler) e(or) h(to) h(the)
p Fo 34 w(f77) p Fs 34 w(compiler.) 51 b(Users) 34 b(of) g(HP9000) i
(HP-UX) f(v) m(ersion) e(9.0) i(or) f(higher) 150 3583
y(m) m(ust) 28 b(add) p Fk 28 w(+) p Fo(ppu) p Fs 26
w(as) h(an) f(option) g(to) h(the) f(HP) p Fo 29 w(f77) p
Fs 29 w(compiler.) 38 b(Users) 28 b(of) h(other) g(dialects) e(of) i
(Unix) e(should) 150 3693 y(consult) 37 b(their) g(language) h(man) m
(uals) f(or) h(system) g(gurus) f(for) h(the) g(appropriate) e
(options.) 63 b(A) 38 b(separate) 150 3803 y(mak) m(e\014le) 32
b(has) g(b) s(een) g(added) g(for) g(the) g(users) g(of) g(the) h(IBM) f
(RS6000) i(without) d(an) h(installed) e(GNU.) j(The) 150
3912 y(user) d(is) f(advised) g(to) i(read) g(the) f(INST) -8
b(ALL) 30 b(\014le) f(and) h(the) h(DEFS) f(\014les) g(in) f(the) h(P) m
(eIGS) h(directory) -8 b(.) 275 4054 y(In) 39 b(man) m(y) i(of) f(the) h
(calls) e(to) i(C) f(subroutines) e(from) i(F) -8 b(ortran) 41
b(w) m(e) g(assume) f(that) h(the) g(C) p Fo 40 w(double) p
Fs 40 w(is) 150 4163 y(the) c(same) g(size) f(as) h(the) g(F) -8
b(ortran) p Fo 37 w(double) 36 b(precision) p Fs(.) 60
b(This) 35 b(is) g(not) i(a) g(serious) f(obstacle) h(since) f(man) m
(y) 150 4273 y(F) -8 b(ortran) 27 b(compilers) e(and) h(C) g(compilers)
e(ha) m(v) m(e) p Fo 28 w(8) p Fs 27 w(b) m(yte) j(switc) m(hes) f(for)
p Fo 26 w(real*8) p Fs 28 w(computataions.) 39 b(Also,) 27
b(w) m(e) 150 4382 y(assume) 33 b(that) h(the) f(address) f(to) i
(double) d(precision) h(n) m(um) m(b) s(ers) f(is) h(less) h(than) g
(or) g(equal) f(to) i(the) f(size) g(of) h(a) 150 4492
y(double) 25 b(precision) f(n) m(um) m(b) s(er.) 38 b(In) 25
b(man) m(y) h(of) g(the) h(F) -8 b(ortran) 26 b(to) h(C) f(in) m
(terface) g(co) s(des) h(w) m(e) f(recast) h(some) g(of) f(the) 150
4602 y(double) 33 b(precision) f(scratc) m(h) j(spaces) g(as) f(p) s
(oin) m(ters) f(to) i(double) e(precision) f(n) m(um) m(b) s(ers.) 51
b(The) 33 b(user) h(should) 150 4711 y(also) e(c) m(hec) m(k) i
(whether) d(the) i(in) m(tended) p Fk 31 w(") p Fs(C) p
Fk(") p Fs 31 w(and) f(F) -8 b(ortran) 32 b(compilers) f(are) i
(compatible) e(in) g(in) m(teger) i(and) 150 4821 y(in) m(teger) h(p) s
(oin) m(ters) e(sizes.) 50 b(F) -8 b(or) 34 b(example,) h(on) e(mac) m
(hines) g(with) f(8) i(b) m(ytes) g(for) f(b) s(oth) p
Fo 33 w(in) m(t) p Fs 34 w(and) p Fo 33 w(long) h(in) m(t) p
Fs 34 w(it) 150 4930 y(is) k(imp) s(ortan) m(t) f(that) j(the) f(F) -8
b(ortran) 39 b(in) m(teger) g(also) f(b) s(e) g(8) h(b) m(ytes.) 66
b(This) 37 b(is) h(a) h(common) g(problem) e(when) 150
5040 y(installing) 27 b(P) m(eIGS.) p 150 5149 1200 4
v Fl 199 5217 a(1) p Fj 275 5249 a(GNU) f(mak) n(e) g(is) i(a) n(v) l
(ailable) g(via) g(anon) n(ymous) e(ftp) h(from) p Fh
27 w(prep.ai.mit.edu:18.71.0.38) p Fj 28 w(in) g(the) g(directory) p
Fh 28 w(/pub/gn) n(u) p Fj 25 w(as) p Fh 275 5340 a(mak) n(e###.tar.gz)
p Fj(.) p 90 rotate dyy eop
%%Page: 8 9
8 8 bop Fs 150 -116 a(8) 3301 b(P) m(eIGS) 275 299 y(In) 28
b(h/blas) p 646 299 28 4 v 32 w(lapac) m(k.h) h(w) m(e) g(ha) m(v) m(e)
h(tried) e(to) i(deal) e(with) g(some) h(of) h(the) f(computers,) g
(for) g(example,) g(Cra) m(y) 150 408 y(T3D) 46 b(and) e(the) h(KSR2) g
(where) f(the) i(single) d(precision) h(computation) h(is) f(p) s
(erformed) f(in) h(64) i(bits) e(of) 150 518 y(precision.) 275
653 y(P) m(eIGS) 33 b(uses) g(mac) m(hine) g(sp) s(eci\014c) f
(arithmetic) g(constan) m(ts) i(\() g(obtained) e(from) h(LAP) -8
b(A) m(CK's) p Fo 34 w(dlamac) m(h) p Fs 150 762 a(and) p
Fo 30 w(slamc) m(h) p Fs 31 w(\)) 30 b(in) f(a) i(n) m(um) m(b) s(er) e
(of) i(places.) 40 b(These) 30 b(constan) m(ts) i(are) f(de\014ned) e
(in) g(h/blas) p 3108 762 V 31 w(lapac) m(k.h.) 275 897
y(Y) -8 b(ou) 42 b(will) d(probably) h(obtain) h(this) f(library) f(as)
j(a) g(compressed) g(tar) g(\014le) f(named) p Fo 41
w(p) s(eigsXY.tar.Z) p Fs(,) 150 1006 y(where) 30 b(X.Y) h(is) e(the) i
(v) m(ersion) f(n) m(um) m(b) s(er.) 275 1141 y(T) -8
b(o) 30 b(build) e(P) m(eIGS) i(on) h(a) f(Unix) g(system) g(using) p
Fo 29 w(csh) p Fs(:) p Fq 199 1275 a(\000) p Fs 60 w(t) m(yp) s(e) p
Fo 31 w(mak) m(e) h(-v) p Fs 30 w(to) g(mak) m(e) h(sure) d(that) i(y) m
(ou) g(are) g(using) e(the) h(GNU) h(mak) m(e) h(utilit) m(y) -8
b(.) p Fq 199 1410 a(\000) p Fs 60 w(uncompress) 44 b(the) h(\014le) p
Fo 44 w(p) s(eigsXY.tar.Z) p Fs 44 w(b) m(y) g(t) m(yping) p
Fo 44 w(uncompress) f(p) s(eigsXY.tar.Z) p Fs 45 w(whic) m(h) g(will)
330 1519 y(create) 32 b(a) f(tar) f(\014le) g(called) p
Fo 29 w(p) s(eigsXY.tar) p Fs(.) p Fq 199 1654 a(\000) p
Fs 60 w(un) m(tar) i(the) g(\014le) f(p) s(eigsXY.tar) h(b) m(y) g(t) m
(yping) p Fo 31 w(tar) g(xvf) g(p) s(eigsXY.tar) p Fs(.) 45
b(This) 30 b(will) g(create) j(a) f(directory) 330 1763
y(called) p Fo 30 w(p) s(eigsX.Y) p Fs 30 w(with) d(a) h(n) m(um) m(b) s
(er) f(of) i(sub) s(directories) d(and) i(a) g(\014le) g(called) p
Fo 29 w(DEFS) p Fs(.) p Fq 199 1898 a(\000) p Fs 60 w(scan) 42
b(through) f(the) g(\014le) p Fo 41 w(DEFS) p Fs 41 w(using) f(y) m
(our) h(fa) m(v) m(orite) i(editor) e(to) h(see) h(if) d(y) m(our) i
(target) h(parallel) 330 2007 y(computer) 31 b(is) f(supp) s(orted.) 41
b(Mak) m(e) 32 b(the) g(appropriate) e(c) m(hanges,) i(if) e(necessary)
-8 b(,) 32 b(for) f(the) g(compilers,) 330 2117 y(directory) g(paths,) g
(compiler) f(options) h(and) g(library) e(options.) 43
b(If) 31 b(y) m(ou) h(w) m(an) m(t) g(to) g(use) f(MPI,) h(rather) 330
2227 y(than) h(the) h(default) f(of) g(TCGMSG) h(or) f(In) m(tel) h
(NX,) g(then) f(follo) m(w) g(the) h(directions) e(in) p
Fo 32 w(DEFS) p Fs 32 w(ab) s(out) 330 2336 y(MPI) e(use.) p
Fq 199 2471 a(\000) p Fs 60 w(sa) m(v) m(e) i(the) f(corrected) g
(\014le) p Fo 29 w(DEFS) p Fs(.) p Fq 199 2605 a(\000) p
Fs 60 w(set) 37 b(the) g(en) m(vironmen) m(t) g(v) -5
b(ariable) p Fo 35 w(T) d(AR) m(GET) p Fs(.) 38 b(F) -8
b(or) 38 b(example,) g(for) e(the) h(iPSC) p 3042 2605
V 31 w(860,) j(the) d(installer) 330 2715 y(w) m(ould) 29
b(t) m(yp) s(e) p Fo 61 w(seten) m(v) i(T) -8 b(AR) m(GET) 32
b(iPSC) p 1737 2715 28 5 v 32 w(860) p Fs(.) p Fq 199
2849 a(\000) p Fs 60 w(Chec) m(k) 40 b(the) h(\014le) p
Fo 39 w(PEIGSDIR/h/blas) p 1692 2849 V 32 w(lapac) m(k.h) p
Fs 41 w(to) g(see) f(if) f(the) h(mac) m(hine) g(parameters) g(are) h
(de-) 330 2959 y(\014ned) 34 b(for) h(the) g(target) h(computer.) 55
b(If) 35 b(not,) h(then) f(the) g(user) g(m) m(ust) f(de\014ne) h(his) e
(o) m(wn) i(parameters.) 330 3068 y(T) -8 b(o) 39 b(do) f(this) f(go) i
(to) g(the) p Fo 39 w(example) p Fs 38 w(directory) f(and) g(t) m(yp) s
(e) p Fk 38 w(") p Fs(mak) m(e) h(teslamac) m(h) p Fk(") p
Fs 39 w(to) g(generate) h(the) 330 3178 y(executable) 27
b(co) s(de) g(teslamc) m(h.) 40 b(Run) 26 b(teslamc) m(h) h(on) f(one) h
(no) s(de) f(of) h(the) g(in) m(tended) e(parallel) g(mac) m(hine.) 330
3288 y(The) 42 b(co) s(de) h(rep) s(orts) f(the) h(mac) m(hine) f
(arithmetic) g(parameters) h(that) g(need) f(to) i(b) s(e) e(inserted) f
(in) m(to) p Fo 330 3397 a(PEIGSDIR/h/blas) p 1087 3397
V 33 w(lapac) m(k.h) p Fs(.) 48 b(On) 32 b(mac) m(hines) g(that) i(use)
e(8) h(b) m(ytes) h(for) e(single) g(precision) f(calcu-) 330
3507 y(lations,) i(e.g.) 49 b(Cra) m(y) 33 b(T3D,) h(the) f(user) f(m) m
(ust) h(also) g(insert) p Fo 32 w(CODEOBJ=) e(SINGLE) p
Fs 32 w(in) h(the) p Fo 33 w(DEFS) p Fs 330 3616 a(\014le) k(so) h
(that) p Fo 37 w(mak) m(e) p Fs 38 w(can) g(build) c(the) k(single) f
(precision) f(fortran) h(co) s(des) h(in) p Fo 35 w(PEIGSDIR/src/f77) p
Fs(.) 330 3726 y(On) 30 b(other) g(mac) m(hines) g(the) h(user) e(m) m
(ust) i(set) p Fo 30 w(CODEOBJ=) e(DBLE) p Fs(.) p Fq
199 3861 a(\000) p Fs 60 w(t) m(yp) s(e) f(the) f(command) p
Fo 28 w(mak) m(e) p Fs(.) 40 b(The) 27 b(libraries) p
Fo 25 w(libblas.a) p Fs(,) p Fo 28 w(liblapac) m(k.a) p
Fs 29 w(and) p Fo 27 w(libp) s(eigs.a) p Fs 28 w(will) e(no) m(w) j(b) s
(e) 330 3970 y(built.) 275 4130 y(Compiler) 39 b(optimization) j(can) g
(cause) h(errors) e(and) h(unexp) s(ected) f(results) g(in) g(certain) h
(situations.) 150 4239 y(W) -8 b(e) 42 b(handle) e(this) g(in) g(the) p
Fo 41 w(Mak) m(e\014le) p Fs(s) i(b) m(y) f(ha) m(ving) g(the) g
(\014les) f(that) i(w) m(e) f(kno) m(w) g(do) g(not) h(optimize) e(w) m
(ell) 150 4349 y(compile) d(without) g(optimization.) 63
b(The) 37 b(user) h(is) f(advised) g(that) h(m) m(uc) m(h) g(of) h(our)
e(C) h(utilit) m(y) e(co) s(des) i(fail) 150 4458 y(to) j(function) e
(with) g(the) h(GNU) p Fo 41 w(gcc) p Fs 41 w(compiler) f(with) g(the) p
Fo 40 w(-O2) p Fs 41 w(optimization.) 70 b(Some) 40 b(of) g(the) h
(utilit) m(y) 150 4568 y(co) s(des) 29 b(also) h(failed) d(to) j
(function) e(correctly) i(with) e(the) h(P) m(ortland) g(Group's) p
Fo 29 w(icc) p Fs 30 w(compiler) f(with) g(the) p Fo
29 w(-O3) p Fs 150 4677 a(optimization) g(option.) 40
b(W) -8 b(e) 30 b(are) g(curren) m(tly) e(trying) h(to) h(remedy) e
(this) h(situation.) p Fo 39 w(The) g(user) g(is) g(advised) 150
4787 y(that) d(the) g(latest) h(installation) g(instruction) f(is) g
(lo) s(cated) g(in) g(the) f(INST) -8 b(ALL) 25 b(\014le) h(at) g(the) g
(top) f(of) h(the) g(p) s(eigs) 150 4897 y(directory) -8
b(.) p 90 rotate dyy eop
%%Page: 9 10
9 9 bop Fs 150 -116 a(Chapter) 30 b(3:) 41 b(Con) m(ten) m(t:) h(Co) s
(de) 30 b(F) -8 b(unctionalities) 28 b(and) i(Data) i(Structure) 1081
b(9) p Fp 150 141 a(3) 80 b(Con) l(ten) l(t:) e(Co) t(de) 53
b(F) -13 b(unctionalities) 54 b(and) g(Data) 311 299
y(Structure) p Fs 275 534 a(This) 29 b(section) i(lists) f(the) h
(subroutines) e(in) g(P) m(eIGS) j(and) e(their) g(functionalities.) 41
b(P) m(eIGS) 31 b(is) f(designed) 150 644 y(using) e(the) h(b) s(ottom)
h(up) f(approac) m(h.) 40 b(Eac) m(h) 30 b(subroutine) e(is) g(built) f
(up) i(on) g(more) g(basic) g(routines.) 39 b(A) m(t) 31
b(the) 150 754 y(top) 23 b(lev) m(el) f(are) h(driv) m(ers) f(to) h
(solv) m(e) g(the) g(symmetric) f(eigensystem) h(problems.) 36
b(The) 23 b(second) f(lev) m(el) h(con) m(tains) 150
863 y(factorization) 36 b(and) f(linear) f(algebra) i(subroutines) d
(that) j(are) g(required) e(b) m(y) h(the) h(eigensystem) g(solv) m
(ers.) 150 973 y(The) 31 b(last) g(lev) m(el) g(con) m(tains) g(in) m
(ternal) f(P) m(eIGS) h(routines) g(and) f(utilites) f(for) i(managing)
g(comm) m(unications,) 150 1082 y(list) d(pro) s(cessing,) h(and) g
(error) g(c) m(hec) m(king.) 41 b(In) 29 b(terms) g(of) h(data) g
(structure,) g(the) f(C) h(routines) e(are) i(the) g(most) 150
1192 y(\015exible) 22 b(since) i(all) f(the) h(pro) s(cedure) f
(argumen) m(ts) h(are) h(p) s(oin) m(ters) e(or) h(one) g(dimensional) d
(arra) m(ys) k(of) f(p) s(oin) m(ters.) 150 1302 y(Th) m(us,) j(in) f
(man) m(y) h(applications,) g(minimal) d(data) k(mo) m(v) m(emen) m(ts)
h(are) f(required) d(to) j(use) f(these) h(subroutines) 150
1411 y(since) j(no) h(cop) m(ying) g(or) g(data) h(mo) m(v) m(emen) m
(ts) g(are) g(needed.) 45 b(One) 31 b(only) g(needs) h(to) g(set) h
(the) f(address) f(to) i(the) 150 1521 y(correct) f(data) f(p) s
(ositions.) 275 1656 y(This) h(c) m(hapter) j(is) f(organized) g(in) g
(terms) g(of) h(subroutine) d(and) i(data) h(structure.) 53
b(Section) 34 b(3.1) i(sum-) 150 1765 y(marizes) 25 b(the) h(routines) f
(that) h(are) g(supp) s(orted) e(in) g(this) g(v) m(ersion) h(of) h(P) m
(eIGS.) g(Section) g(3.2.) 40 b(describ) s(es) 24 b(ho) m(w) 150
1875 y(the) i(input) d(data) j(are) g(exp) s(ected) g(in) e(F) -8
b(ortran) 26 b(and) f(in) f(C.) i(W) -8 b(e) 26 b(assume) f(that) i
(the) e(reader) h(is) e(familiar) f(with) 150 1985 y(column) 29
b(distribution) e(of) j(data) p Fl 1243 1952 a(1) p Fs
1281 1985 a(.) p Fr 150 2243 a(3.1) 68 b(Summary) p Fs
275 2436 a(Let) 35 b(us) g(summarize) f(the) i(subroutines) d(and) i
(their) f(functions.) 55 b(The) 35 b(follo) m(wing) e(is) i(a) h(short)
f(list) f(of) 150 2546 y(the) c(supp) s(orted) f(routines) g(in) f(P) m
(eIGS.) j(These) f(subroutines) e(are) i(protected) h(from) f(p) s
(ossible) e(comm) m(uni-) 150 2655 y(cation) g(deadlo) s(c) m(k) g(b) m
(y) g(enforcing) g(the) g(follo) m(wing) f(rules.) 38
b(In) 27 b(the) i(generalized) e(eigenproblem) g(the) h(set) h(of) 150
2765 y(pro) s(cessors) f(storing) f(the) i(matrix) p
Fo 27 w(A) p Fs(,) g(the) f(matrix) p Fo 28 w(B) p Fs
27 w(and) g(the) h(eigen) m(v) m(ectors) p Fo 30 w(Z) p
Fs 28 w(m) m(ust) f(b) s(e) f(the) i(same) f(set) 150
2875 y(of) h(pro) s(cessors.) 40 b(In) 29 b(the) g(standard) f
(eigenproblem) g(the) h(set) h(of) g(pro) s(cessors) e(storing) h(the) g
(matrix) p Fo 29 w(A) p Fs 29 w(and) 150 2984 y(the) 36
b(eigen) m(v) m(ectors) p Fo 39 w(Z) p Fs 35 w(m) m(ust) g(b) s(e) g
(the) g(same) h(set) g(of) f(pro) s(cessors.) 58 b(This) 35
b(is) g(not) h(the) h(same) f(as) h(the) f(data) 150
3094 y(distribution) 30 b(b) s(eing) i(the) h(same.) 50
b(It) 34 b(means) f(that) h(the) p Fo 33 w(set) p Fs
34 w(of) g(pro) s(cessors) f(holding) e(one) i(matrix) g(m) m(ust) 150
3203 y(b) s(e) d(the) g(same) h(as) g(the) f(set) h(of) g(pro) s
(cessors) f(holding) e(an) m(y) j(other) f(matrix.) 275
3338 y(If) c(y) m(ou) h(are) h(solving) e(the) h(real) f(symmetric) h
(eigensystem) g(problem) p Fo 25 w(Ax) p Fs 25 w(=) p
Fn 25 w(\025) p Fo(x) p Fs 27 w(the) g(pro) s(cessors) g(hold-) 150
3448 y(ing) 35 b(the) i(columns) e(of) h(matrix) p Fo
36 w(A) p Fs(,) g(and) f(the) i(pro) s(cessors) f(holding) e(the) i
(eigen) m(v) m(ectors) p Fo 38 w(X) p Fs 36 w(are) h(required) 150
3557 y(to) f(b) s(e) f(the) h(same) g(set) g(or) g(the) f(pro) s
(cessors) g(holding) f(eigen) m(v) m(ectors) j(of) p
Fo 36 w(X) p Fs 35 w(m) m(ust) f(b) s(e) f(a) h(subset) f(of) g(those)
150 3667 y(holding) h(columns) i(of) p Fo 38 w(A) p Fs(.) h(This) e
(mild) f(restriction) h(is) h(curren) m(tly) g(necessary) h(to) g(a) m
(v) m(oid) g(p) s(ossible) d(race) 150 3777 y(conditions.) 47
b(Using) 33 b(suc) m(h) f(input) f(restriction) h(and) h(no) g
(bu\013ering) e(assumptions) h(P) m(eIGS) h(can) g(b) s(e) g(used) 150
3886 y(on) 39 b(strong) g(message) i(t) m(yping) d(message) j(passing) d
(soft) m(w) m(are) i(\(e.g.) 69 b(TCGMSG\)) 39 b({) h(with) e(no) h
(message) 150 3996 y(queues) c(or) g(bu\013ers.) 55 b(The) 35
b(user) g(can,) i(of) f(course,) h(use) e(other) g(routines) g(in) f(P)
m(eIGS) i(but) e(at) i(their) f(o) m(wn) 150 4105 y(risk.) j(Some) 28
b(of) g(the) f(unsupp) s(orted) e(and) i(in) m(ternal) f(P) m(eIGS) i
(routines,) f(with) f(certain) i(data) g(distributions) 150
4215 y(and) k(insu\016cien) m(t) f(message) j(bu\013er) e(space,) i(ma)
m(y) f(encoun) m(ter) g(comm) m(unication) f(deadlo) s(c) m(k.) 48
b(In) 32 b(this) g(re-) 150 4325 y(lease,) j(w) m(e) e(assume) h(that) g
(all) e(the) h(matrices) p Fo 34 w(A) p Fs 33 w(and) p
Fo 32 w(B) p Fs 33 w(for) g(the) h(general) f(eigensystem) h(problems) e
(and) 150 4434 y(the) 25 b(standard) f(symmetric) h(eigensystem) g
(problems) e(with) h(matrix) g(of) h(eigen) m(v) m(ectors) p
Fo 27 w(Z) p Fs 25 w(share) f(the) i(same) 150 4544 y(set) 31
b(of) f(pro) s(cessors) g(for) g(their) g(data) h(distributions.) p
Fl 1923 4511 a(2) p Fs 275 4679 a(Lev) m(el) f(1) h(driv) m(ers:) p
Fq 199 4814 a(\000) p Fs 60 w(PDSPGV) g(:) f(General) g(real) g
(symmetric) g(eigensystem) h(solv) m(er) p Fq 199 4948
a(\000) p Fs 60 w(PDSPEV:) f(Standard) f(real) i(symmetric) e
(eigensystem) i(solv) m(er) p 150 5045 1200 4 v Fl 199
5113 a(1) p Fj 275 5144 a(Golub,) e(Gene) f(H.) g(and) f(Charles) j(F.)
e(V) -6 b(an) 27 b(Loan,) p Fi 30 w(") p Fj(Matrix) h(Computations,) p
Fi(") p Fj 29 w(2nd) f(ed,) i(Johns) g(Hopkins) e(Univ) n(ersit) n(y)
275 5236 y(Press,) g(1989.) p Fl 199 5308 a(2) p Fj 275
5340 a(P) n(eIGS) e(no) h(longer) g(supp) r(ort) g(the) f(computation) g
(of) h(selected) h(eigen) n(v) l(alue) f(and) f(eigen) n(v) n(ector) h
(pairs.) p 90 rotate dyy eop
%%Page: 10 11
10 10 bop Fs 150 -116 a(10) 3256 b(P) m(eIGS) p Fq 199
299 a(\000) p Fs 60 w(PDSPTRI:) 30 b(Symmetric) f(tri-diagonal) g
(eigensystem) i(solv) m(er) 275 477 y(Lev) m(el) f(2) h(driv) m(ers:) p
Fq 199 624 a(\000) p Fs 60 w(CHOLESKI:) e(submatrix) f(Choleski) h
(factorization) p Fl 2159 591 a(3) p Fs 2197 624 a(.) p
Fq 199 765 a(\000) p Fs 60 w(INVERSEL:) h(the) g(in) m(v) m(erse) h(of)
f(a) h(lo) m(w) m(er) f(triangular) f(matrix) h(in) f(column) g
(distributed) f(format.) p Fq 199 906 a(\000) p Fs 60
w(MXM*:) 48 b(a) 34 b(v) -5 b(ariet) m(y) 33 b(of) h(matrix) e(m) m
(ultiplication) f(routines) h(for) h(matrices) g(with) f(di\013eren) m
(t) h(shap) s(es) 330 1015 y(and) d(column/ro) m(w) g(distributions.) p
Fq 199 1156 a(\000) p Fs 60 w(TRED2:) 74 b(column) 46
b(distributed) e(Householder) i(reduction) g(of) i(a) f(symmetric) f
(matrix) h(to) g(tri-) 330 1266 y(diagonal) 30 b(form) g(\() g(only) g
(the) g(C) g(v) m(ersion\).) p Fq 199 1407 a(\000) p
Fs 60 w(PSTEBZ:) i(a) i(parallel) d(v) m(ersion) i(of) g(LAP) -8
b(A) m(CK's) 34 b(DSTEBZ) f(routine) f(for) h(computing) f(the) i
(eigen-) 330 1516 y(v) -5 b(alues) 30 b(of) g(real) g(tridiagonal) f
(matrices) i(using) d(bisection.) p Fq 199 1657 a(\000) p
Fs 60 w(PSTEIN*:) 44 b(a) 33 b(parallel) e(subspace) g(iteration) h
(metho) s(d) g(for) h(\014nding) d(eigen) m(v) m(ectors) k(of) f
(symmetric) 330 1767 y(tridiagonal) 40 b(matrices) h(using) f(the) h
(our) g(parallel) f(v) -5 b(arian) m(t) 41 b(of) g(the) h(Dhillon-P) m
(arlett) e(algorithm.) 330 1876 y(Computations) 29 b(in) m(v) m(olving)
g(clusters) h(are) h(dynamically) d(sc) m(heduled) h(based) h(on) g(sp)
s(ectrum.) p Fq 199 2017 a(\000) p Fs 60 w(TRESID:) 25
b(a) h(parallel) e(routine) h(for) h(computing) f(the) g(residual) f
(of) i(the) g(tridiagonal) e(eigenproblem.) p Fq 199
2158 a(\000) p Fs 60 w(RESID:) 30 b(a) h(parallel) d(routine) i(for) g
(computing) f(the) i(residual) d(of) j(the) f(standard) g
(eigenproblem.) p Fq 199 2299 a(\000) p Fs 60 w(RESIDUAL:) c(a) g
(parallel) d(routine) i(for) h(computing) e(the) i(residual) e(of) h
(the) h(generalized) g(eigenprob-) 330 2408 y(lem.) p
Fq 199 2549 a(\000) p Fs 60 w(OR) -8 b(THO:) 30 b(a) h(parallel) d
(routine) i(for) g(testing) g(the) h(orthogonalit) m(y) g(of) f(eigen) m
(v) m(ectors) p Fq 199 2690 a(\000) p Fs 60 w(BOR) -8
b(THO:) 42 b(a) g(parallel) e(routine) h(for) g(testing) h(the) g
(B-orthogonalit) m(y) h(of) f(eigen) m(v) m(ectors) i(for) e(the) 330
2799 y(generalized) 30 b(eigenproblem) p Fr 150 3088
a(3.2) 68 b(Data) 46 b(La) l(y) l(out) p Fs 275 3293
a(F) -8 b(rom) 25 b(the) h(user's) f(p) s(oin) m(t) f(of) i(view) e(P) m
(eIGS') i(data) g(structure) f(is) g(essen) m(tially) f(column\(ro) m
(w\)) h(wrapping) 150 3403 y(according) 30 b(to) h(a) f(list.) 39
b(By) 31 b(this) e(w) m(e) h(mean) g(that) h(a) f(matrix) f(is) g
(partitioned) g(in) m(to) h(columns) f(\(ro) m(ws\)) h(with) 150
3513 y(an) 41 b(in) m(teger) h(arra) m(y) p Fo 43 w(map) p
Fs 40 w(describing) e(whic) m(h) g(pro) s(cessor) h(holds) f(column) h
(\() h(ro) m(w) f(\)) p Fo 42 w(i) p Fs(.) 75 b(F) -8
b(or) 42 b(example,) p Fo 150 3622 a(map\(i\)) 27 b(=) e(p) p
Fs 26 w(means) h(that) h(pro) s(cessor) p Fo 26 w(p) p
Fs 25 w(stores) g(column) e(\() h(ro) m(w) g(\)) p Fo
27 w(i) p Fs(.) 39 b(When) 26 b(using) f(MPI) h(this) f(de\014nition)
150 3732 y(is) k(c) m(hanged) i(sligh) m(tly) -8 b(.) 40
b(See) 31 b(the) f(subsection) f(on) i(using) e(MPI) h(for) g(more) h
(details) e(on) h(this) g(case.) 275 3879 y(The) e(data) i(la) m(y) m
(out) h(is) d(used) h(in) f(a) i(compatible) e(w) m(a) m(y) j(in) d
(the) h(P) m(eIGS) h(subroutines.) 38 b(The) 29 b(data) h(struc-) 150
3988 y(ture) 25 b(for) g(eac) m(h) h(routine) e(can) h(also) g(b) s(e) g
(used) f(as) h(input) e(to) j(another) g(P) m(eIGS) f(subroutine) e
(without) h(remap-) 150 4098 y(ping.) 39 b(Of) 30 b(course,) h(for) f
(optimal) f(p) s(erformance) h(the) h(user) e(is) h(advised) f(to) i
(minimize) d(comm) m(unication.) 275 4245 y(The) 38 b(follo) m(w) h
(subsections) f(describ) s(es) f(ho) m(w) i(to) h(input) d(data) j
(from) f(a) h(giv) m(en) f(pro) s(cessor's) g(p) s(oin) m(t) f(of) 150
4355 y(view.) i(W) -8 b(e) 32 b(hop) s(e) d(that) i(the) g(examples) f
(are) g(informativ) m(e.) p Fg 150 4604 a(3.2.1) 63 b(F) -10
b(ortran) 41 b(Data) f(Structure) p Fs 275 4809 a(Let) 32
b(us) e(sho) m(w) i(ho) m(w) f(the) h(follo) m(wing) e(4) i(b) m(y) f
(4) h(matrix) f(can) h(b) s(e) p Fo 31 w(ro) m(w) g(mapp) s(ed) p
Fs 29 w(on) g(2) g(pro) s(cessors) f(\(pro-) 150 4919
y(cessor) 36 b(0) h(and) e(pro) s(cessor) g(1\)) i(in) d(F) -8
b(ortran) 37 b(using) d(our) h(structure.) 57 b(Let) p
Fo 36 w(mapA) p Fs 35 w(b) s(e) 35 b(the) h(in) m(teger) g(arra) m(y)
150 5029 y(describing) 28 b(pro) s(cessor) i(n) m(um) m(b) s(ers) f
(for) h(the) h(distribution) 26 b(of) 31 b(the) f(matrix.) p
150 5149 1200 4 v Fl 199 5217 a(3) p Fj 275 5249 a(Geist,) 38
b(G.A.) d(and) g(M.T.) h(Heath,) p Fi 37 w(") p Fj(Matrix) g(F) -6
b(actorization) 37 b(on) d(a) i(Hyp) r(ercub) r(e) d(Multipro) r
(cessor) p Fi(") p Fj(,) 40 b(in) 35 b(Hyp) r(ercub) r(e) 275
5340 y(Multipro) r(cessors) 28 b(1986,) f(SIAM,) e(Philadelphia,) i
(1986,) h(pp.) 34 b(161-180) p 90 rotate dyy eop
%%Page: 11 12
11 11 bop Fs 150 -116 a(Chapter) 30 b(3:) 41 b(Con) m(ten) m(t:) h(Co) s
(de) 30 b(F) -8 b(unctionalities) 28 b(and) i(Data) i(Structure) 1035
b(11) p Fk 1917 299 a(1) 143 b(2) g(3) g(4) 1917 403
y(5) g(6) g(7) g(8) 1917 506 y(9) 95 b(10) g(11) g(12) 1917
610 y(13) 47 b(14) 95 b(15) g(16) p Fs 275 747 a(If) 39
b(w) m(e) i(put) f(ro) m(w) g(1) h(and) f(ro) m(w) g(4) h(on) f(pro) s
(cessor) g(0) h(and) e(ro) m(w) i(2) f(and) g(ro) m(w) g(3) h(on) f
(pro) s(cessor) g(1,) k(the) 150 857 y(con) m(ten) m(ts) 32
b(of) f(the) f(arra) m(y) p Fo 31 w(mapA) p Fs 30 w(on) g(b) s(oth) f
(pro) s(cessors) h(is) p Fo 275 993 a(mapA) p Fs 59 w(:) h(0) 61
b(1) g(1) g(0) 275 1130 y(The) 29 b(con) m(ten) m(t) k(of) d(the) h
(one) f(dimensional) e(storage) k(arra) m(y) f(for) p
Fo 30 w(matrixA) p Fs 30 w(on) g(pro) s(cessor) f(0) g(is) p
Fo 275 1267 a(pro) s(c) g(0:) 41 b(matrixA) p Fs(:) 31
b(1) 61 b(2) g(3) g(4) g(13) g(14) h(15) f(16) 275 1404
y(The) 29 b(con) m(ten) m(t) k(of) d(the) h(one) f(dimensional) e
(storage) k(arra) m(y) f(for) p Fo 30 w(matrixA) p Fs
30 w(on) g(pro) s(cessor) f(1) g(is) p Fo 275 1541 a(pro) s(c) g(1:) 41
b(matrixA) p Fs(:) 31 b(5) 61 b(6) g(7) g(8) g(9) g(10) g(11) h(12) 275
1677 y(This) 28 b(is) i(the) g(arra) m(y) h(storage) h(that) f(is) e
(exp) s(ected) i(as) g(input) d(b) m(y) i(the) h(F) -8
b(ortran) 31 b(driv) m(ers.) 275 1814 y(F) -8 b(or) 38
b(symmetric) e(matrices) h(,) j(w) m(e) d(use) g(the) h(pac) m(k) m(ed)
g(storage) h(format.) 62 b(Here) 38 b(is) e(an) h(example) g(of) h(a)
150 1924 y(symmetric) 30 b(matrix) p Fo 29 w(A) p Fs
30 w(column) g(decomp) s(osed) g(and) f(stored) i(using) e(its) h(lo) m
(w) m(er) g(triangular) f(part.) p Fk 1917 2055 a(1) 1917
2159 y(5) 143 b(6) 1917 2262 y(9) 95 b(10) g(11) 1917
2366 y(13) 47 b(14) 95 b(15) g(16) p Fs 275 2503 a(If) 40
b(w) m(e) h(put) f(columns) g(1) h(and) f(4) i(on) e(pro) s(cessor) h
(0) g(and) f(columns) g(2) h(and) f(3) h(on) g(pro) s(cessor) g(1,) j
(the) 150 2612 y(con) m(ten) m(ts) 32 b(of) f(the) f(arra) m(y) p
Fo 31 w(mapA) p Fs 30 w(on) g(b) s(oth) f(pro) s(cessors) h(are) p
Fo 275 2749 a(mapA) p Fs 59 w(:) h(0) 61 b(1) g(1) g(0) 275
2886 y(The) 29 b(con) m(ten) m(t) k(of) d(the) h(one) f(dimensional) e
(storage) k(arra) m(y) f(for) p Fo 30 w(matrixA) p Fs
30 w(on) g(pro) s(cessor) f(0) g(is) p Fo 275 3023 a(pro) s(c) g(0:) 41
b(matrixA) p Fs(:) 31 b(1) 61 b(5) g(9) g(13) g(16) 275
3160 y(The) 29 b(con) m(ten) m(t) k(of) d(the) h(one) f(dimensional) e
(storage) k(arra) m(y) f(for) p Fo 30 w(matrixA) p Fs
30 w(on) g(pro) s(cessor) f(1) g(is) p Fo 275 3296 a(pro) s(c) g(1:) 41
b(matrixA) p Fs(:) 31 b(6) 61 b(10) g(14) h(11) f(15) 275
3433 y(This) 21 b(is) h(the) h(arra) m(y) h(storage) g(format) g(and) e
(the) h(mapping) f(format) h(that) h(is) e(exp) s(ected) h(as) h(input)
d(for) i(the) 150 3543 y(symmetric) g(matrices) p Fo
24 w(A) p Fs 24 w(and) p Fo 24 w(B) p Fs 23 w(in) g(the) h(the) h
(symmetric) e(eigensystem) h(solv) m(ers) p Fo 24 w(PDSPEV) p
Fs(,) p Fo 23 w(PDSPGV) p Fs(,) p Fo 150 3652 a(PDSPEVX) p
Fs 29 w(and) p Fo 29 w(PDSPGVX) p Fs(.) p Fg 150 3881
a(3.2.2) 63 b(C) 40 b(Data) g(Structure) p Fs 275 4076
a(The) 33 b(reader) h(can) g(disregard) e(this) h(section) h(if) f(F) -8
b(ortran) 34 b(is) f(the) h(language) g(of) g(c) m(hoice.) 52
b(Since) 33 b(the) h(C) 150 4186 y(user) c(can) g(call) g(F) -8
b(ortran) 31 b(or) g(C) f(subroutines) e(the) i(information) f(in) g
(the) i(last) f(section) h(ma) m(y) g(b) s(e) f(useful) e(to) 150
4295 y(the) j(C) f(programmer.) 275 4432 y(All) 36 b(of) i(the) g
(input) e(parameters) i(for) g(C) f(subroutines) f(in) g(P) m(eIGS) j
(are) f(p) s(oin) m(ters.) 62 b(F) -8 b(or) 39 b(the) f(matrix) p
Fo 150 4542 a(A) p Fs 38 w(ab) s(o) m(v) m(e,) k(the) d(input) d(for) i
(the) h(C) f(subroutine) e(requires) h(that) i(the) g(matrix) f(b) s(e)
g(presen) m(ted) g(as) h(a) g(one) 150 4651 y(dimenesional) 28
b(arra) m(y) j(of) f(p) s(oin) m(ters) p Fo 29 w(ptr) p
Fs(.) 40 b(Eac) m(h) 31 b(p) s(oin) m(ter) p Fo 30 w(ptr[i]) p
Fs 31 w(p) s(oin) m(ts) e(to) i(the) f(storage) i(address) d(of) i(the)
150 4761 y(\014rst) f(elemen) m(t) g(of) h(the) g(i-th) e(column) g(o) m
(wned) i(b) m(y) f(the) h(pro) s(cessor.) 40 b(An) 30
b(example) g(is) f(giv) m(en) i(b) s(elo) m(w.) 275 4898
y(Again) f(consider) f(the) i(follo) m(wing) d(matrix.) p
Fk 1917 5029 a(1) 143 b(2) g(3) g(4) 1917 5132 y(5) g(6) g(7) g(8) 1917
5236 y(9) 95 b(10) g(11) g(12) 1917 5340 y(13) 47 b(14) 95
b(15) g(16) p 90 rotate dyy eop
%%Page: 12 13
12 12 bop Fs 150 -116 a(12) 3256 b(P) m(eIGS) 275 299
y(If) 26 b(w) m(e) i(distribute) d(columns) g(1) j(and) e(4) i(on) f
(pro) s(cessor) g(0) g(and) g(columns) f(2) h(and) g(3) g(on) h(pro) s
(cessor) e(1,) j(the) 150 408 y(con) m(ten) m(ts) j(of) f(the) f(arra) m
(y) p Fo 31 w(mapA) p Fs 30 w(on) g(b) s(oth) f(pro) s(cessors) h(are) p
Fo 1656 645 a(mapA) p Fs 25 w(:) 25 b(0) 31 b(1) g(1) f(0) 275
798 y(Let) 45 b(us) g(use) g(the) h(notation) p Fo 45
w(mem-address\(i\)) p Fs 46 w(to) g(denote) g(the) f(memory) h(lo) s
(cation) f(of) g(the) h(\014rst) 150 908 y(elemen) m(t) d(in) e(column)
g(i.) p Fo 76 w(W) -8 b(e) 43 b(assume) f(that) h(the) g(data) g(for) f
(column) g(i) h(are) g(stored) g(in) f(consecutiv) m(e) 150
1017 y(memory) 31 b(lo) s(cations.) p Fs 275 1144 a(The) e(con) m(ten) m
(t) k(of) d(the) h(one) f(dimensional) e(arra) m(y) j(of) f(p) s(oin) m
(ters) p Fo 30 w(ptr) p Fs 30 w(on) g(pro) s(cessor) g(0) h(is) p
Fo 1065 1282 a(pro) s(c0) p Fs 25 w(:) p Fo 26 w(ptr) p
Fs 25 w(:) p Fo 25 w(mem) p Fq 20 w(\000) p Fo 20 w(addr) p
Fs(\() p Fo(1) p Fs(\)) p Fo 61 w(mem) p Fq 20 w(\000) p
Fo 20 w(addr) p Fs(\() p Fo(4) p Fs(\)) 150 1421 y(and,) f(the) h(con) m
(ten) m(t) h(of) e(the) h(one) g(dimensional) c(arra) m(y) k(of) g(p) s
(oin) m(ters) p Fo 29 w(ptr) p Fs 30 w(on) f(pro) s(cessor) g(1) h(is) e
(is) p Fo 1065 1559 a(pro) s(c1) p Fs 25 w(:) p Fo 26
w(ptr) p Fs 25 w(:) p Fo 25 w(mem) p Fq 20 w(\000) p
Fo 20 w(addr) p Fs(\() p Fo(2) p Fs(\)) p Fo 61 w(mem) p
Fq 20 w(\000) p Fo 20 w(addr) p Fs(\() p Fo(3) p Fs(\)) 275
1714 y(Notice) j(that) p Fo 32 w(ptr[0]) p Fs 32 w(stores) g(the) f
(starting) g(address) g(of) g(column) f(1) i(and) p Fo
31 w(ptr[1]) p Fs 32 w(stores) g(the) f(starting) 150
1824 y(address) f(of) h(column) f(4.) 43 b(This) 29 b(is) h(b) s
(ecause) h(column) f(4) h(is) f(the) h(second) g(column) f(of) p
Fo 31 w(A) p Fs 30 w(that) i(pro) s(cessor) f(0) 150
1934 y(o) m(wns.) 275 2060 y(If) 26 b(w) m(e) h(regard) p
Fo 27 w(ptr[0]) p Fs 28 w(and) p Fo 26 w(ptr[1]) p Fs
28 w(as) g(a) g(C) g(arra) m(y) g(then) g(the) g(con) m(ten) m(ts) h
(of) f(these) g(arra) m(ys) h(on) e(pro) s(cessor) 150
2170 y(0) 31 b(will) c(b) s(e) p Fo 1493 2406 a(pro) s(c0) p
Fs 26 w(:) p Fo 25 w(ptr) p Fs([) p Fo(0) p Fs(]) f(:) g(1) k(5) h(9) g
(13) p Fo 1470 2542 a(pro) s(c0) p Fs 26 w(:) p Fo 25
w(ptr) p Fs([) p Fo(1) p Fs(]) 26 b(:) g(4) 31 b(8) f(12) i(16) 275
2695 y(F) -8 b(or) 33 b(symmetric) f(matrices) g(,) i(w) m(e) f(use) f
(the) h(pac) m(k) m(ed) h(storage) g(format.) 47 b(Here) 34
b(is) d(an) i(example) f(of) h(the) 150 2805 y(input) 24
b(data) j(for) f(a) g(column) f(distributed) e(symmetric) i(matrix) h
(stored) g(using) f(only) g(its) g(lo) m(w) m(er) i(triangular) 150
2915 y(part.) p Fk 1917 3035 a(1) 1917 3139 y(5) 143
b(6) 1917 3243 y(9) 95 b(10) g(11) 1917 3347 y(13) 47
b(14) 95 b(15) g(16) p Fs 275 3473 a(If) 40 b(w) m(e) h(put) f(columns)
g(1) h(and) f(4) i(on) e(pro) s(cessor) h(0) g(and) f(columns) g(2) h
(and) f(3) h(on) g(pro) s(cessor) g(1,) j(the) 150 3583
y(con) m(ten) m(ts) 32 b(of) f(the) f(arra) m(y) p Fo
31 w(mapA) p Fs 30 w(on) g(b) s(oth) f(pro) s(cessors) h(are) p
Fo 1656 3819 a(mapA) p Fs 25 w(:) 25 b(0) 31 b(1) g(1) f(0) 275
3972 y(The) h(con) m(ten) m(t) i(of) f(the) g(one) g(dimensional) d(p) s
(oin) m(ter) h(arra) m(y) p Fo 33 w(ptr) p Fs 31 w(arra) m(y) i(for) p
Fo 32 w(matrixA) p Fs 32 w(on) f(pro) s(cessor) h(0) 150
4082 y(is) p Fo 1042 4318 a(pro) s(c0) p Fs 25 w(:) p
Fo 26 w(ptr) p Fs 25 w(:) p Fo 25 w(mem) p Fq 21 w(\000) p
Fo 20 w(addr) p Fs(\() p Fo(1) p Fs(\)) p Fo 60 w(mem) p
Fq 21 w(\000) p Fo 19 w(addr) p Fs(\() p Fo(16) p Fs(\)) 275
4471 y(The) d(con) m(ten) m(t) k(of) d(the) h(one-dimensional) d(p) s
(oin) m(ter) h(arra) m(y) p Fo 31 w(ptr) p Fs 30 w(on) i(pro) s(cessor)
f(1) g(is) p Fo 1042 4708 a(pro) s(c1) p Fs 25 w(:) p
Fo 26 w(ptr) p Fs 25 w(:) p Fo 25 w(mem) p Fq 21 w(\000) p
Fo 20 w(addr) p Fs(\() p Fo(6) p Fs(\)) p Fo 60 w(mem) p
Fq 21 w(\000) p Fo 19 w(addr) p Fs(\() p Fo(11) p Fs(\)) 275
4861 y(This) c(is) g(the) i(con) m(ten) m(t) i(of) e(the) g
(one-dimensional) e(arra) m(y) i(of) g(p) s(oin) m(ters) f(that) h(is) f
(exp) s(ected) h(as) g(input) e(b) m(y) 150 4971 y(the) i(C) g
(subroutines.) 38 b(In) 28 b(particular,) f(the) i(matrix) p
Fo 27 w(A) p Fs 28 w(and) p Fo 28 w(B) p Fs 28 w(in) e(the) h(general) g
(symmetric) g(and) g(regular) 150 5080 y(symmetric) i(eigensolv) m(ers)
g(\() p Fo 31 w(PDSPEV) p Fs 29 w(and) p Fo 29 w(PDSPGV) p
Fs 30 w(\)) h(are) g(exp) s(ected) f(in) g(this) f(format) h(as) h
(input.) p Fl 3675 5047 a(4) p 150 5149 1200 4 v 199
5217 a(4) p Fh 275 5249 a(Note:) p Fj 36 w(In) 26 b(the) g(header) h
(\014les) g(of) h(our) f(co) r(de) g(w) n(e) h(use) e(the) h(term) p
Fi 26 w(") p Fj(double) g(p) r(oin) n(ter.) p Fi(") p
Fj 27 w(This) h(term) e(is) h(confusing) h(and) e(the) 275
5340 y(user) f(should) h(substitute) f(this) h(with) g(a) p
Fi 26 w(") p Fj 26 w(1-D) f(arra) n(y) h(of) g(p) r(oin) n(ters) g(to) g
(double) g(precision) g(n) n(um) n(b) r(ers.) p Fi(") p
90 rotate dyy eop
%%Page: 13 14
13 13 bop Fs 150 -116 a(Chapter) 30 b(3:) 41 b(Con) m(ten) m(t:) h(Co) s
(de) 30 b(F) -8 b(unctionalities) 28 b(and) i(Data) i(Structure) 1035
b(13) p Fg 150 299 a(3.2.3) 63 b(MPI) 41 b(Use) p Fs
275 491 a(The) 31 b(reader) i(can) g(disregard) e(this) g(section) i
(if) e(they) i(are) f(using) f(TCGMSG) i(or) f(In) m(tel) g(NX) h(for) f
(com-) 150 601 y(m) m(unication.) 275 736 y(The) d(P) m(eIGS) g
(implemen) m(tation) g(of) g(MPI) h(do) s(es) f(NOT) g(supp) s(ort) p
Fo 28 w(heterogeneous) p Fs 31 w(net) m(w) m(orks) h(of) g(com-) 150
845 y(puters,) h(but) f(DOES) h(supp) s(ort) p Fo 29
w(homogeneous) p Fs 32 w(net) m(w) m(orks) h(of) f(computers.) 42
b(In) 31 b(particular,) f(MPI) h(nev) m(er) 150 955 y(kno) m(ws) 40
b(the) h(real) f(data) h(t) m(yp) s(e) f(of) h(the) f(message,) 45
b(a) 40 b(generic) h(MPI) p 2473 955 28 4 v 32 w(BYTE) g(t) m(yp) s(e) f
(is) g(used) f(b) m(y) h(P) m(eIGS,) 150 1064 y(hence) 33
b(MPI) f(cannot) h(correctly) g(deal) f(with) f(di\013eren) m(t) h
(binary) f(represen) m(tations) h(of) h(data) g(on) f(di\013eren) m(t)
150 1174 y(computers.) 275 1308 y(P) m(eIGS) 48 b(do) s(es) f(not) i
(use) e(MPI) h(comm) m(unicators) g(explicitly) -8 b(.) 92
b(Instead,) 52 b(to) d(use) f(MPI) g(one) g(sim-) 150
1418 y(ply) e(c) m(hanges) i(the) f(de\014nition) e(of) i(the) p
Fo 48 w(map) p Fs 46 w(arra) m(ys) h(sligh) m(tly) -8
b(.) 90 b(In) 46 b(particular,) k(when) c(using) g(MPI) p
Fo 150 1528 a(map\(i\)) 33 b(=) f(p) p Fs 31 w(means) g(that) h(column)
e(\(ro) m(w\)) p Fo 34 w(i) p Fs 32 w(is) g(stored) i(on) f(the) g(pro)
s(cessor) g(whic) m(h) f(has) p Fo 32 w(rank) h(p) p
Fs 32 w(in) f(the) p Fo 150 1637 a(MPI) p 339 1637 28
5 v 33 w(Comm) p 635 1637 V 33 w(W) -8 b(orld) p Fs 34
w(comm) m(unicator.) 51 b(Ev) m(erything) 33 b(else) g(is) g(iden) m
(tical) f(to) j(the) e(non-MPI) h(case.) 51 b(The) 150
1747 y(pro) s(cessors) 26 b(o) m(wning) h(a) g(matrix) f(ma) m(y) i(b) s
(e) e(part) h(of) g(a) g(comm) m(unicator) h(other) f(than) p
Fo 27 w(MPI) p 3155 1747 V 33 w(Comm) p 3451 1747 V 32
w(W) -8 b(orld) p Fs(,) 150 1856 y(but) 47 b(the) g(ranks) g(stored) g
(in) f(the) p Fo 47 w(map) p Fs 47 w(arra) m(ys) i(MUST) f(b) s(e) f
(the) i(ranks) e(of) i(the) f(pro) s(cessors) g(in) f(the) p
Fo 150 1966 a(MPI) p 339 1966 V 33 w(Comm) p 635 1966
V 33 w(W) -8 b(orld) p Fs 44 w(comm) m(unicator.) 82
b(The) 44 b(P) m(eIGS) g(routines) f(then) h(do) g(all) f(comm) m
(unication) g(us-) 150 2076 y(ing) h(the) p Fo 44 w(MPI) p
675 2076 V 33 w(Comm) p 971 2076 V 33 w(W) -8 b(orld) p
Fs 45 w(comm) m(unicator,) 48 b(but) c(restricting) f(comm) m
(unication) h(to) h(only) e(those) 150 2185 y(pro) s(cessors) 30
b(listed) f(in) g(one) h(of) h(the) p Fo 31 w(map) p
Fs 29 w(arra) m(ys) g(passed) f(to) h(the) g(P) m(eIGS) f(routines.) p
90 rotate dyy eop
%%Page: 14 15
14 14 bop Fs 150 -116 a(14) 3256 b(P) m(eIGS) p 90 rotate
dyy eop
%%Page: 15 16
15 15 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(15) p Fp 150 299 a(4) 80 b(Calling) 56
b(Syn) l(tax) p Fr 150 682 a(4.1) 68 b(Lev) l(el) 46
b(I) f(Subroutines) p Fs 275 881 a(The) c(P) m(eIGS) h(pac) m(k) -5
b(age) 43 b(has) f(t) m(w) m(o) h(main) d(routines) h(for) g(the) h
(solution) e(of) i(dense,) i(real) e(symmetric) 150 991
y(eigensolv) m(ers:) p Fo 41 w(PDSPGV) p Fs 31 w(and) p
Fo 30 w(PDSPEV) p Fs 30 w(for) 30 b(the) h(generalized) g(and) f
(standard) g(eigenproblems.) 40 b(All) 150 1100 y(of) 31
b(these) g(routines) e(can) i(b) s(e) f(called) g(from) g(either) g
(fortran) g(or) h(C) f(and) g(do) h(extensiv) m(e) g(c) m(hec) m(king) g
(of) g(input) 150 1210 y(data.) 41 b(See) 31 b(section) g(6) f(for) g
(more) h(ab) s(out) f(error) g(handling.) 275 1350 y(The) f(reduction) g
(algorithm,) g(from) g(the) h(general) g(symmetric) g(eigensystem) g
(problem) e(to) i(the) h(stan-) 150 1460 y(dard) h(eigensystem) h(used)
g(in) e(this) h(section,) j(is) d(to) i(in) m(v) m(ert) f(the) g
(Choleski) e(factor) p Fo 34 w(L) p Fs 33 w(of) p Fo
33 w(B) p Fs 33 w(and) h(p) s(erform) 150 1569 y(panel) d(blo) s(c) m
(k) m(ed) i(matrix) e(conjugation) i(to) g(arriv) m(e) f(at) p
Fo 31 w(L) p Ff 2044 1536 a(\000) p Fe(1) p Fo 2137 1569
a(AL) p Ff 2261 1536 a(\000) p Fe(t) p Fn 2346 1569 a(:) p
Fs 275 1710 a(Since) i(the) i(scratc) m(h) g(arra) m(ys) g(are) g(dep) s
(enden) m(t) f(on) g(the) h(distribution) c(of) j(matrix) g(en) m
(tries) h(across) g(the) 150 1819 y(pro) s(cessors) c(P) m(eIGS) h(pro)
m(vides) f(a) h(subroutine,) e(FMEMREQ) i(in) e(F) -8
b(ortran) 32 b(and) e(memreq) p 3234 1819 28 4 v 63 w(in) g(C,) g(whic)
m(h) 150 1929 y(returns) 37 b(the) h(dimensions) e(of) i(the) h(in) m
(teger,) h(double) d(precision,) i(and) e(p) s(oin) m(ter) g(arra) m
(ys) i(that) g(are) f(nec-) 150 2039 y(essary) c(for) g(the) g
(computation.) 51 b(The) 33 b(solv) m(er) p Fo 34 w(PDSPEV) p
Fs(,) p Fo 33 w(PDSPEVX) p Fs(,) p Fo 32 w(PDSPTRI) p
Fs(,) p Fo 34 w(PDSPGV) p Fs(,) h(and) p Fo 150 2148
a(PDSPGVX) p Fs 30 w(are) c(curren) m(tly) g(supp) s(orted.) p
Fl 1599 2115 a(1) p Fs 275 2289 a(The) 36 b(requested) g(eigensystem) h
(is) f(returned) g(to) h(the) g(user) f(in) g(the) h(follo) m(wing) e
(manner.) 59 b(Let's) 37 b(sa) m(y) 150 2398 y(that) 42
b(the) f(dimension) d(of) j(the) g(matrix) f(is) p Fo
40 w(n) p Fs 41 w(and) g(that) i(the) f(user) f(allo) s(cates) h(an) g
(arra) m(y) p Fo 41 w(ev) -5 b(al) p Fs 42 w(for) 41
b(the) 150 2508 y(eigen) m(v) -5 b(alues,) 36 b(an) f(arra) m(y) p
Fo 35 w(matrixZ) p Fs 35 w(for) g(the) g(eigen) m(v) m(ector) i(and) e
(an) f(arra) m(y) p Fo 36 w(mapZ) p Fs 34 w(for) g(the) i(distribution)
150 2617 y(of) h(the) h(eigen) m(v) m(ectors) h(across) f(the) g(pro) s
(cessors.) 60 b(P) m(eIGS) 38 b(returns) e(all) g(the) i(requested) f
(eigen) m(v) -5 b(alues) 37 b(to) 150 2727 y(all) j(the) h(pro) s
(cessors) g(in) f(the) h(list) p Fo 40 w(mapZ) p Fs(.) f(P) m(eIGS) h
(also) g(returns) f(the) i(list) p Fo 39 w(mapZ) p Fs(,) f(v) m(ery) g
(lik) m(ely) f(to) i(b) s(e) 150 2836 y(di\013eren) m(t) 27
b(than) g(the) h(input) d(list,) i(whic) m(h) f(informs) f(the) j
(calling) e(routine) g(whic) m(h) g(pro) s(cessor) h(stores) h(whic) m
(h) 150 2946 y(eigen) m(v) m(ector.) 55 b(Supp) s(ose) 33
b(that) i(the) g(i-th) e(eigen) m(v) m(ector) k(of) e(A) f(is) g(the) g
(j-th) h(eigen) m(v) m(ector) h(of) f(A) f(stored) h(on) 150
3056 y(the) j(curren) m(t) f(pro) s(cessor.) 61 b(Then,) 38
b(the) g(eigenpair) e(for) h(the) g(i-th) g(eigen) m(v) -5
b(alue) 37 b(is) g(giv) m(en) g(b) m(y) p Fo 37 w(\() h(ev) -5
b(al\(i\),) 41 b(\() 150 3165 y(matrixZ\(j*n) p Fk(+) p
Fo(1\),) 31 b(matrixZ\(j*n) p Fk(+) p Fo(2\),) h(...,) f(matrixZ\(\(j) p
Fk(+) p Fo(1\)*n\)\)\)) p Fs(.) 275 3306 y(The) c(C) h(user) f(can) h
(replace) p Fo 29 w(matrixZ) p Fs 28 w(ab) s(o) m(v) m(e) h(as) f(a) h
(one-dimensional) d(arra) m(y) i(of) g(p) s(oin) m(ters) f(to) p
Fo 29 w(double) p Fs(,) 150 3415 y(sa) m(y) p Fo 31 w(v) m(ecZ) p
Fs(.) k(Then) f(the) g(i-th) g(eigenpair) f(\(in) g(C) h(indexing\)) e
(is) i(returned) f(as) p Fo 30 w(\(ev) -5 b(al[i],) 33
b(v) m(ecZ[j]\)) p Fs 32 w(where) d(the) 150 3525 y(i-th) g(eigen) m(v)
m(ector) i(of) p Fo 31 w(A) p Fs 30 w(is) d(again) i(the) f(j-th) g
(eigen) m(v) m(ector) j(that) e(is) e(stored) i(on) f(this) f(pro) s
(cessor.) 275 3665 y(P) m(eIGS) e(pro) m(vides) f(a) i(utilit) m(y) e
(FIL) p 1409 3665 V 32 w(MAPVEC) i(\() f(F77) i(\)) e(and) g(\014l) p
2431 3665 V 31 w(map) m(v) m(ec) p 2756 3665 V 34 w(\() h(C) f(\)) g
(whic) m(h) f(returns) g(the) i(i) 150 3775 y(and) h(j) g(corresp) s
(ondence) g(b) s(et) m(w) m(een) h(the) f(global) g(matrix) g(index) f
(i) h(and) f(the) i(lo) s(cal) f(matrix) f(storage) j(index) 150
3884 y(j.) 275 4025 y(Here's) i(an) h(example) e(of) i(ho) m(w) p
Fo 33 w(FMEMREQ) p Fs 34 w(and) p Fo 32 w(PDSPEV) p Fs
32 w(can) g(b) s(e) e(called) h(in) f(F) -8 b(ortran) 34
b(to) g(solv) m(e) 150 4134 y(the) d(standard) e(symmetric) h
(eigensystem) g(problem) p Fo 29 w(Ax) p Fs 25 w(=) p
Fn 25 w(\025) p Fo(x) p Fs 30 w(.) 275 4275 y(Let) p
Fo 22 w(mapA) p Fs 22 w(and) p Fo 22 w(mapZ) p Fs 21
w(b) s(e) 22 b(in) m(teger) g(arra) m(ys) h(of) g(dimension) p
Fo 19 w(n) p Fs 22 w(whic) m(h) e(con) m(tain) i(the) g(data) g
(distribution) 150 4384 y(information.) 39 b(Let) p Fo
30 w(isize) p Fs 30 w(b) s(e) 29 b(the) g(parameter) h(holding) e(the) h
(in) m(teger) h(scratc) m(h) g(arra) m(y) g(size.) 41
b(Let) p Fo 29 w(rsize) p Fs 31 w(b) s(e) 150 4494 y(the) 24
b(parameter) g(holding) e(the) i(double) f(precision) f(scratc) m(h) j
(arra) m(y) f(size.) 38 b(Let) p Fo 25 w(ptr) p 2883
4494 28 5 v 32 w(size) p Fs 25 w(b) s(e) 23 b(the) h(parameter) 150
4604 y(holding) 32 b(the) i(size) g(of) h(the) f(1) h(dimensional,) d
(double) h(precision) f(arra) m(y) j(whic) m(h) p Fo
33 w(PDSPEV) p Fs 33 w(will) c(con) m(v) m(ert) 150 4713
y(to) f(a) f(scratc) m(h) h(arra) m(y) f(of) g(p) s(oin) m(ters) f(to) h
(double) e(precision) g(n) m(um) m(b) s(ers.) 39 b(F) -8
b(or) 30 b(this) e(example,) p Fo 29 w(mapB) p Fs 27
w(can) i(b) s(e) 150 4823 y(empt) m(y) 25 b(or) f(just) g(a) h(dumm) m
(y) e(v) -5 b(ariable.) 38 b(An) 24 b(in) m(teger) h(arra) m(y) p
Fo 25 w(iscratc) m(h\(1:3*n\)) p Fs 28 w(is) e(used) h(for) g(in) m
(teger) h(scratc) m(h) 150 4932 y(space.) 40 b(On) 26
b(output,) p Fo 27 w(FMEMREQ) p Fs 27 w(returns) g(the) h(dimensions) d
(of) j(the) g(scratc) m(h) g(memory) g(necessary) g(for) 150
5042 y(the) c(calculations) f(in) f(the) i(v) -5 b(ariables) p
Fo 22 w(isize) p Fs(,) p Fo 25 w(rsize) p Fs(,) p Fo
26 w(ptr) p 1985 5042 V 32 w(size) p Fs(.) 39 b(The) 23
b(parameter) p Fo 23 w(it) m(yp) s(e) g(=) f(0) p Fs
24 w(indicates) f(that) p 150 5149 1200 4 v Fl 199 5217
a(1) p Fj 275 5249 a(W) -6 b(e) 19 b(are) i(curren) n(tly) e(w) n
(orking) i(on) f(reducing) g(the) g(memory) e(requiremen) n(ts) h(for) i
(the) f(selected) g(eigensystem) g(problem\(see) 275
5340 y(section) 26 b(7) g(Bug) g(1) g(\).) p 90 rotate
dyy eop
%%Page: 16 17
16 16 bop Fs 150 -116 a(16) 3256 b(P) m(eIGS) p Fo 150
299 a(PDSPGV) p Fs 33 w(or) p Fo 33 w(PDSPGVX) p Fs 32
w(is) 33 b(to) h(b) s(e) e(called,) p Fo 33 w(it) m(yp) s(e) p
Fs 34 w(=) h(1) h(indicates) e(that) p Fo 34 w(PDSPEV) p
Fs 31 w(or) p Fo 34 w(PDSPEVX) p Fs 150 408 a(is) d(to) j(b) s(e) d
(called,) h(and) p Fo 30 w(it) m(yp) s(e) p Fs 31 w(=) g(2) h
(indicates) e(that) p Fo 31 w(PDSPTRI) p Fs 30 w(is) g(to) i(b) s(e) f
(called.) 275 547 y(The) 23 b(eigen) m(v) -5 b(alues) 24
b(are) g(returned) f(in) f(an) i(arra) m(y) p Fo 25 w(ev) -5
b(al) p Fs 24 w(on) 24 b(all) f(the) h(participating) e(pro) s(cessors)
h(\(those) i(in) p Fo 150 657 a(mapA) p Fs 30 w(or) p
Fo 31 w(mapZ) p Fs(\)) 30 b(with) g(the) h(eigen) m(v) m(ectors) i
(returned) d(using) f(a) j(one-dimensional) c(arra) m(y) k(in) d(the) j
(same) 150 767 y(manner) f(as) h(the) g(input) e(matrices) i(except) g
(that) h(it) e(is) g(not) h(in) e(a) j(symmetric) e(format.) 45
b(It) 32 b(is) f(imp) s(ortan) m(t) 150 876 y(to) f(note) h(that) p
Fo 30 w(mapZ) p Fs 28 w(on) f(exit) f(from) h(the) f(v) -5
b(arious) 29 b(P) m(eIGS) h(routines) e(will) f(generally) i(b) s(e) g
(di\013eren) m(t) g(than) 150 986 y(it) h(w) m(as) h(on) f(en) m(try) h
(\(i.e.,) g(the) f(output) g(arra) m(y) h(will) d(b) s(e) h(a) i(p) s
(erm) m(utation) f(of) g(the) h(input) d(arra) m(y\).) p
Fk 772 1119 a(integer) 46 b(isize,) g(rsize,) g(ptrsize,) f(itype,) h
(info) 772 1222 y(integer) g(iscratch\(n\)) 772 1326
y(integer) g(iscrat\(*\)) 772 1430 y(integer) g(mapA\(*\),) f
(mapZ\(*\)) 772 1534 y(double) h(precision) f(matrixA\(*\),) g
(matrixZ\(*\),) g(eval\(*\)) 772 1638 y(double) h(precision) f
(dblptr\(*\)) 390 1741 y(c) 390 1845 y(c) i(see) g(note) g(on) g
(portability) 390 1949 y(c) 772 2053 y(itype) f(=) i(1) 772
2156 y(call) e(memreq\() g(itype,) g(n,) i(mapA,) e(mapB,) g(mapZ,) h
(isize,) f(rsize,) 629 2260 y($) 333 b(ptr_size,) 46
b(iscratch\)) 390 2364 y(c) 390 2468 y(c) h(make) g(sure) g(enough) f
(memory) g(was) h(allocated) e(for) i(the) g(scratch) f(space;) 390
2572 y(c) h(at) h(least) e(as) h(much) g(as) g(requested) e(in) i
(isize,) g(rsize,) f(and) h(ptr_size) 390 2675 y(c) 772
2779 y(call) f(pdspev\() g(n,) h(matrixA,) f(mapA,) g(matrixZ,) g
(mapZ,) g(eval,) h(iscrat,) 676 2883 y(1) 143 b(isize,) 46
b(dblptr,) g(ptr_size,) f(scratch,) h(rsize,) g(info) h(\)) 390
2987 y(c) 390 3090 y(c) 390 3194 y(c) p Fs 275 3333 a(Here's) e(an) g
(example) f(of) h(ho) m(w) p Fo 45 w(PDSPGV) p Fs 44
w(can) h(b) s(e) e(called) g(in) f(C.) i(Assume) f(that) p
Fo 46 w(mapA[0:n-1]) p Fs(,) p Fo 150 3443 a(mapB[0:n-1]) p
Fs 31 w(and) p Fo 30 w(mapZ[0:n-1]) p Fs 31 w(ha) m(v) m(e) 32
b(b) s(een) d(allo) s(cated) i(and) f(assigned) f(v) -5
b(alues.) p Fk 772 3680 a(int) 47 b(itype,) f(indx,) g(info;) 772
3783 y(int) h(n,) g(isize,) f(rsize,) g(ptr_size;) 772
3887 y(int) h(*mapA,) f(*mapZ,) g(*mapB;) 772 3991 y(int) h(*iscratch;)
772 4198 y(double) f(**matrixA,) f(**matrixB,) g(**matrixZ;) 772
4302 y(double) h(*iptr,) g(*scratch;) 772 4510 y(extern) g(void) h
(memreq_\(\),) e(pdspgv\(\);) 390 4717 y(...) 772 4821
y(/*) 867 4925 y(input) i(matrixA,) e(matrixB,) h(matrixZ) g(in) h(the)
g(manner) f(cited) 867 5029 y(in) h(the) g(C) h(input) e(section) 772
5132 y(*/) 390 5236 y(...) p 90 rotate dyy eop
%%Page: 17 18
17 17 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(17) p Fk 390 403 a(/*) 772 506 y(allocate) 45
b(scratch) h(space) h(for) f(the) h(memory) f(routine) 390
610 y(*/) 533 818 y(if) h(\(\(itemp) f(=) i(\(int) e(*\)) h(malloc\() f
(n) i(*) f(sizeof\(int\)\)\)) d(==) k(NULL) e(\)) i({) 772
922 y(fprintf\(stderr,) 43 b(") 48 b(ERROR) e(in) h(memory) g
(allocation,) 1106 1025 y(not) g(enough) f(memory) g(for) h(integer) f
(scratch) g(space) g(for) h(memreq) f(\\n"\);) 724 1129
y(exit\(-1\);) 772 1233 y(}) 390 1544 y(/*) 533 1648
y(itype) h(=) g(0) g(specifies) f(memory) g(for) h(the) g(general) e
(symmetric) h(eigensystem) e(problem) 390 1752 y(*/) 533
1959 y(itype) j(=) g(0;) 533 2063 y(memreq_) f(\(&itype,) g(&n,) g
(mapA,) h(mapB,) f(mapZ,) h(&isize,) e(&rsize,) h(&ptr_size,) f
(itemp\);) 533 2167 y(free\(itemp\);) 533 2374 y(if) i(\() h
(\(iscratch) d(=) j(\(int) e(*\)) h(malloc\() f(isize) h(*) g
(sizeof\(int\)\)\)) d(==) j(NULL) g(\){) 676 2478 y(fprintf\(stderr,) d
(") j(ERROR) g(in) g(memory) f(allocation,) 1058 2582
y(not) h(enough) f(memory) g(for) h(integer) f(scratch) g(space) g
(\\n"\);) 676 2686 y(exit\(-1\);) 533 2790 y(}) 533 3101
y(if) h(\() h(\(scratch) d(=) j(\(double) e(*\)) h(malloc\() f(rsize) g
(*) h(sizeof\(double\)\)\)) d(==) j(NULL) g(\){) 676
3205 y(fprintf\(stderr,) d(") j(ERROR) g(in) g(memory) f(allocation,)
1058 3308 y(not) h(enough) f(memory) g(for) h(double) f(scratch) g
(space) g(\\n"\);) 676 3412 y(exit\(-1\);) 533 3516 y(}) 485
3724 y(if) i(\() f(\(iptr) f(=) i(\(double) e(**\)) h(malloc\() e
(ptr_size) h(*) h(sizeof\(double) e(*\)\)\)) h(==) h(NULL) g(\){) 676
3827 y(fprintf\(stderr,) d(") j(ERROR) g(in) g(memory) f(allocation,)
1058 3931 y(not) h(enough) f(memory) g(for) h(pointer) f(scratch) g
(space) g(\\n"\);) 581 4035 y(exit\(-1\);) 485 4139 y(}) 390
4346 y(/*) 485 4450 y(ifact) h(=) g(1) h(specifies) d(that) i(matrix) f
(B) h(contains) f(B) h(and) g(should) f(be) h(Choleski) f(factored) 390
4554 y(*/) 581 4658 y(ifact) g(=) i(1;) 581 4761 y(pdspgv) e(\(&ifact,)
g(&n,) g(matrixA,) g(mapA,) g(matrixB,) g(mapB,) g(matrixZ,) g(mapZ,) g
(eval,) 1249 4865 y(iscratch,) f(&isize,) h(iptr,) h(&ptr_size) e
(,scratch,) g(&rsize,) h(&info\);) 390 5073 y(...) p
90 rotate dyy eop
%%Page: 18 19
18 18 bop Fs 150 -116 a(18) 3256 b(P) m(eIGS) p Fr 150
299 a(4.2) 68 b(PDSPEV:) 45 b(Real) h(Symmetric) f(Eigensystem) i(Solv)
l(er) p Fo 275 505 a(PDSPEV) p Fs 34 w(solv) m(es) 35
b(the) h(standard) e(real) h(symmetric) g(eigensystem) g(problem:) 49
b(Giv) m(en) 35 b(a) h(real) f(sym-) 150 615 y(metric) 30
b(matrix) p Fo 30 w(A) p Fs(,) g(\014nd) f(all) g(its) h(eigen-pairs) f
(\() p Fn(\025;) p Fo 15 w(x) p Fs(\)) j(suc) m(h) e(that) p
Fo 31 w(Ax) p Fs 25 w(=) p Fn 25 w(\025) p Fo(x) p Fs
30 w(.) 275 762 y(In) f(F) -8 b(ortran) 31 b(77) g(the) g(calling) e
(sequences) i(for) f(PDSPEV) g(and) f(PDSPEVX) i(are:) p
Fk 772 905 a(subroutine) 45 b(pdspev\() h(n,) h(vecA,) f(mapA,) h
(vecZ,) f(mapZ,) g(eval,) h(iscratch,) e(iscsize,) 629
1008 y($) 1002 b(dblptr,) 45 b(ibuffsize,) g(scratch,) h(ssize,) g
(info\)) 724 1216 y(integer) 285 b(n,) 47 b(mapA,) f(mapZ,) g
(iscratch,) g(iscsize,) f(ibuffsize,) g(ssize,) h(info) 724
1423 y(double) g(precision) 93 b(eval\(*\),) 46 b(scratch\(*\),) e
(vecA\(*\),) i(vecZ\(*\),) g(dblptr\(*\)) 390 1527 y(c) 390
1631 y(c) h(The) g(input) g(arguments) e(are) i(the) g(same) f(as) i
(in) f(the) g(C) g(code) 390 1735 y(c) g(pdspev) g(except) f(that) g
(one) h(changes) f(the) h(arguments) e(of) i(type) 390
1839 y(c) 334 b("1-D) 46 b(array) h(of) g(pointers) f(to) h
(DoublePrecision",) c(i.e.,) 390 1942 y(c) k(vecA,) g(vecZ) f(and) h
(dblptr,) f(to) h(type) 390 2046 y(c) g("1-D) g(array) f(of) i(double) e
(precision) f(numbers") h(and) g(store) h(the) g(data) f(in) 390
2150 y(c) 334 b(these) 46 b(arrays) g(using) h(the) g(packed) f
(storage) f(format) i(described) e(previously.) 390 2254
y(c) 334 b(Also,) 46 b(when) h(calling) f(from) g(fortran) g(use) h
(FMEMREQ,) f(rather) g(than) g(memreq_,) 390 2357 y(c) 334
b(to) 47 b(get) g(the) g(required) e(size) i(of) g(workspace) e
(arrays.) 390 2461 y(c) 334 b(Finally,) 45 b(the) i(C) h(code) e
(describes) g(arrays) g(of) h(length) f(n) h(with) g(indices) 390
2565 y(c) 334 b(of) 47 b(0) g(to) h(n-1,) e(for) h(fortran) f(usage) g
(the) h(indices) f(should) g(be) h(1) h(to) f(n.) 390
2669 y(c) 772 2811 y(subroutine) e(pdspevx\() g(ivector,) h(irange,) g
(n,) h(vecA,) f(mapA,) 629 2915 y($) 143 b(lb,) 46 b(ub,) h(ilb,) g
(iub,) g(abstol,) 629 3019 y($) 143 b(meigval,) 45 b(vecZ,) h(mapZ,) h
(eval,) f(iscratch,) f(iscsize,) 629 3122 y($) 143 b(dblptr,) 45
b(ibuffsize,) g(scratch,) h(ssize,) g(info\)) 724 3330
y(integer) 285 b(ivector,) 45 b(irange,) h(n,) h(mapA,) f(ilb,) h(iub,)
g(meigval,) 629 3434 y($) 668 b(mapZ,) 46 b(iscratch,) f(iscsize,) h
(ibuffsize,) 629 3537 y($) 668 b(ssize,) 46 b(info) 724
3745 y(double) g(precision) 427 b(lb,) 47 b(ub,) g(abstol,) f
(eval\(*\),) f(scratch\(*\)) 629 3849 y($) 1240 b(vecA\(*\),) 46
b(vecZ\(*\),) f(dblptr\(*\)) 390 4056 y(c) 390 4160 y(c) i(The) g
(input) g(arguments) e(are) i(the) g(same) f(as) i(in) f(the) g(C) g
(code) 390 4264 y(c) g(pdspevx) f(except) g(that) h(one) g(changes) f
(the) h(arguments) e(of) i(type) 390 4368 y(c) 334 b("1-D) 46
b(array) h(of) g(pointers) f(to) h(DoublePrecision",) c(i.e.,) 390
4471 y(c) k(vecA,) g(vecZ) f(and) h(dblptr,) f(to) h(type) 390
4575 y(c) g("1-D) g(array) f(of) i(double) e(precision) f(numbers") h
(and) g(store) h(the) g(data) f(in) 390 4679 y(c) 334
b(these) 46 b(arrays) g(using) h(the) g(packed) f(storage) f(format) i
(described) e(previously.) 390 4783 y(c) 334 b(Also,) 46
b(when) h(calling) f(from) g(fortran) g(use) h(FMEMREQ,) f(rather) g
(than) g(memreq_,) 390 4887 y(c) 334 b(to) 47 b(get) g(the) g(required)
e(size) i(of) g(workspace) e(arrays.) 390 4990 y(c) 334
b(Finally,) 45 b(the) i(C) h(code) e(describes) g(arrays) g(of) h
(length) f(n) h(with) g(indices) 390 5094 y(c) 334 b(of) 47
b(0) g(to) h(n-1,) e(for) h(fortran) f(usage) g(the) h(indices) f
(should) g(be) h(1) h(to) f(n.) 390 5198 y(c) 772 5340
y(subroutine) e(pdspevx\() g(ivector,) h(irange,) g(n,) h(vecA,) f
(mapA,) p 90 rotate dyy eop
%%Page: 19 20
19 19 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(19) p Fk 629 299 a($) 143 b(lb,) 46
b(ub,) h(ilb,) g(iub,) g(abstol,) 629 403 y($) 143 b(meigval,) 45
b(vecZ,) h(mapZ,) h(eval,) f(iscratch,) f(iscsize,) 629
506 y($) 143 b(dblptr,) 45 b(ibuffsize,) g(scratch,) h(ssize,) g
(info\)) 724 714 y(integer) 285 b(ivector,) 45 b(irange,) h(n,) h
(mapA,) f(ilb,) h(iub,) g(meigval,) 629 818 y($) 668
b(mapZ,) 46 b(iscratch,) f(iscsize,) h(ibuffsize,) 629
922 y($) 668 b(ssize,) 46 b(info) 724 1129 y(double) g(precision) 427
b(lb,) 47 b(ub,) g(abstol,) f(eval\(*\),) f(scratch\(*\)) 629
1233 y($) 1240 b(vecA\(*\),) 46 b(vecZ\(*\),) f(dblptr\(*\)) 390
1440 y(c) 390 1544 y(c) i(The) g(input) g(arguments) e(are) i(the) g
(same) f(as) i(in) f(the) g(C) g(code) 390 1648 y(c) g(pdspevx) f
(except) g(that) h(one) g(changes) f(the) h(arguments) e(of) i(type) 390
1752 y(c) p 90 rotate dyy eop
%%Page: 20 21
20 20 bop Fs 150 -116 a(20) 3256 b(P) m(eIGS) 275 299
y(The) 29 b(calling) g(sequence) i(for) f(PDSPEV) g(in) f(C) h(is:) p
Fk 390 462 a(void) 47 b(pdspev\(n,) e(vecA,) h(mapA,) h(vecZ,) f(mapZ,)
g(eval,) h(iscratch,) e(iscsize,) 963 566 y(dblptr,) h(ibuffsize,) f
(scratch,) g(ssize,) h(info\)) 629 774 y(Integer) 570
b(*n,) 47 b(*mapA,) f(*mapZ,) h(*iscratch,) e(*iscsize,) 1535
878 y(*ibuffsize,) g(*ssize,) h(*info;) 629 981 y(DoublePrecision) 139
b(**vecA,) 46 b(**vecZ,) f(*eval,) h(**dblptr,) g(*scratch;) 390
1189 y(/*) 438 1396 y(*) 95 b(Our) 47 b(parallel) e(version) h(of) h
(LAPACK's) f(dspev.) 438 1708 y(*) 95 b(Purpose) 438
1812 y(*) g(=======) 438 2019 y(*) g(pdspev) 46 b(computes) g(all) g
(of) i(the) f(eigenvalues) d(and) j(eigenvectors) e(of) i(a) 438
2123 y(*) 95 b(real) 47 b(symmetric) e(eigenproblem,) f(of) j(the) g
(form) 438 2330 y(*) 95 b(A*x=\(lambda\)) 44 b(*) k(x.) 438
2538 y(*) 95 b(Here) 47 b(A) g(is) g(assumed) f(to) h(be) g(symmetric.)
438 2642 y(*) 95 b(A) 47 b(uses) g(packed) f(storage.) 438
2849 y(*) 95 b(Arguments) 438 2953 y(*) g(=========) 438
3161 y(*) 47 b(The) g(current) f(code) h(assumes) e(mapA) i(and) g
(mapZ) g(each) f(contain) 438 3264 y(*) h(exactly) f(the) h(same) g
(set) f(of) i(processor) d(id's,) h(though) g(not) h(necessarily) 438
3368 y(*) g(in) g(the) g(same) g(order.) 438 3576 y(*) g(All) g
(arguments) e(are) i(POINTERS) f(to) h(date) g(of) g(the) g(specified) e
(type) i(unless) 438 3680 y(*) g(otherwise) e(mentioned.) 93
b(In) 47 b(particular,) e(INTEGER) h(=) h(\(Integer) f(*\)) h(and) 438
3783 y(*) g(DOUBLE) f(PRECISION) g(=) h(\(DoublePrecision) c(*\)) 438
4095 y(*) k(In) g(the) g(following) f(let:) 438 4198
y(*) 190 b(n) 286 b(=) 48 b(dimension) d(of) i(matrix) f(A) 438
4302 y(*) 190 b(me) 238 b(=) 48 b(this) f(processors) e(id) i(\(=) g
(mxmynd_\(\)\)) 438 4406 y(*) 190 b(nprocs) 46 b(=) i(number) e(of) h
(allocated) e(processors) g(\() j(=) f(mxnprc_\(\)\)) 438
4510 y(*) 190 b(nvecsA) 46 b(=) i(number) e(of) h(entries) f(in) h
(mapA) g(equal) f(to) h(me) 438 4614 y(*) 620 b(\(=) 47
b(count_list\() e(me,) i(mapA,) f(n) i(\)\)) 438 4717
y(*) 190 b(nvecsZ) 46 b(=) i(number) e(of) h(entries) f(in) h(mapZ) g
(equal) f(to) h(me) 438 4821 y(*) 620 b(\(=) 47 b(count_list\() e(me,) i
(mapZ,) f(n) i(\)\)) 438 5029 y(*----------------------) o(----) o
(----) o(---) o(----) o(----) o(---) o(----) o(----) o(---) o(----) o
(----) o(--) 438 5236 y(*) 95 b(n) 334 b(\(input\)) 46
b(INTEGER) 438 5340 y(*) 477 b(The) 47 b(number) f(of) h(rows) g(and) f
(columns) g(of) h(the) g(matrices) f(A) h(and) g(B.) p
90 rotate dyy eop
%%Page: 21 22
21 21 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(21) p Fk 438 299 a(*) 477 b(N) 47
b(>=) g(0.) 438 506 y(*) 95 b(vecA) 190 b(\(input/workspace\)) 43
b(array) j(of) h(pointers) f(to) h(DoublePrecision) 438
610 y(*) 1336 b(=) 47 b(\(DoublePrecision) d(**\)) j(dimension) e(\() i
(nvecsA) f(\)) 438 714 y(*) 477 b(On) 47 b(entry,) f(vecA[i],) g(i) h
(=) g(0) h(to) f(nvecsA-1,) e(points) h(to) i(an) 438
818 y(*) 477 b(array) 46 b(containing) f(the) i(lower) f(triangular) f
(part) i(of) g(the) g(i-th) 438 922 y(*) 477 b(column) 46
b(of) h(A) g(which) g(is) g(owned) f(by) i(this) e(processor.) 93
b(The) 438 1025 y(*) 477 b(columns) 46 b(of) h(A) g(owned) g(by) g
(this) f(processer) g(are) h(determined) e(by) i(mapA) 438
1129 y(*) 477 b(\(See) 46 b(below\).) 438 1337 y(*) 477
b(On) 47 b(exit,) f(the) h(contents) f(of) h(matrixA) f(are) h
(destroyed.) 438 1544 y(*) 95 b(mapA) 190 b(\(input\)) 46
b(INTEGER) f(array,) h(dimension) g(\(N\)) 438 1648 y(*) 477
b(mapA\(i\)) 46 b(=) h(the) g(id) g(of) g(the) g(processor) e(which) i
(owns) f(column) h(i) 438 1752 y(*) 954 b(of) 47 b(the) g(A) h(matrix,)
d(i) j(=) f(0) h(to) f(n-1.) 438 1959 y(*) 95 b(vecZ) 190
b(\(output\)) 45 b(array) i(of) g(pointers) e(to) j(DoublePrecision) 43
b(\(DoublePreci-) 390 2063 y(sion) k(**\)) 438 2167 y(*) 906
b(dimension) 46 b(\() h(nvecsZ) f(\)) 438 2271 y(*) 477
b(On) 47 b(entry,) f(vecZ[i],) g(i) h(=) g(0) h(to) f(nvecsZ-1,) e
(should) h(point) h(to) g(an) 438 2374 y(*) 477 b(array) 46
b(of) h(length) f(n.) 438 2582 y(*) 477 b(On) 47 b(exit:) 438
2790 y(*) 572 b(vecZ[i],) 46 b(i) h(=) h(0) f(to) g(nvecsZ-1,) f
(points) g(to) h(the) g(i-th) f(eigenvector) 438 2893
y(*) 572 b(\(as) 47 b(determined) e(by) i(the) g(exit) g(values) f(in) h
(mapZ\)) f(owned) h(by) g(this) 438 2997 y(*) 572 b(processor.) 438
3205 y(*) g(The) 47 b(eigenvectors) e(are) h(normalized) f(such) i
(that:) f(Z'*Z) h(=) h(I.) 438 3412 y(*) 95 b(mapZ) 190
b(\(input/output\)) 44 b(INTEGER) h(array,) i(dimension) e(\(N\)) 438
3516 y(*) 477 b(On) 47 b(entry:) 438 3724 y(*) 477 b(mapZ\(i\)) 46
b(=) h(the) g(id) g(of) g(a) h(processor) d(which) h(has) h(room) g
(for) g(the) 438 3827 y(*) 954 b(i-th) 47 b(eigenvector,) d(i) k(=) f
(0) g(to) h(n-1.) 438 3931 y(*) 477 b(On) 47 b(exit:) 438
4035 y(*) 572 b(mapZ\(i\)) 46 b(=) h(the) g(id) h(of) f(the) g
(processor) e(which) h(actually) g(owns) g(the) h(i-) 390
4139 y(th) 438 4242 y(*) 1049 b(eigenvector,) 45 b(i) i(=) h(0) f(to) g
(n-1.) 438 4450 y(*) 95 b(eval) 190 b(\(output\)) 45
b(DOUBLE) h(PRECISION) g(array,) g(dimension) f(\(N\)) 438
4554 y(*) 477 b(If) 47 b(INFO) g(=) g(0,) g(the) g(eigenvalues) 93
b(of) 47 b(the) g(matrix) 438 4658 y(*) 477 b(in) 47
b(no) g(particular) e(order.) 438 4865 y(*) 95 b(iscratch) 45
b(\(workspace\)) g(INTEGER) h(array,) g(dimension) 438
4969 y(*) 524 b(Must) 47 b(be) g(>=) g(that) g(returned) f(from) g
(utility) g(routine) g(memreq_) 438 5176 y(*) 95 b(iscsize) e
(\(input\)) 46 b(INTEGER) 438 5280 y(*) 524 b(The) 47
b(number) f(of) i(usable) e(elements) f(in) i(array) g("iscratch".) p
90 rotate dyy eop
%%Page: 22 23
22 22 bop Fs 150 -116 a(22) 3256 b(P) m(eIGS) p Fk 438
299 a(*) 524 b(Must) 47 b(be) g(>=) g(that) g(returned) f(from) g
(utility) g(routine) g(memreq_) 438 506 y(*) 95 b(dblptr) 141
b(\(workspace\)) 45 b(DoublePrecision) f(pointer) i(to) 438
610 y(*) 524 b(DoublePrecision) 44 b(\(DoublePrecision) f(**\),) 438
714 y(*) 524 b(dblprt[0]) 46 b(must) g(point) h(to) g(the) g(start) f
(of) h(an) h(array) e(consising) f(of) 438 818 y(*) 524
b(pointers) 46 b(to) h(DoublePrecision) d(\(DoublePrecision) f(*\).) 438
922 y(*) 524 b(Must) 47 b(be) g(>=) g(that) g(returned) f(from) g
(utility) g(routine) g(memreq_) 438 1129 y(*) 95 b(ibuffsize\(input\))
43 b(INTEGER) 438 1233 y(*) 524 b(The) 47 b(number) f(of) i(usable) e
(elements) f(in) i(array) g("dblptr".) 438 1337 y(*) 524
b(Must) 47 b(be) g(>=) g(that) g(returned) f(from) g(utility) g
(routine) g(memreq_) 438 1544 y(*) 95 b(scratch) e(\(workspace\)) 45
b(DOUBLE) h(PRECISION) g(array,) g(dimension) 438 1648
y(*) 524 b(Must) 47 b(be) g(>=) g(that) g(returned) f(from) g(utility) g
(routine) g(memreq_) 438 1856 y(*) 95 b(ssize) 189 b(\(input\)) 46
b(INTEGER) 438 1959 y(*) 524 b(The) 47 b(number) f(of) i(usable) e
(elements) f(in) i(array) g("scratch".) 438 2063 y(*) 524
b(Must) 47 b(be) g(>=) g(that) g(returned) f(in) h(utility) f(routine) f
(memreq_) 438 2271 y(*) 95 b(INFO) 190 b(\(output\)) 45
b(INTEGER) 438 2478 y(*) 477 b(=) 47 b(0:) 95 b(successful) 45
b(exit.) 438 2686 y(*) 477 b(-50) 47 b(<=) g(INFO) f(<) i(0,) f(the) g
(-INFOth) f(argument) f(had) i(an) g(illegal) f(value.) 438
2893 y(*) 477 b(INFO) 46 b(=) i(-51,) 285 b(Input) 46
b(data) h(which) f(must) h(be) g(the) g(same) g(on) g(all) 438
2997 y(*) 1288 b(processors) 45 b(is) i(NOT) g(the) g(same) g(on) g
(all) g(processors) 438 3101 y(*) 1288 b(in) 47 b(mapZ.) 438
3308 y(*) 477 b(=) 47 b(1,) 620 b(Error) 46 b(computing) g(the) h
(eigenvalues) d(of) k(the) 438 3412 y(*) 1288 b(tridiagonal) 45
b(eigenproblem.) 92 b(In) 47 b(this) g(case) 438 3516
y(*) 1288 b('pstebz_') 45 b(returned) h(a) h(non-zero) f(info,) g
(whose) 438 3620 y(*) 1288 b(value) 46 b(was) h(printed) f(to) h
(stderr.) 438 3827 y(*) 477 b(=) 47 b(2,) 620 b(Error) 46
b(computing) g(the) h(eigenvectors) d(of) j(the) 438
3931 y(*) 1288 b(tridiagonal) 45 b(eigenproblem.) 92
b(In) 47 b(this) g(case) 438 4035 y(*) 1288 b('pstein') 46
b(returned) f(a) j(non-zero) d(info,) i(whose) 438 4139
y(*) 1288 b(value) 46 b(was) h(printed) f(to) h(stderr.) 438
4346 y(*) 477 b(Any) 47 b(processor) e(with) i(a) g(negative) f(INFO) g
(stops) h(program) e(execution.) 438 4554 y(*) 477 b(If) 47
b(-50) g(<=) g(INFO) g(<) g(0,) g(then) g(bad) g(data) f(was) h(passed)
f(to) i(this) e(routine) 438 4658 y(*) 1431 b(and) 47
b(no) g(attempt) f(is) h(made) g(to) g(make) g(sure) f(that) 438
4761 y(*) 1431 b(INFO) 47 b(is) g(the) g(same) g(on) g(all) g
(processors.) 438 4969 y(*) 477 b(All) 47 b(other) f(INFO) 285
b(INFO) 47 b(should) f(be) h(the) g(same) g(on) g(all) g(processors) e
(in) 438 5073 y(*) 1431 b(mapA,Z.) 94 b(If) 47 b(this) g(routine) e
(calls) i(a) g(routine) 438 5176 y(*) 1431 b(which) 47
b(returns) e(a) j(negative) d(info,) i(then) f(info) 438
5280 y(*) 1431 b(may) 47 b(not) g(be) g(the) g(same) g(on) g(all) g
(processors.) p 90 rotate dyy eop
%%Page: 23 24
23 23 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(23) p Fk 438 299 a(*) 1431 b(This,) 47
b(however,) e(should) h(never) h(happen.) 438 403 y
(*----------------------) o(----) o(----) o(---) o(----) o(----) o(---)
o(----) o(----) o(---) o(----) o(----) o(---) o(---) 438
610 y(*/) p 90 rotate dyy eop
%%Page: 24 25
24 24 bop Fs 150 -116 a(24) 3256 b(P) m(eIGS) 275 299
y(The) 29 b(calling) g(sequence) i(for) f(PDSPEVX) g(in) f(C) h(is:) p
Fk 390 462 a(void) 47 b(pdspevx) e(\() j(ivector,) d(irange,) h(n,) h
(vecA,) g(mapA,) f(lb,) h(ub,) g(ilb,) g(iub,) f(abstol,) 676
566 y(meigval,) g(vecZ,) g(mapZ,) h(eval,) f(iscratch,) f(iscsize,) 676
670 y(dblptr,) h(ibuffsize,) f(scratch,) h(ssize,) g(info\)) 629
774 y(Integer) 475 b(*ivector,) 45 b(*irange,) h(*n,) h(*mapA,) f
(*ilb,) g(*iub,) h(*meigval;) 629 878 y(Integer) 475
b(*mapZ,) 46 b(*iscratch,) f(*iscsize,) g(*ibuffsize,) g(*ssize,) h
(*info;) 629 981 y(DoublePrecision) 91 b(*lb,) 47 b(*ub,) f(*abstol,) g
(*eval,) g(*scratch;) 629 1085 y(DoublePrecision) 91
b(**vecA,) 46 b(**vecZ,) g(**dblptr;) 390 1293 y(/*) 438
1500 y(*) 95 b(Our) 47 b(parallel) e(version) h(of) h(LAPACK's) f
(dspevx.) 438 1812 y(*) 95 b(Purpose) 438 1915 y(*) g(=======) 438
2123 y(*) g(pdspevx) 46 b(computes) f(some) i(or) g(all) g(of) g(the) g
(eigenvalues) e(and,) h(optionally,) 438 2227 y(*) 95
b(eigenvectors) 44 b(of) k(a) f(real) g(symmetric) e(eigenproblem,) f
(of) j(the) g(form) 438 2434 y(*) 95 b(A*x=\(lambda\)) 44
b(*) k(x.) 438 2642 y(*) 95 b(Here) 47 b(A) g(is) g(assumed) f(to) h
(be) g(symmetric.) 438 2746 y(*) 95 b(A) 47 b(uses) g(packed) f
(storage.) 438 2953 y(*) 95 b(Arguments) 438 3057 y(*) g(=========) 438
3264 y(*) 47 b(The) g(current) f(code) h(assumes) e(mapA) i(and) g
(mapZ) g(each) f(contain) 438 3368 y(*) h(exactly) f(the) h(same) g
(set) f(of) i(processor) d(id's,) h(though) g(not) h(necessarily) 438
3472 y(*) g(in) g(the) g(same) g(order.) 438 3680 y(*) g(All) g
(arguments) e(are) i(POINTERS) f(to) h(date) g(of) g(the) g(specified) e
(type) i(unless) 438 3783 y(*) g(otherwise) e(mentioned.) 93
b(In) 47 b(particular,) e(INTEGER) h(=) h(\(Integer) f(*\)) h(and) 438
3887 y(*) g(DOUBLE) f(PRECISION) g(=) h(\(DoublePrecision) c(*\)) 438
4198 y(*) k(In) g(the) g(following) f(let:) 438 4302
y(*) 190 b(n) 286 b(=) 48 b(dimension) d(of) i(matrix) f(A) 438
4406 y(*) 190 b(me) 238 b(=) 48 b(this) f(processors) e(id) i(\(=) g
(mxmynd_\(\)\)) 438 4510 y(*) 190 b(nprocs) 46 b(=) i(number) e(of) h
(allocated) e(processors) g(\() j(=) f(mxnprc_\(\)\)) 438
4614 y(*) 190 b(nvecsA) 46 b(=) i(number) e(of) h(entries) f(in) h
(mapA) g(equal) f(to) h(me) 438 4717 y(*) 620 b(\(=) 47
b(count_list\() e(me,) i(mapA,) f(n) i(\)\)) 438 4821
y(*) 190 b(nvecsZ) 46 b(=) i(number) e(of) h(entries) f(in) h(mapZ) g
(equal) f(to) h(me) 438 4925 y(*) 620 b(\(=) 47 b(count_list\() e(me,) i
(mapZ,) f(n) i(\)\)) 438 5132 y(*----------------------) o(----) o
(----) o(---) o(----) o(----) o(---) o(----) o(----) o(---) o(----) o
(----) o(--) 438 5236 y(*) 95 b(ivector) 46 b(\(input\)) g(INTEGER) 438
5340 y(*) 477 b(=) 47 b(0:) 191 b(Compute) 45 b(eigenvalues) g(only;) p
90 rotate dyy eop
%%Page: 25 26
25 25 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(25) p Fk 438 299 a(*) 477 b(=) 47
b(1:) 191 b(Compute) 45 b(eigenvalues) g(and) i(eigenvectors.) 438
506 y(*) 95 b(irange) f(\(input\)) 46 b(INTEGER) 438
610 y(*) 477 b(=) 47 b(1:) 143 b(all) 47 b(eigenvalues) d(will) j(be) g
(found;) 438 714 y(*) 477 b(=) 47 b(2:) 143 b(all) 47
b(eigenvalues) d(in) k(the) f(half-open) e(interval) g(\(lb,) i(ub]) 438
818 y(*) 811 b(will) 46 b(be) i(found;) 438 922 y(*) 477
b(=) 47 b(3:) 143 b(the) 47 b(ilb-th) f(through) g(iub-th) g
(eigenvalues) e(will) j(be) g(found.) 438 1233 y(*) 95
b(n) 334 b(\(input\)) 46 b(INTEGER) 438 1337 y(*) 477
b(The) 47 b(number) f(of) h(rows) g(and) f(columns) g(of) h(the) g
(matrices) f(A) h(and) g(B.) 438 1440 y(*) 477 b(N) 47
b(>=) g(0.) 438 1648 y(*) 95 b(vecA) 190 b(\(input/workspace\)) 43
b(array) j(of) h(pointers) f(to) h(DoublePrecision) d(\(Dou-) 390
1752 y(blePrecision) g(**\)) 438 1856 y(*) 1336 b(dimension) 45
b(\() j(nvecsA) e(\)) 438 1959 y(*) 477 b(On) 47 b(entry,) f(vecA[i],) g
(i) h(=) g(0) h(to) f(nvecsA-1,) e(points) h(to) i(an) 438
2063 y(*) 477 b(array) 46 b(containing) f(the) i(lower) f(triangular) f
(part) i(of) g(the) g(i-th) 438 2167 y(*) 477 b(column) 46
b(of) h(A) g(which) g(is) g(owned) f(by) i(this) e(processor.) 93
b(The) 438 2271 y(*) 477 b(columns) 46 b(of) h(A) g(owned) g(by) g
(this) f(processer) g(are) h(determined) e(by) i(mapA) 438
2374 y(*) 477 b(\(See) 46 b(below\).) 438 2582 y(*) 477
b(On) 47 b(exit,) f(the) h(contents) f(of) h(matrixA) f(are) h
(destroyed.) 438 2790 y(*) 95 b(mapA) 190 b(\(input\)) 46
b(INTEGER) f(array,) h(dimension) g(\(N\)) 438 2893 y(*) 477
b(mapA\(i\)) 46 b(=) h(the) g(id) g(of) g(the) g(processor) e(which) i
(owns) f(column) h(i) 438 2997 y(*) 954 b(of) 47 b(the) g(A) h(matrix,)
d(i) j(=) f(0) h(to) f(n-1.) 438 3205 y(*) 95 b(lb) 286
b(\(input\)) 46 b(DOUBLE) g(PRECISION) 438 3308 y(*) 477
b(If) 47 b(IRANGE=2,) 93 b(the) 47 b(lower) f(bound) h(of) g(the) g
(interval) e(to) i(be) h(searched) 438 3412 y(*) 477
b(for) 47 b(eigenvalues.) 92 b(Not) 47 b(referenced) e(if) i(IRANGE) f
(=) h(1) h(or) f(3,) g(but) 438 3516 y(*) 477 b(must) 46
b(not) h(be) g(a) h(pointer) e(to) h(NULL.) 438 3724
y(*) 95 b(ub) 286 b(\(input\)) 46 b(DOUBLE) g(PRECISION) 438
3827 y(*) 477 b(If) 47 b(IRANGE=2,) 93 b(the) 47 b(upper) f(bound) h
(of) g(the) g(interval) e(to) i(be) h(searched) 438 3931
y(*) 477 b(for) 47 b(eigenvalues.) 92 b(Not) 47 b(referenced) e(if) i
(IRANGE) f(=) h(1) h(or) f(3,) g(but) 438 4035 y(*) 477
b(must) 46 b(not) h(be) g(a) h(pointer) e(to) h(NULL.) 438
4242 y(*) 95 b(ilb) 238 b(\(input\)) 46 b(INTEGER) 438
4346 y(*) 477 b(If) 47 b(IRANGE=3,) 93 b(the) 47 b(index) f(\(from) h
(smallest) e(to) i(largest\)) f(of) h(the) 438 4450 y(*) 477
b(smallest) 45 b(eigenvalue) g(to) i(be) h(returned.) 93
b(ilb) 47 b(>=) g(1.) 438 4554 y(*) 477 b(Not) 47 b(referenced) e(if) i
(IRANGE) f(=) h(1) h(or) f(2,) g(but) 438 4658 y(*) 477
b(must) 46 b(not) h(be) g(a) h(pointer) e(to) h(NULL.) 438
4865 y(*) 95 b(iub) 238 b(\(input\)) 46 b(INTEGER) 438
4969 y(*) 477 b(If) 47 b(RANGE=3,) e(the) i(index) g(\(from) f
(smallest) g(to) h(largest\)) e(of) j(the) 438 5073 y(*) 477
b(largest) 46 b(eigenvalue) f(to) i(be) g(returned.) 93
b(min\(ilb,N\)) 45 b(<=) i(iub) g(<=) g(N.) 438 5176
y(*) 477 b(Not) 47 b(referenced) e(if) i(IRANGE) f(=) h(1) h(or) f(2,) g
(but) 438 5280 y(*) 477 b(must) 46 b(not) h(be) g(a) h(pointer) e(to) h
(NULL.) p 90 rotate dyy eop
%%Page: 26 27
26 26 bop Fs 150 -116 a(26) 3256 b(P) m(eIGS) p Fk 438
403 a(*) 95 b(abstol) f(\(input\)) 46 b(DOUBLE) g(PRECISION) 438
506 y(*) 477 b(The) 47 b(absolute) e(error) i(tolerance) e(for) i(the) g
(eigenvalues.) 438 610 y(*) 477 b(An) 47 b(approximate) e(eigenvalue) g
(is) i(accepted) e(as) j(converged) 438 714 y(*) 477
b(when) 46 b(it) i(is) f(determined) e(to) i(lie) g(in) g(an) g
(interval) f([a,b]) 438 818 y(*) 477 b(of) 47 b(width) f(less) h(than) g
(or) g(equal) f(to) 438 1025 y(*) 859 b(ABSTOL) 46 b(+) h(EPS) g(*) 143
b(max\() 47 b(|a|,|b|) e(\)) j(,) 438 1233 y(*) 477 b(where) 46
b(EPS) h(is) g(the) g(machine) f(precision.) 93 b(If) 47
b(ABSTOL) f(is) h(less) g(than) 438 1337 y(*) 477 b(or) 47
b(equal) f(to) h(zero,) g(then) 94 b(EPS*|T|) g(will) 46
b(be) i(used) e(in) h(its) g(place,) 438 1440 y(*) 477
b(where) 46 b(|T|) h(is) g(the) g(1-norm) f(of) h(the) g(tridiagonal) e
(matrix) h(obtained) 438 1544 y(*) 477 b(by) 47 b(reducing) e(matrix) i
(A) g(to) g(tridiagonal) e(form.) 438 1752 y(*) 477 b(See) 47
b("Computing) e(Small) h(Singular) g(Values) g(of) h(Bidiagonal) e
(Matrices) 438 1856 y(*) 477 b(with) 46 b(Guaranteed) f(High) i
(Relative) f(Accuracy,") f(by) i(Demmel) f(and) 438 1959
y(*) 477 b(Kahan,) 46 b(LAPACK) g(Working) g(Note) g(#3.) 438
2167 y(*) 95 b(meigval) 46 b(\(output\)) f(INTEGER) 438
2271 y(*) 477 b(The) 47 b(total) f(number) g(of) h(eigenvalues) e
(found.) 94 b(0) 47 b(<=) g(meigval) f(<=) h(N.) 438
2374 y(*) 477 b(If) 47 b(IRANGE) f(=) h(1,) 143 b(M) 48
b(=) f(N,) g(and) g(if) g(RANGE) g(=) g(3,) 143 b(M) 47
b(=) h(IUB-ILB+1.) 438 2582 y(*) 95 b(vecZ) 190 b(\(output\)) 45
b(array) i(of) g(pointers) e(to) j(DoublePrecision) 43
b(\(DoublePreci-) 390 2686 y(sion) k(**\)) 438 2790 y(*) 906
b(dimension) 46 b(\() h(nvecsZ) f(\)) 438 2893 y(*) 477
b(On) 47 b(entry,) f(vecZ[i],) g(i) h(=) g(0) h(to) f(nvecsZ-1,) e
(should) h(point) h(to) g(an) 438 2997 y(*) 477 b(array) 46
b(of) h(length) f(n.) 438 3205 y(*) 477 b(On) 47 b(exit:) 438
3412 y(*) 572 b(vecZ[i],) 46 b(i) h(=) h(0) f(to) g(nvecsZ-1,) f
(points) g(to) h(the) g(i-th) f(eigenvector) 438 3516
y(*) 572 b(\(as) 47 b(determined) e(by) i(the) g(exit) g(values) f(in) h
(mapZ\)) f(owned) h(by) g(this) 438 3620 y(*) 572 b(processor.) 438
3827 y(*) g(The) 47 b(eigenvectors) e(are) h(normalized) f(such) i
(that:) f(Z'*Z) h(=) h(I.) 438 4035 y(*) 95 b(mapZ) 190
b(\(input/output\)) 44 b(INTEGER) h(array,) i(dimension) e(\(N\)) 438
4139 y(*) 477 b(On) 47 b(entry:) 438 4346 y(*) 477 b(mapZ\(i\)) 46
b(=) h(the) g(id) g(of) g(a) h(processor) d(which) h(has) h(room) g
(for) g(the) 438 4450 y(*) 954 b(i-th) 47 b(eigenvector,) d(i) k(=) f
(0) g(to) h(n-1) f(\(current) e(code) 438 4554 y(*) 954
b(requires) 46 b(this) g(even) h(when) f(computing) g(only) g(some) h
(eigenvalues.) 438 4658 y(*) 477 b(On) 47 b(exit:) 438
4761 y(*) 572 b(mapZ\(i\)) 46 b(=) h(the) g(id) h(of) f(the) g
(processor) e(which) h(actually) g(owns) g(the) h(i-) 390
4865 y(th) 438 4969 y(*) 1049 b(eigenvector,) 45 b(i) i(=) h(0) f(to) g
(n-1.) 438 5176 y(*) 95 b(eval) 190 b(\(output\)) 45
b(DOUBLE) h(PRECISION) g(array,) g(dimension) f(\(N\)) 438
5280 y(*) 477 b(If) 47 b(INFO) g(=) g(0,) g(the) g(eigenvalues) 93
b(of) 47 b(the) g(matrix) p 90 rotate dyy eop
%%Page: 27 28
27 27 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(27) p Fk 438 299 a(*) 477 b(in) 47
b(no) g(particular) e(order.) 438 506 y(*) 95 b(iscratch) 45
b(\(workspace\)) g(INTEGER) h(array,) g(dimension) 438
610 y(*) 524 b(Must) 47 b(be) g(>=) g(that) g(returned) f(from) g
(utility) g(routine) g(memreq_) 438 818 y(*) 95 b(iscsize) e(\(input\))
46 b(INTEGER) 438 922 y(*) 524 b(The) 47 b(number) f(of) i(usable) e
(elements) f(in) i(array) g("iscratch".) 438 1025 y(*) 524
b(Must) 47 b(be) g(>=) g(that) g(returned) f(from) g(utility) g
(routine) g(memreq_) 438 1233 y(*) 95 b(dblptr) 141 b(\(workspace\)) 45
b(DoublePrecision) f(pointer) i(to) 438 1337 y(*) 1097
b(DoublePrecision) 44 b(\(DoublePrecision) f(**\),) 438
1440 y(*) 524 b(dblprt[0]) 46 b(must) g(point) h(to) g(the) g(start) f
(of) h(an) h(array) e(consising) f(of) 438 1544 y(*) 524
b(pointers) 46 b(to) h(DoublePrecision) d(\(DoublePrecision) f(*\).) 438
1648 y(*) 524 b(Must) 47 b(be) g(>=) g(that) g(returned) f(from) g
(utility) g(routine) g(memreq_) 438 1856 y(*) 95 b(ibuffsize\(input\))
43 b(INTEGER) 438 1959 y(*) 524 b(The) 47 b(number) f(of) i(usable) e
(elements) f(in) i(array) g("dblptr".) 438 2063 y(*) 524
b(Must) 47 b(be) g(>=) g(that) g(returned) f(from) g(utility) g
(routine) g(memreq_) 438 2271 y(*) 95 b(scratch) e(\(workspace\)) 45
b(DOUBLE) h(PRECISION) g(array,) g(dimension) 438 2374
y(*) 524 b(Must) 47 b(be) g(>=) g(that) g(returned) f(from) g(utility) g
(routine) g(memreq_) 438 2582 y(*) 95 b(ssize) 189 b(\(input\)) 46
b(INTEGER) 438 2686 y(*) 524 b(The) 47 b(number) f(of) i(usable) e
(elements) f(in) i(array) g("scratch".) 438 2790 y(*) 524
b(Must) 47 b(be) g(>=) g(that) g(returned) f(in) h(utility) f(routine) f
(memreq_) 438 2997 y(*) 95 b(INFO) 190 b(\(output\)) 45
b(INTEGER) 438 3205 y(*) 477 b(=) 47 b(0:) 95 b(successful) 45
b(exit.) 438 3412 y(*) 477 b(-50) 47 b(<=) g(INFO) f(<) i(0,) f(the) g
(-INFOth) f(argument) f(had) i(an) g(illegal) f(value.) 438
3620 y(*) 477 b(INFO) 46 b(=) i(-51,) 285 b(Input) 46
b(data) h(which) f(must) h(be) g(the) g(same) g(on) g(all) 438
3724 y(*) 1288 b(processors) 45 b(is) i(NOT) g(the) g(same) g(on) g
(all) g(processors) 438 3827 y(*) 1288 b(in) 47 b(mapZ.) 438
4035 y(*) 477 b(=) 47 b(1,) 620 b(Error) 46 b(computing) g(the) h
(eigenvalues) d(of) k(the) 438 4139 y(*) 1288 b(tridiagonal) 45
b(eigenproblem.) 92 b(In) 47 b(this) g(case) 438 4242
y(*) 1288 b('pstebz_') 45 b(returned) h(a) h(non-zero) f(info,) g
(whose) 438 4346 y(*) 1288 b(value) 46 b(was) h(printed) f(to) h
(stderr.) 438 4554 y(*) 477 b(=) 47 b(2,) 620 b(Error) 46
b(computing) g(the) h(eigenvectors) d(of) j(the) 438
4658 y(*) 1288 b(tridiagonal) 45 b(eigenproblem.) 92
b(In) 47 b(this) g(case) 438 4761 y(*) 1288 b('pstein') 46
b(returned) f(a) j(non-zero) d(info,) i(whose) 438 4865
y(*) 1288 b(value) 46 b(was) h(printed) f(to) h(stderr.) 438
5073 y(*) 477 b(Any) 47 b(processor) e(with) i(a) g(negative) f(INFO) g
(stops) h(program) e(execution.) 438 5280 y(*) 477 b(If) 47
b(-50) g(<=) g(INFO) g(<) g(0,) g(then) g(bad) g(data) f(was) h(passed)
f(to) i(this) e(routine) p 90 rotate dyy eop
%%Page: 28 29
28 28 bop Fs 150 -116 a(28) 3256 b(P) m(eIGS) p Fk 438
299 a(*) 1431 b(and) 47 b(no) g(attempt) f(is) h(made) g(to) g(make) g
(sure) f(that) 438 403 y(*) 1431 b(INFO) 47 b(is) g(the) g(same) g(on) g
(all) g(processors.) 438 610 y(*) 477 b(All) 47 b(other) f(INFO) 285
b(INFO) 47 b(should) f(be) h(the) g(same) g(on) g(all) g(processors) e
(in) 438 714 y(*) 1431 b(mapA,Z.) 94 b(If) 47 b(this) g(routine) e
(calls) i(a) g(routine) 438 818 y(*) 1431 b(which) 47
b(returns) e(a) j(negative) d(info,) i(then) f(info) 438
922 y(*) 1431 b(may) 47 b(not) g(be) g(the) g(same) g(on) g(all) g
(processors.) 438 1025 y(*) 1431 b(This,) 47 b(however,) e(should) h
(never) h(happen.) 438 1129 y(*----------------------) o(----) o(----) o
(---) o(----) o(----) o(---) o(----) o(----) o(---) o(----) o(----) o
(---) o(---) 438 1337 y(*/) p 90 rotate dyy eop
%%Page: 29 30
29 29 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(29) p Fr 150 166 a(4.3) 68 b(PDSPGV) 44
b(and) g(PDSPGVX:) g(Generalized) i(Symmetric) 389 299
y(Eigensystem) h(Solv) l(er) p Fs 275 489 a(This) 26
b(is) g(the) i(real) g(general) f(symmetric) h(eigensystem) f(problem:)
38 b(Giv) m(en) 28 b(a) g(real) g(symmetric) f(matrix) p
Fo 150 598 a(A) p Fs 33 w(and) 33 b(a) h(p) s(ositiv) m(e) f
(de\014nite) f(real) i(symmetric) f(matrix) p Fo 33 w(B) p
Fs(,) g(\014nd) f(all) h(its) g(eigen-pairs) f(\() p
Fn(\025;) p Fo 15 w(x) p Fs(\)) j(suc) m(h) e(that) p
Fo 150 708 a(Ax) p Fs 25 w(=) p Fn 25 w(\025) p Fo(Bx) p
Fs 30 w(.) 275 840 y(F) -8 b(or) 33 b(one) h(pro) s(cessor) e(w) m(e) i
(use) f(the) g(standard) f(algorithm) p Fm 32 w(\(c.f.) 50
b(Wilkinson,) 32 b(J.) h(H.,) h(The) e(Algebraic) 150
949 y(Eigen) m(v) -5 b(alue) 32 b(Problem,) f(page) i(337-339\)) p
Fs(.) 50 b(F) -8 b(or) 33 b(m) m(ulti-pro) s(cessors) e(w) m(e) h(p) s
(erform) f(the) i(reduction) e(to) i(the) 150 1059 y(standard) 23
b(eigensystem) i(problem) e(b) m(y) h(computing) f(the) i(in) m(v) m
(erse) f(of) g(the) h(lo) m(w) m(er) f(triangular) f(matrix) g(from) 150
1169 y(the) 34 b(Choleski) e(factorization,) k(and) d(then) g(p) s
(erform) g(matrix) g(conjugation) h(to) g(obtain) p Fo
33 w(L) p Fd 3226 1136 a(T) p Fo 3278 1169 a(AL) p Ff
3402 1136 a(\000) p Fd(T) p Fn 3506 1169 a(:) p Fo 34
w(Cur-) 150 1278 y(ren) m(tly) -8 b(,) 27 b(the) d(m) m(ulti-pro) s
(cessor) h(reduction) f(algorithm) h(is) f(used) f(ev) m(en) i(when) e
(using) g(only) h(one) g(pro) s(cessor) p Fs(.) 275 1410
y(In) 33 b(some) i(applications,) e(the) i(matrix) p
Fo 33 w(B) p Fs 34 w(ma) m(y) g(already) f(ha) m(v) m(e) h(b) s(een) f
(factored) h(and) e(the) i(in) m(v) m(erse) f(of) 150
1520 y(the) f(c) m(holeski) g(factor) h(is) f(stored) g(in) p
Fo 32 w(B) p Fs(.) g(A) g(parameter) p Fo 34 w(ifact) h(=) f(0) p
Fs 34 w(is) f(used) h(as) g(an) g(input) f(to) p Fo 34
w(p) s(dspgv) p Fs 31 w(to) 150 1629 y(skip) d(the) j(c) m(holeski) e
(factorization) i(\() f(for) f(serial) g(\)) h(and) g(its) f(in) m(v) m
(erse) h(computations) f(\() i(for) e(parallel) f(\).) 43
b(A) 150 1739 y(v) -5 b(alue) p Fo 30 w(ifact) 31 b(=) f(1) p
Fs 31 w(is) f(used) h(to) h(sp) s(ecify) e(that) p Fo
31 w(B) p Fs 30 w(is) g(not) i(the) g(Choleski) d(factor) k(of) p
Fo 30 w(B) p Fs 30 w(or) f(its) e(in) m(v) m(erse.) 275
1871 y(In) g(F) -8 b(ortran) 31 b(77) g(the) g(calling) e(sequences) i
(for) f(PDSPGV) g(and) g(PDSPGVX) h(are:) p Fk 581 1997
a(subroutine) 45 b(pdspgv) h(\(ifact,) g(n,) h(matrixA,) f(mapA,) 1488
2101 y(matrixB,) f(mapB,) i(matZ,) f(mapZ,) g(eval,) 1488
2204 y(iscratch,) f(iscsize,) h(dblptr,) f(ibuffsz,) 1488
2308 y(scratch,) g(rsize,) h(info\)) 581 2516 y(integer) 93
b(ifact,) 47 b(n,) g(mapA\(*\),) e(mapB\(*\),) h(mapZ\(*\),) f
(iscratch\(*\),) g(iscsize,) 1201 2619 y(ibuffsz,) h(rsize,) g(info;)
581 2827 y(double) g(precision) 93 b(matrixA\(*\),) 45
b(matrixB\(*\),) f(matZ\(*\),) i(eval\(*\),) g(scratch\(*\);) 581
2931 y(double) g(precision) 93 b(dblptr\(*\)) 390 3138
y(c) 47 b(The) g(input) g(arguments) e(are) i(the) g(same) f(as) i(in) f
(the) g(C) g(code) 390 3242 y(c) g(pdspgv) g(except) f(that) g(one) h
(changes) f(the) h(arguments) e(of) i(type) 390 3346
y(c) 334 b("1-D) 46 b(array) h(of) g(pointers) f(to) h
(DoublePrecision",) c(i.e.,) 390 3450 y(c) k(vecA,) g(vecB,) f(vecZ) h
(and) g(dblptr,) f(to) h(type) 390 3553 y(c) g("1-D) g(array) f(of) i
(double) e(precision) f(numbers") h(and) g(store) h(the) g(data) f(in)
390 3657 y(c) 334 b(these) 46 b(arrays) g(using) h(the) g(packed) f
(storage) f(format) i(described) e(previously.) 390 3761
y(c) 334 b(Also,) 46 b(when) h(calling) f(from) g(fortran) g(use) h
(FMEMREQ,) f(rather) g(than) g(memreq_,) 390 3865 y(c) 334
b(to) 47 b(get) g(the) g(required) e(size) i(of) g(workspace) e
(arrays.) 390 3969 y(c) 334 b(Finally,) 45 b(the) i(C) h(code) e
(describes) g(arrays) g(of) h(length) f(n) h(with) g(indices) 390
4072 y(c) 334 b(of) 47 b(0) g(to) h(n-1,) e(for) h(fortran) f(usage) g
(the) h(indices) f(should) g(be) h(1) h(to) f(n.) 390
4176 y(c) 581 4302 y(subroutine) e(pdspgvx) h(\(ifact,) g(ivector,) f
(irange,) h(n,) h(matrixA,) f(mapA,) 1488 4406 y(matrixB,) f(mapB,) i
(matZ,) f(mapZ,) g(eval,) 1488 4510 y(iscratch,) f(iscsize,) h(dblptr,)
f(ibuffsz,) 1488 4614 y(scratch,) g(rsize,) h(info\)) 581
4821 y(integer) 93 b(ifact,) 47 b(n,) g(mapA\(*\),) e(mapB\(*\),) h
(mapZ\(*\),) f(iscratch\(*\),) g(iscsize,) 1201 4925
y(ibuffsz,) h(rsize,) g(info;) 581 5132 y(double) g(precision) 93
b(matrixA\(*\),) 45 b(matrixB\(*\),) f(matZ\(*\),) i(eval\(*\),) g
(scratch\(*\);) 581 5236 y(double) g(precision) 93 b(dblptr\(*\)) p
90 rotate dyy eop
%%Page: 30 31
30 30 bop Fs 150 -116 a(30) 3256 b(P) m(eIGS) p Fk 390
299 a(c) 47 b(The) g(input) g(arguments) e(are) i(the) g(same) f(as) i
(in) f(the) g(C) g(code) 390 403 y(c) g(pdspgvx) f(except) g(that) h
(one) g(changes) f(the) h(arguments) e(of) i(type) 390
506 y(c) 334 b("1-D) 46 b(array) h(of) g(pointers) f(to) h
(DoublePrecision",) c(i.e.,) 390 610 y(c) k(vecA,) g(vecB,) f(vecZ) h
(and) g(dblptr,) f(to) h(type) 390 714 y(c) g("1-D) g(array) f(of) i
(double) e(precision) f(numbers") h(and) g(store) h(the) g(data) f(in)
390 818 y(c) 334 b(these) 46 b(arrays) g(using) h(the) g(packed) f
(storage) f(format) i(described) e(previously.) 390 922
y(c) 334 b(Also,) 46 b(when) h(calling) f(from) g(fortran) g(use) h
(FMEMREQ,) f(rather) g(than) g(memreq_,) 390 1025 y(c) 334
b(to) 47 b(get) g(the) g(required) e(size) i(of) g(workspace) e
(arrays.) 390 1129 y(c) 334 b(Finally,) 45 b(the) i(C) h(code) e
(describes) g(arrays) g(of) h(length) f(n) h(with) g(indices) 390
1233 y(c) 334 b(of) 47 b(0) g(to) h(n-1,) e(for) h(fortran) f(usage) g
(the) h(indices) f(should) g(be) h(1) h(to) f(n.) 390
1337 y(c) p Fs 275 1473 a(In) 29 b(C) h(the) h(calling) e(sequence) h
(for) g(PDSPGV) h(is:) p Fk 390 1604 a(void) 47 b(pdspgv\() e(ifact,) i
(n,) g(vecA,) f(mapA,) g(vecB,) h(mapB,) f(vecZ,) h(mapZ,) 581
1708 y(eval,) f(iscratch,) g(iscsize,) f(dblptr,) h(ibuffsize,) f
(scratch,) g(ssize,) i(info\)) 629 1812 y(Integer) 475
b(*ifact,) 46 b(*n,) h(*mapA,) f(*mapB,) g(*mapZ,) g(*iscratch,) 1440
1915 y(*iscsize,) f(*ibuffsize,) g(*ssize,) h(*info;) 629
2019 y(DoublePrecision) 91 b(**vecA,) 46 b(**vecB,) g(**vecZ,) f
(*eval,) i(**dblptr,) e(*scratch;) 485 2227 y(/*) 533
2434 y(*) 95 b(Our) 47 b(parallel) f(version) g(of) h(LAPACK's) e
(dspgv.) 533 2746 y(*) 95 b(Purpose) 533 2849 y(*) g(=======) 533
3057 y(*) g(pdspgv) 46 b(computes) g(all) h(of) g(the) g(eigenvalues) e
(and) i(eigenvectors) d(of) j(a) 533 3161 y(*) 95 b(real) 47
b(generalized) e(symmetric-definite) e(eigenproblem,) h(of) j(the) g
(form) 533 3368 y(*) 95 b(A*x=\(lambda\)*B*x.) 533 3576
y(*) g(Here) 47 b(A) g(and) g(B) h(are) f(assumed) f(to) h(be) g
(symmetric) e(and) i(B) h(is) f(also) 533 3680 y(*) 95
b(positive) 46 b(definite.) f(The) i(matrices) f(A) h(and) g(B) g(use) g
(packed) f(storage.) 533 3887 y(*) 95 b(Arguments) 533
3991 y(*) g(=========) 533 4198 y(*) 48 b(NOTE:) e(The) h(current) f
(code) g(assumes) g(mapA,) h(mapB) f(and) h(mapZ) g(each) f(contain) 533
4302 y(*) 334 b(exactly) 46 b(the) h(same) f(set) h(of) g(processor) f
(id's,) g(though) g(not) h(necessarily) 533 4406 y(*) 334
b(in) 47 b(the) g(same) g(order.) 533 4614 y(*) h(All) f(arguments) e
(are) i(POINTERS) e(to) i(date) g(of) g(the) g(specified) e(type) i
(unless) 533 4717 y(*) h(otherwise) d(mentioned.) 93
b(In) 47 b(particular,) e(INTEGER) g(=) j(\(Integer) d(*\)) j(and) 533
4821 y(*) g(DOUBLE) e(PRECISION) f(=) i(\(DoublePrecision) d(*\)) 533
5132 y(*) k(In) f(the) g(following) e(let:) 533 5236
y(*) 191 b(n) 286 b(=) 47 b(dimension) f(of) h(matrices) e(A) j(and) f
(B) 533 5340 y(*) 191 b(me) 238 b(=) 47 b(this) g(processors) e(id) i
(\(=) g(mxmynd_\(\)\)) p 90 rotate dyy eop
%%Page: 31 32
31 31 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(31) p Fk 533 299 a(*) 191 b(nprocs) 46
b(=) h(number) f(of) i(allocated) d(processors) g(\() i(=) h
(mxnprc_\(\)\)) 533 403 y(*) 191 b(nvecsA) 46 b(=) h(number) f(of) i
(entries) d(in) j(mapA) e(equal) h(to) g(me) 533 506
y(*) 620 b(\(=) 48 b(count_list\() c(me,) j(mapA,) g(n) g(\)\)) 533
610 y(*) 620 b(number) 46 b(of) i(columns) d(of) j(A) f(this) g
(processor) e(has) 533 714 y(*) 191 b(nvecsB) 46 b(=) h(number) f(of) i
(entries) d(in) j(mapB) e(equal) h(to) g(me) 533 818
y(*) 620 b(\(=) 48 b(count_list\() c(me,) j(mapB,) g(n) g(\)\)) 533
922 y(*) 620 b(number) 46 b(of) i(vectors) d(this) i(processor) e(has)
533 1025 y(*) 191 b(nvecsZ) 46 b(=) h(number) f(of) i(entries) d(in) j
(mapZ) e(equal) h(to) g(me) 533 1129 y(*) 620 b(\(=) 48
b(count_list\() c(me,) j(mapZ,) g(n) g(\)\)) 533 1337
y(*------------------------) o(----) o(---) o(----) o(----) o(---) o
(----) o(----) o(---) o(----) o(----) o(---) o(-) 533
1544 y(*) 95 b(ifact) 142 b(\(input\)) 46 b(INTEGER) 533
1648 y(*) 477 b(Specifies) 45 b(whether) h(or) h(not) g(to) h(factor) e
(the) h(B) g(matrix.) 533 1752 y(*) 477 b(=) 48 b(0:) 95
b(Don't) 46 b(factor) g(B,) h(vecB) g(is) g(already) f(the) h(L) g(in) g
(B) h(=) f(L*L'.) 533 1856 y(*) 764 b(\(for) 46 b(serial) g(\)) i(or) f
(L**\(-1\)) f(for) h(parallel) 533 1959 y(*) 764 b(which) 46
b(was) h(computed) e(on) j(a) f(previous) f(call) g(to) h(pdspgv.) 533
2167 y(*) 477 b(=) 48 b(1:) 95 b(Factor) 46 b(B) 533
2374 y(*) 95 b(n) 334 b(\(input\)) 46 b(INTEGER) 533
2478 y(*) 477 b(The) 47 b(number) f(of) h(rows) g(and) g(columns) f(of)
h(the) g(matrices) e(A) j(and) f(B.) 533 2582 y(*) 477
b(N) 48 b(>=) f(0.) 533 2790 y(*) 95 b(vecA) 190 b(\(input/workspace\))
43 b(array) k(of) g(pointers) e(to) j(DoublePrecision) 43
b(\(Dou-) 390 2893 y(blePrecision) h(**\)) 533 2997 y(*) 1336
b(dimension) 46 b(\() h(nvecsA) f(\)) 533 3101 y(*) 477
b(On) 47 b(entry,) f(vecA[i],) g(i) h(=) h(0) f(to) h(nvecsA-1,) d
(points) h(to) h(an) 533 3205 y(*) 477 b(array) 47 b(containing) e(the)
h(lower) h(triangular) e(part) h(of) i(the) f(i-th) 533
3308 y(*) 477 b(column) 46 b(of) h(A) h(which) e(is) h(owned) g(by) g
(this) g(processor.) 92 b(The) 533 3412 y(*) 477 b(columns) 46
b(of) h(A) h(owned) e(by) h(this) g(processer) e(are) i(determined) e
(by) i(mapA) 533 3516 y(*) 477 b(\(See) 47 b(below\).) 533
3724 y(*) 477 b(On) 47 b(exit,) g(the) g(contents) e(of) i(matrixA) f
(are) h(destroyed.) 533 3931 y(*) 95 b(mapA) 190 b(\(input\)) 46
b(INTEGER) g(array,) g(dimension) f(\(N\)) 533 4035 y(*) 477
b(mapA\(i\)) 46 b(=) h(the) g(id) h(of) f(the) g(processor) e(which) h
(owns) h(column) f(i) 533 4139 y(*) 954 b(of) 48 b(the) f(A) g(matrix,)
f(i) h(=) h(0) f(to) g(n-1.) 533 4346 y(*) 95 b(vecB) 190
b(\(input/output\)) 44 b(array) i(of) i(pointers) d(to) i
(DoublePrecision) d(\(Dou-) 390 4450 y(blePrecision) g(**\)) 533
4554 y(*) 1336 b(dimension) 46 b(\() h(nvecsB) f(\)) 533
4658 y(*) 477 b(On) 47 b(entry,) f(vecB[i],) g(i) h(=) h(0) f(to) h
(nvecsB-1,) d(points) h(to) h(an) 533 4761 y(*) 477 b(array) 47
b(containing) e(the) h(lower) h(triangular) e(part) h(of) i(the) f
(i-th) 533 4865 y(*) 477 b(column) 46 b(of) h(B) h(which) e(is) h
(owned) g(by) g(this) g(processor.) 92 b(The) 533 4969
y(*) 477 b(columns) 46 b(of) h(B) h(owned) e(by) h(this) g(processer) e
(are) i(determined) e(by) i(mapB) 533 5073 y(*) 477 b(\(See) 47
b(below\).) 533 5280 y(*) 477 b(On) 47 b(exit) p 90 rotate
dyy eop
%%Page: 32 33
32 32 bop Fs 150 -116 a(32) 3256 b(P) m(eIGS) p Fk 533
299 a(*) 573 b(Let) 47 b(L) g(be) g(the) g(triangular) e(factor) h(L) i
(from) e(the) h(Choleski) 533 403 y(*) 573 b(factorization) 44
b(B) j(=) h(L*L',) e(then) 533 610 y(*) 573 b(if) 47
b(\(nprocs) f(=) h(1\):) g(vecB) g(contains) 93 b(L,) 477
b(same) 46 b(storage) g(as) h(B) 533 714 y(*) 573 b(else) 524
b(:) 47 b(vecB) g(contains) e(\(L) i(inverse\),) f(same) g(storage) g
(as) h(B) 533 1025 y(*) 95 b(mapB) 190 b(\(input\)) 46
b(INTEGER) g(array,) g(dimension) f(\(N\)) 533 1129 y(*) 477
b(mapB\(i\)) 46 b(=) h(the) g(id) h(of) f(the) g(processor) e(which) h
(owns) h(column) f(i) 533 1233 y(*) 954 b(of) 48 b(the) f(B) g(matrix,)
f(i) h(=) h(0) f(to) g(n-1.) 533 1440 y(*) 95 b(vecZ) 190
b(\(output\)) 46 b(array) g(of) h(pointers) f(to) h(DoublePrecision) d
(\(DoublePre-) 390 1544 y(cision) i(**\)) 533 1648 y(*) 907
b(dimension) 45 b(\() i(nvecsZ) g(\)) 533 1752 y(*) 477
b(On) 47 b(entry,) f(vecZ[i],) g(i) h(=) h(0) f(to) h(nvecsZ-1,) d
(should) h(point) g(to) h(an) 533 1856 y(*) 477 b(array) 47
b(of) g(length) f(n.) 533 2063 y(*) 477 b(On) 47 b(exit:) 533
2271 y(*) 573 b(vecZ[i],) 45 b(i) j(=) f(0) h(to) f(nvecsZ-1,) e
(points) h(to) h(the) g(i-th) g(eigenvector) 533 2374
y(*) 573 b(\(as) 47 b(determined) e(by) i(the) g(exit) f(values) g(in) i
(mapZ\)) e(owned) g(by) h(this) 533 2478 y(*) 573 b(processor.) 533
2686 y(*) g(The) 47 b(eigenvectors) d(are) j(normalized) e(such) i
(that:) f(Z'*B*Z) g(=) h(I.) 533 2893 y(*) 95 b(mapZ) 190
b(\(input/output\)) 44 b(INTEGER) i(array,) g(dimension) f(\(N\)) 533
2997 y(*) 477 b(On) 47 b(entry:) 533 3205 y(*) 477 b(mapZ\(i\)) 46
b(=) h(the) g(id) h(of) f(a) g(processor) e(which) i(has) g(room) f
(for) h(the) 533 3308 y(*) 954 b(i-th) 47 b(eigenvector,) e(i) i(=) g
(0) h(to) f(n-1.) 533 3412 y(*) 477 b(On) 47 b(exit:) 533
3516 y(*) 573 b(mapZ\(i\)) 45 b(=) j(the) f(id) g(of) g(the) g
(processor) e(which) i(actually) e(owns) i(the) g(i-) 390
3620 y(th) 533 3724 y(*) 1050 b(eigenvector,) 44 b(i) k(=) f(0) h(to) f
(n-1.) 533 3931 y(*) 95 b(eval) 190 b(\(output\)) 46
b(DOUBLE) g(PRECISION) f(array,) h(dimension) f(\(N\)) 533
4035 y(*) 477 b(If) 47 b(INFO) g(=) g(0,) h(the) f(eigenvalues) 92
b(of) 47 b(the) g(matrix) 533 4139 y(*) 477 b(in) 47
b(no) h(particular) d(order.) 533 4346 y(*) 95 b(iscratch) 46
b(\(workspace\)) f(INTEGER) g(array,) i(dimension) e(\(??\)) 533
4554 y(*) 95 b(iscsize) f(\(input\)) 46 b(INTEGER) 533
4658 y(*) 525 b(The) 47 b(number) f(of) h(usable) f(elements) g(in) h
(array) f("iscratch".) 533 4761 y(*) 525 b(Must) 47 b(be) g(>=) g(???.)
533 4969 y(*) 95 b(dblptr) 142 b(\(workspace\)) 45 b(DoublePrecision) e
(pointer) j(to) h(DoublePrecision) d(\(Dou-) 390 5073
y(blePrecision) g(**\),) 533 5176 y(*) 525 b(dblprt[0]) 45
b(must) i(point) f(to) h(the) g(start) g(of) g(an) g(array) f
(consising) g(of) 533 5280 y(*) 525 b(???) 47 b(pointers) e(to) j
(DoublePrecision.) p 90 rotate dyy eop
%%Page: 33 34
33 33 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(33) p Fk 533 403 a(*) 95 b(ibuffsize\(input\)) 44
b(INTEGER) 533 506 y(*) 525 b(The) 47 b(number) f(of) h(usable) f
(elements) g(in) h(array) f("dblptr".) 533 610 y(*) 525
b(Must) 47 b(be) g(>=) g(???.) 533 818 y(*) 95 b(scratch) f
(\(workspace\)) 45 b(DOUBLE) h(PRECISION) f(array,) h(dimension) f
(\(??\)) 533 1025 y(*) 95 b(ssize) 190 b(\(input\)) 46
b(INTEGER) 533 1129 y(*) 525 b(The) 47 b(number) f(of) h(usable) f
(elements) g(in) h(array) f("scratch".) 533 1233 y(*) 525
b(Must) 47 b(be) g(>=) g(???.) 533 1440 y(*) 95 b(INFO) 190
b(\(output\)) 46 b(INTEGER) 533 1648 y(*) 477 b(=) 48
b(0:) 95 b(successful) 45 b(exit.) 533 1856 y(*) 477
b(-50) 47 b(<=) g(INFO) g(<) g(0,) h(the) e(-INFOth) g(argument) g(had)
h(an) g(illegal) f(value.) 533 2063 y(*) 477 b(INFO) 47
b(=) g(-51,) 286 b(Input) 46 b(data) h(which) f(must) h(be) g(the) g
(same) f(on) h(all) 533 2167 y(*) 1289 b(processors) 45
b(is) i(NOT) g(the) g(same) f(on) h(all) g(processors) 533
2271 y(*) 1289 b(in) 47 b(mapZ.) 533 2478 y(*) 477 b(=) 48
b(1,) 620 b(Error) 46 b(choleski) f(factoring) h(B.) 95
b(In) 47 b(this) f(case) 533 2582 y(*) 1289 b('choleski') 45
b(returned) g(a) j(non-zero) d(info,) h(whose) 533 2686
y(*) 1289 b(value) 46 b(was) h(printed) f(to) h(stderr.) 533
2893 y(*) 477 b(=) 48 b(2,) 620 b(Error) 46 b(computing) f(inverse) h
(of) h(L,) g(the) g(choleski) 533 2997 y(*) 1289 b(factor) 46
b(of) h(B.) 95 b(In) 47 b(this) g(case) 533 3101 y(*) 1289
b('inverseL') 45 b(returned) g(a) j(non-zero) d(info,) h(whose) 533
3205 y(*) 1289 b(value) 46 b(was) h(printed) f(to) h(stderr.) 533
3412 y(*) 477 b(=) 48 b(3,) 620 b(Error) 46 b(solving) g(the) h
(standard) e(eigenproblem.) 533 3516 y(*) 1289 b(In) 47
b(this) f(case) 533 3620 y(*) 1289 b('pdspevx') 45 b(returned) g(a) j
(non-zero) d(info,) i(whose) 533 3724 y(*) 1289 b(value) 46
b(was) h(printed) f(to) h(stderr.) 533 3931 y(*) 477
b(Any) 47 b(processor) e(with) i(a) g(negative) f(INFO) h(stops) f
(program) g(execution.) 533 4139 y(*) 477 b(If) 47 b(-50) g(<=) g(INFO)
g(<) h(0,) f(then) f(bad) h(data) g(was) g(passed) f(to) h(this) g
(routine) 533 4242 y(*) 1432 b(and) 47 b(no) g(attempt) f(is) h(made) f
(to) i(make) e(sure) h(that) 533 4346 y(*) 1432 b(INFO) 46
b(is) i(the) e(same) h(on) g(all) g(processors.) 533
4554 y(*) 477 b(All) 47 b(other) f(INFO) 286 b(INFO) 46
b(should) g(be) i(the) f(same) f(on) h(all) g(proces-) 390
4658 y(sors) g(in) 533 4761 y(*) 1432 b(mapA,B,Z.) 93
b(If) 47 b(this) g(routine) e(calls) i(a) g(routine) 533
4865 y(*) 1432 b(which) 46 b(returns) g(a) h(negative) f(info,) g(then)
h(info) 533 4969 y(*) 1432 b(may) 47 b(not) g(be) g(the) g(same) f(on) h
(all) g(processors.) 533 5073 y(*) 1432 b(This,) 46 b(however,) g
(should) g(never) g(happen.) 533 5176 y(*) 239 b
(-----------------------) o(---) o(----) o(----) o(---) o(----) o(----)
o(---) o(----) o(----) o(---) o(---) 390 5280 y(-------) p
90 rotate dyy eop
%%Page: 34 35
34 34 bop Fs 150 -116 a(34) 3256 b(P) m(eIGS) p Fk 533
299 a(*/) p Fr 150 549 a(4.4) 68 b(Lev) l(el) 46 b(I) t(I) f
(Subroutines) p Fs 275 739 a(This) 39 b(section) j(describ) s(es) e
(the) i(lev) m(el) g(2) g(subroutines.) 72 b(As) 42 b(of) g(this) f
(writing) e(w) m(e) k(presen) m(t) e(a) h(brief) 150
849 y(summary) 23 b(of) h(what) g(eac) m(h) h(routine) e(do) s(es.) 39
b(These) 24 b(routines) e(are) j(called) e(in) g(supp) s(ort) f(of) j
(the) f(eigensystem) 150 958 y(solv) m(ers) 30 b(but) g(they) g(can) h
(b) s(e) f(useful) e(for) j(other) f(calculations) g(to) s(o.) 275
1090 y(Man) m(y) 38 b(of) h(the) f(lev) m(el) g(I) s(I) f(routines) g
(do) h(little) e(or) j(no) f(c) m(hec) m(king) g(of) h(input) d(data,)
41 b(hence) d(are) g(not) h(as) 150 1200 y(robust) 32
b(against) g(input) e(errors) i(as) h(the) f(lev) m(el) g(I) g
(routines.) 46 b(Also,) 32 b(some) h(of) f(the) h(routines) e(describ) s
(ed) f(in) 150 1310 y(this) 38 b(section) p Fo 38 w(cannot) p
Fs 40 w(curren) m(tly) f(b) s(e) i(called) e(directly) h(from) g
(fortran) g(\(only) h(b) s(ecause) f(the) h(fortran-C) 150
1419 y(in) m(terface) 31 b(routines) e(ha) m(v) m(e) j(not) e(y) m(et) i
(b) s(een) e(tested\).) 275 1551 y(The) 36 b(lev) m(el) g(I) s(I) g
(routines) g(whic) m(h) f(can) j(curren) m(tly) d(b) s(e) i(called) f
(from) g(fortran) g(are:) 54 b(b) s(ortho,) 38 b(mxm25,) 150
1661 y(mxm5x,) 30 b(mxm88,) h(ortho,) g(pstebz,) g(resid,) e(residual,)
g(and) g(tresid.) 275 1793 y(The) 35 b(memory) g(requiremen) m(ts) g
(for) h(the) f(lev) m(el) h(I) s(I) f(routines) f(are) i(desrib) s(ed) e
(in) g(the) i(headers) f(for) h(the) 150 1902 y(v) -5
b(arious) 30 b(routines.) 40 b(The) 30 b(listed) f(memory) i
(requiremen) m(ts) f(are) h(b) s(eliev) m(ed) e(to) i(b) s(e) f(as) h
(large) g(or) g(somewhat) 150 2012 y(larger) k(than) h(what) f(the) h
(v) -5 b(arious) 35 b(routines) f(actually) i(use.) 56
b(Ho) m(w) m(ev) m(er,) 39 b(this) c(has) g(not) h(curren) m(tly) f(b) s
(een) 150 2122 y(tested.) 275 2254 y(Finally) -8 b(,) 32
b(b) s(efore) h(calling) e(an) m(y) i(of) h(P) m(eIGS) f(routines,) g
(except) h(the) f(lev) m(el) g(I) g(routines,) g(one) p
Fo 33 w(m) m(ust) g(call) 150 2363 y(the) e(fortran) f(routine) h
(mxinit\(\)) g(\(mxinit) p 1600 2363 28 5 v 34 w(\(\)) g(from) f(C\)) p
Fs 30 w(to) h(initialize) d(the) i(comm) m(unication) g(pac) m(k) -5
b(age.) p Fg 150 2564 a(4.4.1) 63 b(Choleski) 41 b(F) -10
b(actorization) 40 b(of) h(P) m(ositiv) m(e) f(De\014nite) h(Symmetric)
464 2689 y(Matrix) p Fs 275 2879 a(This) e(subroutine) g(p) s(erforms) g
(a) j(submatrix) d(Choleski) g(factorization) j(of) f(a) h(symmetric) e
(p) s(ositiv) m(e) 150 2989 y(matrix) 24 b(with) e(a) j(column) e(wrap)
g(using) g(a) h(list) f(of) i(pro) s(cessors.) 38 b(This) 22
b(co) s(de) j(originated) e(from) h(Mik) m(e) g(Heath) p
Fm 150 3098 a(\(Geist,) 29 b(G.) f(A.,) h(and) e(M.) h(T.) f(Heath,) i
(\\Matrix) f(F) -8 b(actorization) 30 b(on) d(a) h(Hyp) s(ercub) s(e) e
(Multipro) s(cessor,") h(in) 150 3208 y(Hyp) s(ercub) s(e) j(Multipro) s
(cessors) f(1986,) k(SIAM,) e(Philadelphia,) d(1986,) 33
b(pp.) 42 b(161-180\)) p Fs(.) k(W) -8 b(e) 32 b(mo) s(di\014ed) d(it)
150 3317 y(for) h(our) g(purp) s(oses) f(and) g(are) i(fully) d(resp) s
(onsible) g(for) i(an) m(y) g(bugs.) 275 3450 y(The) f(C) h(syn) m(tax)
h(is:) p Fk 390 3576 a(void) 47 b(choleski\() e(n,) i(vecA,) f(mapA,) h
(iscratch,) e(scratch,) h(info) g(\)) 629 3783 y(Integer) 570
b(*n,) 47 b(*mapA,) f(*iscratch,) f(*info;) 629 3991
y(DoublePrecision) 425 b(*scratch;) 629 4198 y(DoublePrecision) 377
b(**vecA;) 485 4406 y(/*) 533 4510 y(*) 95 b
(==========================) o(===) o(====) o(====) o(===) o(====) o
(====) o(===) o(====) o(====) o(===) o(====) 533 4821
y(*) g(The) 47 b(original) f(code) g(is) i(due) f(to) g(Mike) f(Heath.)
94 b(George) 46 b(Fann) 533 4925 y(*) 95 b(bastardized) 45
b(it) i(for) g(our) g(code.) 94 b(We) 47 b(thank) g(Mike) 533
5029 y(*) 95 b(for) 47 b(his) g(generosity.) 93 b(Any) 47
b(bugs) f(and) h(problems) f(are) h(introduced) 533 5132
y(*) 95 b(by) 48 b(us.) p 90 rotate dyy eop
%%Page: 35 36
35 35 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(35) p Fk 533 299 a(*) 95 b(Currently,) 45
b(this) i(procedure) e(only) i(handles) f(the) h(case) f(where) h(the)
533 403 y(*) 95 b(lower) 47 b(triangular) e(part) h(of) i(A) f(is) g
(distributed) e(to) i(processors) e(by) i(columns.) 533
714 y(*) 95 b(Purpose) 533 818 y(*) g(=======) 533 1025
y(*) g(choleski) 46 b(computes) f(the) i(Cholesky) f(factorization) e
(of) j(a) h(real) e(symmetric) 533 1129 y(*) 95 b(positive) 46
b(definite) f(matrix) i(A) g(in) g(packed) f(storage) g(format.) 533
1337 y(*) 95 b(The) 47 b(factorization) d(has) j(the) g(form) 533
1440 y(*) 239 b(A) 47 b(=) g(L) 96 b(*) 47 b(L') 533
1544 y(*) 95 b(where) 47 b(L) g(is) g(lower) g(triangular.) 92
b(On) 47 b(output) f(the) h(matrix) f(A) i(is) f(overwrit-) 390
1648 y(ten) g(by) 533 1752 y(*) 143 b(the) 47 b(Choleski) f(factor) g
(L.) 533 2063 y(*) 95 b(Arguments) 533 2167 y(*) g(=========) 533
2374 y(*) g(In) 48 b(the) e(following) g(let:) 533 2582
y(*) 239 b(me) f(=) 47 b(The) g(id) g(of) g(this) g(processor) 533
2790 y(*) 239 b(nvecsA) 46 b(=) h(The) g(number) f(of) h(columns) f(of)
h(A) h(owned) e(by) h(this) g(processor.) 533 2893 y(*) 668
b(In) 47 b(particular,) e(nvecsA) h(=) i(count_list\(me,) 43
b(mapA,) k(n\).) 533 3101 y(*) 239 b(nprocsA) 45 b(=) j(Number) e(of) h
(distinct) f(processor) f(id's) i(in) g("mapA".) 93 b(In) 533
3205 y(*) 716 b(particular,) 45 b(nprocs) h(=) h(reduce_list\() e(n,) i
(mapA,) f(iscratch) g(\)) 533 3412 y(*) 95 b(n) 334 b(\(input\)) 46
b(\(Integer) g(*\)) h(scaler) 533 3516 y(*) 477 b(The) 47
b(order) f(of) i(the) f(matrix) f(A.) 95 b(n) 47 b(>=) g(0.) 533
3724 y(*) 95 b(vecA) 190 b(\(input/output\)) 44 b(\(DoublePrecision) f
(**\)) k(array,) f(length) h(\(nvecsA\)) 533 3827 y(*) 477
b(On) 47 b(entry,) f(the) h(portion) f(of) h(the) g(lower) g
(triangular) e(part) h(of) h(the) 533 3931 y(*) 477 b(symmetric) 45
b(matrix) i(A) g(owned) f(by) i(this) e(processor.) 533
4139 y(*) 477 b(vecA[i]) 46 b(points) g(to) h(an) g(array) g
(containing) e(the) i(lower) f(triangular) 533 4242 y(*) 477
b(part) 47 b(of) g(the) g(i-th) g(column) f(of) h(A) g(which) g(is) g
(owned) f(by) h(this) 533 4346 y(*) 477 b(processor,) 45
b(i) j(=) f(0) h(to) f(nvecsA.) 533 4554 y(*) 477 b(On) 47
b(exit,) g(if) g(*info) f(=) i(0,) f(the) g(factor) f(L) h(from) g(the)
g(Cholesky) 533 4658 y(*) 477 b(factorization) 44 b(A) k(=) f
(L*L^\(T\).) 533 4865 y(*) 95 b(mapA) 190 b(\(input\)) 46
b(\(Integer) g(*\)) h(array,) f(length) g(\(*n\)) 533
4969 y(*) 477 b(mapA[i]) 46 b(=) h(the) g(id) h(of) f(the) g(processor)
e(which) h(owns) h(column) f(i) h(of) h(A,) 533 5073
y(*) 477 b(i) 48 b(=) f(0) h(to) f(*n) g(-) g(1.) 533
5280 y(*) 95 b(iscratch) f(\(integer) 45 b(workspace\)) g(\(Integer) h
(*\)) h(array,) f(length) g(\(2) h(n) h(+) f(1\)) p 90 rotate
dyy eop
%%Page: 36 37
36 36 bop Fs 150 -116 a(36) 3256 b(P) m(eIGS) p Fk 533
403 a(*) 95 b(scratch) 142 b(\(DoublePrecision) 43 b(workspace\)) i
(\(DoublePrecision) e(*\)) 48 b(array,) e(length) g(\(n+1\)) 533
610 y(*) 573 b(scratch) 45 b(must) i(contain) f(at) h(least) f(bufsiz) h
(bytes) f(\(see) h(cmbbrf.h\)) 533 922 y(*) 95 b(info) 286
b(\(output\)) 45 b(\(Integer) h(*\)) h(scaler) 533 1025
y(*) 573 b(=) 47 b(0:) g(successful) e(exit) 533 1129
y(*) 573 b(<) 47 b(0:) g(if) g(info) g(=) h(-k,) e(the) h(k-th) g
(argument) f(had) g(an) i(illegal) d(value) 533 1233
y(*) 573 b(>) 47 b(0:) g(if) g(info) g(=) h(k,) f(1<=) g(k) g(<=) g(n,)
g(the) g(leading) f(minor) h(of) g(order) 533 1337 y(*) 811
b(k) 48 b(is) f(not) g(positive) e(definite,) h(and) h(the) f
(factorization) 533 1440 y(*) 811 b(could) 47 b(not) g(be) g
(completed.) 533 1648 y(*) 95 b(==========================) o(===) o
(====) o(====) o(===) o(====) o(====) o(===) o(====) o(====) o(===) o
(====) 533 1752 y(*/) p Fg 150 1971 a(4.4.2) 63 b(In) m(v) m(erse) 40
b(of) h(Lo) m(w) m(er) f(T) -10 b(riangular) 41 b(Matrix) p
Fs 275 2162 a(The) 36 b(subroutine) p Fo 35 w(in) m(v) m(erseL) p
Fs 38 w(computes) i(the) f(in) m(v) m(erse) g(of) g(a) h(lo) m(w) m(er)
f(triangular) f(matrix) g(in) g(column) 150 2272 y(wrapp) s(ed) k
(form\(according) h(to) h(a) g(list\).) 74 b(On) 40 b(output) h(the) h
(input) e(matrix) h(is) f(o) m(v) m(erwritten) i(with) f(its) 150
2382 y(output.) 275 2515 y(The) 29 b(C) h(syn) m(tax) h(is:) p
Fk 390 2642 a(void) 47 b(inverseL) e(\() j(msize,) e(col,) g(map,) h
(iwork,) f(buffer,) g(info\)) 629 2746 y(Integer) f(*msize,) h(*map,) h
(*iwork,) e(*info;) 629 2849 y(DoublePrecision) e(**col,) j(*buffer;)
629 3057 y(/*) 724 3161 y(This) h(routine) f(computes) f(the) i
(inverse) f(of) h(a) g(lower) g(triangular) e(matrix.) 724
3264 y(On) i(output,) f(the) h(lower) f(triangular) f(matrix) h(is) i
(overwritten) c(by) k(its) e(inverse.) 724 3368 y(The) h(matrix) f(is) h
(assume) f(to) i(be) f(column) f(wrapped) g(and) h(distributed) d
(according) 724 3472 y(to) j(the) g(array) g(map.) 94
b(Thus,) 46 b(map[i]) g(=) i(processor) d(id) i(which) g(holds) f
(column) 724 3576 y(i) i(of) f(the) g(matrix.) 724 3783
y(Arguments:) 724 3991 y(msize) f(=) i(\(input\)) e(integer,) f(size) i
(of) g(the) g(matrix) 724 4198 y(col) g(=) g(\(input/1-D) e(array) i
(of) g(pointers) f(to) h(DoublePrecision) c(numbers\)) 629
4302 y(col[j]) j(->) h(the) g(address) f(of) h(the) g(j-th) f(vector) g
(that) h(this) g(processor) e(owns) 724 4510 y(map) i(=) g
(\(input/integer) d(array\)) i(integer) g(array,) g(length) g(n,) i
(such) e(that) h(for) 1058 4614 y(the) g(i-th) g(column,) 629
4717 y(map[i]) f(=) h(real) g(processor) e(id) i(holding) f(this) h
(column) 724 4925 y(iscratch) f(=) h(\(scratch/integer\)) c(integer) j
(scratch) g(space) g(of) h(size) g(nprocs) 724 5132 y(buffer) f(=) i
(\(scratch\)) d(DoublePrecision) f(precision) h(array) 724
5340 y(info) 94 b(=) 48 b(\(output/integer\)) p 90 rotate
dyy eop
%%Page: 37 38
37 37 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(37) p Fk 1106 299 a(if) 47 b(info) g(==) g(0) g
(normal) 1106 403 y(if) g(info) g(==) g(i) g(>) h(0) f(then) g(the) g
(i-th) f(diagonal) g(element) 1010 506 y(\() i(in) f(Fortran) f
(notation) f(\)) j(is) f(smaller) f(than) 1392 610 y(dlamch\("s"\),) f
(the) i(safe) f(inverse) g(limit:) g(overflow) 1392 714
y(may) h(have) g(occurred.) 629 818 y(*/) p Fg 150 1037
a(4.4.3) 63 b(Matrix) 40 b(Multiplication) p Fs 275 1227
a(There) 29 b(are) i(sev) m(eral) f(di\013eren) m(t) g(matrix) f(m) m
(ultiplication) f(routines) h(dep) s(ending) e(on) j(ho) m(w) h(the) f
(data) h(is) 150 1337 y(distributed) 22 b(and) i(the) h(shap) s(e) f
(of) h(the) h(matrix.) 38 b(The) 24 b(F) -8 b(ortran) 26
b(77) g(calling) d(syn) m(tax) i(is) f(giv) m(en) h(in) f(v) m(ery) h
(little) 150 1447 y(detail.) 49 b(Most) 34 b(of) f(the) h(detail) e
(and) h(descriptions) e(of) i(the) h(routines) e(are) i(included) c
(with) i(the) i(C) e(calling) 150 1556 y(syn) m(tax.) 275
1689 y(The) d(F) -8 b(ortran) 31 b(77) h(syn) m(tax) f(is:) p
Fk 629 1816 a(SUBROUTINE) 45 b(mxm25) h(\() h(n1,) g(n2,) g(rowQ,) g
(mapQ,) f(m,) h(colW,) g(mapW,) f(colZ,) g(iwork,) g(work\)) 629
1920 y(INTEGER) 475 b(n1,) 47 b(n2,) g(mapQ\(*\),) e(m,) j(mapW\(*\),) d
(iwork\(*\)) 629 2023 y(Double) h(Precision) f(rowQ\(*\),) h
(colW\(*\),) f(colZ\(*\),) h(work\(*\)) 629 2150 y(SUBROUTINE) f
(mxm5x\() h(n,) h(rowU,) f(mapU,) h(m,) g(colF,) f(mapF,) h(iscratch,) e
(scratch\)) 629 2254 y(Integer) 475 b(n,) 47 b(mapU\(*\),) f
(mapF\(*\),) 93 b(m,) 47 b(iscratch\(*\)) 629 2358 y(Double) f
(Precision) f(colF\(*\),) h(rowU\(*\),) f(scratch\(*\)) 629
2485 y(SUBROUTINE) g(mxm88) h(\() h(n,) h(colQ,) e(mapQ,) g(m,) i
(colW,) e(mapW,) g(iwork,) g(work) h(\)) 629 2589 y(Integer) 475
b(n,) 47 b(mapQ\(*\),) f(m,) h(mapW\(*\),) e(iwork\(*\)) 629
2692 y(Double) h(Precision) f(colQ\(*\),) h(colW\(*\),) f(work\(*\)) 390
2900 y(C) 95 b(Note) 47 b(that) f(the) h(C) h(routine) e(mxm88) g(has) h
(one) g(more) f(argument,) g(iptr,) g(than) h(the) 390
3004 y(C) 95 b(Fortran) 46 b(77) h(call) g(syntax) f(listed) g(here.) p
Fs 275 3136 a(The) 28 b(input) f(argumen) m(ts) j(for) e(the) i(ab) s
(o) m(v) m(e) g(routines) e(are) h(the) h(same) f(as) g(in) f(the) h(C)
g(co) s(des) g(listed) f(b) s(elo) m(w) 150 3246 y(except) h(that) f
(one) g(c) m(hanges) h(the) f(argumen) m(ts) g(of) g(t) m(yp) s(e) p
Fk 28 w(") p Fs(1-D) h(arra) m(y) g(of) f(p) s(oin) m(ters) e(to) j
(DoublePrecision) p Fk(") p Fs(,) 150 3356 y(i.e.,) k(ro) m(wQ,) f
(colW,) h(etc,) g(to) g(t) m(yp) s(e) p Fk 32 w(") p
Fs(1-D) g(arra) m(y) g(of) f(double) e(precision) h(n) m(um) m(b) s
(ers) p Fk(") p Fs 30 w(and) g(store) i(the) f(data) 150
3465 y(in) 26 b(these) j(arra) m(ys) f(using) e(the) i(pac) m(k) m(ed) h
(storage) g(format) f(describ) s(ed) e(previously) -8
b(.) 38 b(The) 27 b(C) h(co) s(de) g(describ) s(es) 150
3575 y(arra) m(ys) j(of) f(length) g(n) g(with) f(indices) f(of) j(0) g
(to) g(n-1,) g(for) f(fortran) g(usage) h(the) f(indices) f(should) f
(b) s(e) i(1) h(to) g(n.) 275 3708 y(The) 23 b(double) g(precision) f
(w) m(ork) j(arra) m(ys) f(for) g(the) h(F) -8 b(ortran) 25
b(77) g(co) s(des) f(m) m(ust) g(b) s(e) g(somewhat) g(larger) g(than)
150 3817 y(listed) 34 b(b) s(elo) m(w) h(in) f(the) i(C) f(calling) f
(syn) m(tax.) 57 b(In) 35 b(particular,) g(let) g(ME,) h(b) s(e) f(the)
h(id) e(of) i(a) g(pro) s(cessor,) h(and) 150 3927 y(let) 30
b(n) m(v) m(ecsX) h(b) s(e) e(the) h(n) m(um) m(b) s(er) f(of) h(en) m
(tries) g(in) e(arra) m(y) j(mapX) e(equal) h(to) g(ME,) h(where) e(X) h
(=) g(Q,W,U,) h(or) e(F.) 150 4036 y(Then,) h(on) g(pro) s(cessor) g
(ME) g(the) h(extra) g(memory) f(requiremen) m(ts) g(for) g(the) g(F) -8
b(ortran) 31 b(77) h(routines) d(are:) p Fq 199 4169
a(\000) p Fs 60 w(MXM25:) 42 b(increase) 31 b(size) f(of) g(w) m(ork) h
(b) m(y) f(n) m(v) m(ecsQ) p Fk(+) p Fs(n) m(v) m(ecsW) p
Fk(+) p Fs(n) m(v) m(ecsZ) p Fq 199 4302 a(\000) p Fs
60 w(MXM5x:) 42 b(increase) 30 b(size) g(of) h(scratc) m(h) g(b) m(y) g
(n) m(v) m(ecsU) p Fk(+) p Fs(n) m(v) m(ecsF) p Fk(+) p
Fs(2) p Fq 199 4435 a(\000) p Fs 60 w(MXM88:) 42 b(increase) 31
b(size) f(of) g(w) m(ork) h(b) m(y) f(n) m(v) m(ecsQ) p
Fk(+) p Fs(2*n) m(v) m(ecsW) p Fk(+) p Fs(3) 275 4590
y(The) f(C) h(syn) m(tax) h(is:) p Fk 390 4717 a(void) 47
b(mxm25) f(\() h(n1,) g(n2,) g(rowQ,) g(mapQ,) f(m,) h(colW,) g(mapW,) f
(colZ,) g(iwork,) g(work\)) 629 4821 y(Integer) f(*n1,) i(*n2,) g
(*mapQ,) f(*m,) h(*mapW,) f(*iwork;) 629 4925 y(DoublePrecision) d
(**rowQ,) j(**colW,) g(**colZ,) g(*work;) 390 5132 y
(/***********************) o(****) o(****) o(***) o(****) o(****) o
(***) o(****) o(****) o(***) o(****) o(**) 438 5236 y(*) 438
5340 y(*) h(Subroutine) e(mxm25) p 90 rotate dyy eop
%%Page: 38 39
38 38 bop Fs 150 -116 a(38) 3256 b(P) m(eIGS) p Fk 438
299 a(*) 533 403 y(This) 47 b(subroutine) e(does) h(the) h(matrix) f
(multiplication) e(Z) k(<-) f(Q*W) 533 610 y(where) g(matrix) f(Q) h
(is) g(a) h(n1) f(x) g(n2) h(general) d(matrix) h(in) i(packed) e
(storage) g(format,) 820 714 y(distributed) e(by) j(rows,) 820
922 y(matrix) f(W) h(is) g(a) h(general) e(n2) h(x) g(m) h(matrix) e
(in) h(packed) f(storage) g(format,) 820 1025 y(distributed) e(by) j
(columns.) 820 1233 y(and) f(matrix) h(Z) g(is) g(the) g(n1) g(x) h(m) f
(product) f(Q*W,) h(distributed) d(the) j(same) g(as) g(W.) 533
1440 y(In) g(this) g(version) f(we) h(assume) f(that) h(Q) g(and) g(W) h
(share) e(the) h(same) f(processors) 533 1544 y(\() i(perhaps) d
(different) h(data) g(distributions) f(\)) 533 1752 y(It) i(is) h(ok) f
(to) g(have) g(colZ) f(=) i(colW.) 94 b(However,) 45
b(in) i(this) 533 1856 y(case) g(each) f(colZ[i]=colW[i]) e(must) j
(point) f(to) h(a) h(vector) e(of) 533 1959 y(length) g(=) i(MAX\() e
(n1,) h(n2) g(\).) 533 2167 y(ARGUMENTS) 533 2271 y(---------) 533
2374 y(In) g(the) g(following:) 629 2582 y(INTEGER) 475
b(=) 47 b("pointer) f(to) h(Integer") 629 2686 y(DOUBLE) f(PRECISION) f
(=) i("pointer) f(to) h(DoublePrecision") 629 2893 y(me) 238
b(=) 47 b(this) g(processor's) e(id) i(\(=) g(mxmynd_\(\)\)) 629
2997 y(nprocs) f(=) h(number) f(of) h(allocated) f(processors) f(\() i
(=) h(mxnprc_\(\)\)) 629 3101 y(nvecsW) e(=) h(number) f(of) h(entries)
f(in) h(mapW) g(equal) f(to) i(me) 1249 3205 y(\(=) f(count_list\() e
(me,) i(mapW,) f(m) i(\)\)) 629 3308 y(nvecsQ) e(=) h(number) f(of) h
(entries) f(in) h(mapQ) g(equal) f(to) i(me) 1249 3412
y(\(=) f(count_list\() e(me,) i(mapQ,) f(n1) h(\)\)) 629
3516 y(nvecsQ_max) e(=) i(maximum) f(number) g(of) h(entries) f(in) h
(mapQ) g(equal) f(to) h(i,) 1249 3620 y(i) h(=) f(0) g(to) h(nprocs-1)
1249 3724 y(\(=) f(max) g(over) g(i) g(of) g(count_list\() e(i,) i
(mapQ,) g(n1) g(\)\)) 629 3827 y(sDP) 190 b(=) 47 b(sizeof\() f
(DoublePrecision) e(\)) 533 4035 y(n1) j(.....) g(\(input\)) f(INTEGER)
963 4139 y(The) h(number) f(of) h(rows) g(in) g(matrix) f(Q) 533
4346 y(n2) h(.....) g(\(input\)) f(INTEGER) 963 4450
y(The) h(number) f(of) h(columns) f(in) h(matrix) f(Q) 963
4554 y(and) h(the) g(number) f(of) h(rows) f(in) i(matrix) e(W) 533
4761 y(rowQ) h(...) g(\(input\)) f(array) g(of) h(pointers) f(to) h
(DoublePrecision,) 1345 4865 y(length) f(\(nvecsQ\)) 963
4969 y(The) h(part) f(of) h(matrix) g(Q) g(owned) f(by) i(this) e
(processer) f(stored) 963 5073 y(in) i(packed) f(format,) g(i.e.,) g
(rowQ[i]) g(points) g(to) h(the) g(start) 963 5176 y(of) g(the) g(i-th)
f(row) h(of) h(Q) 963 5280 y(owned) e(by) h(this) g(processor,) e(i) i
(=) h(0) f(to) g(nvecsQ-1.) p 90 rotate dyy eop
%%Page: 39 40
39 39 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(39) p Fk 533 403 a(mapQ) 47 b(...) g(\(input\)) f
(INTEGER) f(array,) h(length) h(\(n1\)) 963 506 y(The) g(i-th) f(row) h
(of) g(Q) h(is) f(owned) f(by) i(processor) 963 610 y(mapQ[i],) d(i) j
(=) f(0) h(to) f(n1-1.) 533 818 y(m) h(......) e(\(input\)) g(INTEGER)
963 922 y(The) h(number) f(of) h(columns) f(in) h(W.) 533
1129 y(colW) g(...) g(\(input\)) f(array) g(of) h(pointers) f(to) h
(DoublePrecision,) 1679 1233 y(length) f(\(nvecsW\)) 963
1440 y(The) h(part) f(of) h(matrix) g(W) g(owned) f(by) i(this) e
(processer) f(stored) 963 1544 y(in) i(packed) f(format) g(by) h
(columns,) f(i.e.,) g(colW[i]) g(points) 963 1648 y(to) h(the) g(first)
f(element) g(of) h(the) g(i-th) g(column) f(of) h(W) 963
1752 y(owned) f(by) h(this) g(processor,) e(i) i(=) h(0) f(to) g
(nvecsW-1.) 533 1959 y(mapW) g(...) g(\(input\)) f(INTEGER) f(array,) h
(length) h(\(m\)) 963 2063 y(The) g(i-th) f(column) g(of) i(W) f(is) 963
2167 y(owned) f(by) h(processor) f(mapW[i],) f(i) j(=) f(0) g(to) h
(m-1.) 533 2374 y(colZ) f(...) g(\(output\)) e(array) i(of) g(pointers)
e(to) j(DoublePrecision,) 1392 2478 y(length) e(\(nvecsW\)) 1010
2686 y(The) h(result) f(matrix) h(Z) g(=) g(Q) h(*) f(W) h(stored) e
(identical) f(to) i(W.) 1010 2893 y(It) h(is) f(ok) g(to) g(have) g
(colZ) f(=) i(colW.) 94 b(However,) 46 b(in) h(this) 1010
2997 y(case) g(each) g(colZ[i]=colW[i]) c(must) k(point) f(to) i(a) f
(vector) f(of) 1010 3101 y(length) h(=) g(MAX\() g(n1,) g(n2) g(\).) 533
3308 y(iwork) g(..) g(\(workspace\)) d(INTEGER) i(array,) g(length) g
(\() i(3) f(*) h(n1) f(+) g(2) h(*) f(m) h(\)) 533 3516
y(work) f(...) g(\(workspace\)) d(DOUBLE) j(PRECISION) e(array,) 1535
3620 y(length) i(\() g(maximum) f(\() h(n1) g(+) h(m,) f(\(nvecsW) f(+)
h(2) h(*) f(nvecsQ_max\)) e(*) i(n2) h(\)) 390 3724 y(*/) 390
3887 y(void) f(mxm5x\() f(n,) h(rowU,) f(mapU,) h(m,) g(colF,) f(mapF,)
h(iscratch,) e(scratch\)) 629 3991 y(Integer) g(*n,) i(*mapU,) f
(*mapF,) 94 b(*m,) 47 b(*iscratch;) 629 4095 y(DoublePrecision) c
(**colF,) j(**rowU,) g(*scratch;) 390 4302 y(/***********************) o
(****) o(****) o(***) o(****) o(****) o(***) o(****) o(****) o(***) o
(****) o(**) 438 4406 y(*) 438 4510 y(*) h(Subroutine) e(mxm5x) 438
4614 y(*) 533 4717 y(This) i(subroutine) e(does) h(the) h(matrix) f
(multiplication) e(F) k(<-) f(U) g(*) h(F) 533 4925 y(where) f(U) g(is)
g(a) h(n) f(x) h(n) f(upper) f(trianguler) f(matrix) h(in) i(packed) e
(storage) g(format,) 533 5029 y(and) h(row) g(distributed,) 533
5132 y(and) g(matrix) f(F) i(is) f(a) g(general) f(n) i(x) f(m) g
(matrix) g(distributed) d(by) j(columns.) 533 5340 y(ARGUMENTS) p
90 rotate dyy eop
%%Page: 40 41
40 40 bop Fs 150 -116 a(40) 3256 b(P) m(eIGS) p Fk 533
299 a(---------) 533 403 y(In) 47 b(the) g(following:) 629
610 y(INTEGER) 475 b(=) 47 b("pointer) f(to) h(Integer") 629
714 y(DOUBLE) f(PRECISION) f(=) i("pointer) f(to) h(DoublePrecision")
629 922 y(me) 238 b(=) 47 b(this) g(processor's) e(id) i(\(=) g
(mxmynd_\(\)\)) 629 1025 y(nprocs) f(=) h(number) f(of) h(allocated) f
(processors) f(\() i(=) h(mxnprc_\(\)\)) 629 1129 y(nvecsU) e(=) h
(number) f(of) h(entries) f(in) h(mapU) g(equal) f(to) i(me) 1058
1233 y(\(=) f(count_list\() e(me,) i(mapU,) f(n) i(\)\)) 629
1337 y(neleU_max) d(=) i(maximum) f(number) g(of) h(elements) f(of) h
(U) h(owned) e(by) h(any) 1201 1440 y(processor.) 1201
1544 y(\(=) h(max) e(over) h(i) h(of) f(ci_size_\() e(i,) i(n,) g
(mapU\)) g(\)) 629 1648 y(nvecsF) f(=) h(number) f(of) h(entries) f(in)
h(mapF) g(equal) f(to) i(me) 1058 1752 y(\(=) f(count_list\() e(me,) i
(mapF,) f(m) i(\)\)) 629 1856 y(sDP) 190 b(=) 47 b(sizeof\() f
(DoublePrecision) e(\)) 533 2063 y(n) k(......) e(\(input\)) g(INTEGER)
963 2167 y(The) h(number) f(of) h(rows) g(and) f(columns) g(of) h(U,) h
(and) f(the) f(number) 963 2271 y(of) h(rows) g(of) g(F.) 533
2478 y(rowU) g(...) g(\(input\)) f(array) g(of) h(pointers) f(to) h
(DoublePrecision,) 1345 2582 y(length) f(\(nvecsU\)) 963
2686 y(The) h(part) f(of) h(matrix) g(U) g(owned) f(by) i(this) e
(processer) f(stored) 963 2790 y(in) i(packed) f(format,) g(i.e.,) g
(rowU[i]) g(points) g(to) h(the) g(diagonal) 963 2893
y(element) f(of) h(the) g(i-th) f(row) h(of) g(U) 963
2997 y(owned) f(by) h(this) g(processor,) e(i) i(=) h(0) f(to) g
(nvecsU-1.) 533 3205 y(mapU) g(...) g(\(input\)) f(INTEGER) f(array,) h
(length) h(\(n\)) 963 3308 y(The) g(i-th) f(row) h(of) g(U) h(is) 963
3412 y(owned) e(by) h(processor) f(mapU[i],) f(i) j(=) f(0) g(to) h
(n-1.) 533 3620 y(m) g(......) e(\(input\)) g(INTEGER) 963
3724 y(m) h(is) g(the) g(number) f(of) i(columns) d(in) j(F.) 533
3931 y(colF) f(...) g(\(input/output\)) d(array) i(of) h(pointers) f
(to) h(DoublePrecision,) 1679 4035 y(length) f(\(nvecsF\)) 963
4242 y(On) h(Entry:) 1058 4346 y(The) g(part) g(of) g(matrix) f(F) h
(owned) g(by) g(this) g(processer) e(stored) 1058 4450
y(in) i(packed) f(format) h(by) g(columns,) e(i.e.,) i(colF[i]) e
(points) 1058 4554 y(to) i(the) g(first) g(element) e(of) j(the) f
(i-th) f(column) g(of) h(F) 1058 4658 y(owned) g(by) g(this) f
(processor,) f(i) j(=) f(0) h(to) f(nvecsF-1.) 963 4865
y(On) g(Exit:) 1058 4969 y(The) g(result) f(matrix) g(U) i(*) f(F) h
(stored) e(in) h(the) g(same) f(manner) h(as) 1058 5073
y(F) h(on) f(entry.) 533 5280 y(mapF) g(...) g(\(input\)) f(INTEGER) f
(array,) h(length) h(\(m\)) p 90 rotate dyy eop
%%Page: 41 42
41 41 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(41) p Fk 963 299 a(The) 47 b(i-th) f(column) g(of)
i(F) f(is) 963 403 y(owned) f(by) h(processor) f(mapF[i],) f(i) j(=) f
(0) g(to) h(m-1.) 533 610 y(iscratch) e(..) h(\(workspace\)) e(INTEGER)
g(array,) i(length) f(\() h(3*n+2*m) f(+1) h(\)) 533
818 y(scratch....) e(\(workspace\)) g(DOUBLE) h(PRECISION) f(array,)
1535 922 y(length) i(\() g(maximum) f(\() h(n+m,) g(mxlbuf_\(\)/sDP) d
(+) k(1,) 2442 1025 y(\(nvecsF) e(*) i(n) f(+) g(2) h(*) f(neleU_max) f
(\)) 390 1129 y(*/) 390 1293 y(void) h(mxm88) f(\() h(n,) h(colQ,) e
(mapQ,) g(m,) i(colW,) e(mapW,) g(iwork,) g(work,) h(iptr\)) 629
1396 y(Integer) e(*n,) i(*mapQ,) f(*m,) h(*mapW,) f(*iwork;) 629
1500 y(DoublePrecision) d(**colQ,) j(**colW,) g(*work,) g(**iptr;) 390
1708 y(/***********************) o(****) o(****) o(***) o(****) o(****)
o(***) o(****) o(****) o(***) o(****) o(**) 438 1812
y(*) 438 1915 y(*) h(Subroutine) e(mxm88) 438 2019 y(*) 533
2123 y(This) i(subroutine) e(does) h(the) h(matrix) f(multiplication) e
(W) k(<-) f(Q) g(*) h(W) 533 2330 y(where) f(Q) g(is) g(a) h(n) f(x) h
(n) f(symmetric) e(matrix) h(in) i(packed) e(storage) f(format,) 533
2434 y(and) i(row) g(\(or) g(equivalently) d(column\)) i(distributed,)
533 2538 y(and) h(matrix) f(W) i(is) f(a) g(general) f(n) i(x) f(m) g
(matrix) g(distributed) d(by) j(columns.) 533 2746 y(ARGUMENTS) 533
2849 y(---------) 533 2953 y(In) g(the) g(following:) 629
3161 y(INTEGER) 475 b(=) 47 b("pointer) f(to) h(Integer") 629
3264 y(DOUBLE) f(PRECISION) f(=) i("pointer) f(to) h(DoublePrecision")
629 3472 y(me) 238 b(=) 47 b(this) g(processor's) e(id) i(\(=) g
(mxmynd_\(\)\)) 629 3576 y(nprocs) f(=) h(number) f(of) h(allocated) f
(processors) f(\() i(=) h(mxnprc_\(\)\)) 629 3680 y(nvecsW) e(=) h
(number) f(of) h(entries) f(in) h(mapW) g(equal) f(to) i(me) 1249
3783 y(\(=) f(count_list\() e(me,) i(mapW,) f(m) i(\)\)) 629
3887 y(nvecsQ) e(=) h(number) f(of) h(entries) f(in) h(mapQ) g(equal) f
(to) i(me) 1249 3991 y(\(=) f(count_list\() e(me,) i(mapQ,) f(n) i
(\)\)) 629 4095 y(sDP) 190 b(=) 47 b(sizeof\() f(DoublePrecision) e(\))
533 4302 y(n) k(......) e(\(input\)) g(INTEGER) 963 4406
y(n) h(is) g(the) g(dimension) f(of) h(the) g(symmetric) e(matrix) h(Q)
533 4614 y(colQ) h(...) g(\(input\)) f(array) g(of) h(pointers) f(to) h
(DoublePrecision,) 1345 4717 y(length) f(\(nvecsQ\)) 963
4821 y(The) h(part) f(of) h(matrix) g(Q) g(owned) f(by) i(this) e
(processer) f(stored) 963 4925 y(in) i(packed) f(format,) g(i.e.,) g
(colQ[i]) g(points) g(to) h(the) g(diagonal) 963 5029
y(element) f(of) h(the) g(i-th) f(column) g(\(or) h(equivalently) e
(row\)) h(of) i(Q) 963 5132 y(owned) e(by) h(this) g(processor,) e(i) i
(=) h(0) f(to) g(nvecsQ-1.) 533 5340 y(mapQ) g(...) g(\(input\)) f
(INTEGER) f(array,) h(length) h(\(n\)) p 90 rotate dyy
eop
%%Page: 42 43
42 42 bop Fs 150 -116 a(42) 3256 b(P) m(eIGS) p Fk 963
299 a(The) 47 b(i-th) f(column) g(\(or) h(equivalently) e(row\)) h(of) i
(Q) f(is) 963 403 y(owned) f(by) h(processor) f(mapQ[i],) f(i) j(=) f
(0) g(to) h(n-1.) 533 610 y(m) g(......) e(\(input\)) g(INTEGER) 963
714 y(m) h(is) g(the) g(number) f(of) i(columns) d(in) j(W.) 533
922 y(colW) f(...) g(\(input/output\)) d(array) i(of) h(pointers) f(to)
h(DoublePrecision,) 1679 1025 y(length) f(\(nvecsW\)) 963
1233 y(On) h(Entry:) 1058 1337 y(The) g(part) g(of) g(matrix) f(W) h
(owned) g(by) g(this) g(processer) e(stored) 1058 1440
y(in) i(packed) f(format) h(by) g(columns,) e(i.e.,) i(colW[i]) e
(points) 1058 1544 y(to) i(the) g(first) g(element) e(of) j(the) f
(i-th) f(column) g(of) h(W) 1058 1648 y(owned) g(by) g(this) f
(processor,) f(i) j(=) f(0) h(to) f(nvecsW-1.) 963 1856
y(On) g(Exit:) 1058 1959 y(The) g(result) f(matrix) g(Q) i(*) f(W) h
(stored) e(in) h(the) g(same) f(manner) h(as) 1058 2063
y(W) h(on) f(entry.) 533 2271 y(mapW) g(...) g(\(input\)) f(INTEGER) f
(array,) h(length) h(\(m\)) 963 2374 y(The) g(i-th) f(column) g(of) i
(W) f(is) 963 2478 y(owned) f(by) h(processor) f(mapW[i],) f(i) j(=) f
(0) g(to) h(m-1.) 533 2790 y(iwork) f(..) g(\(workspace\)) d(INTEGER) i
(array,) g(length) g(\() i(2*\(n+m\)+nvecsW+nvecsQ) 42
b(\)) 533 2997 y(work) 47 b(...) g(\(workspace\)) d(DOUBLE) j
(PRECISION) e(array,) 1535 3101 y(length) i(\() g(maximum) f(\() h
(\(nvecsW+1\)*n,) d(mxlbuf_\(\)/sDP) h(+) i(1) h(\)) 533
3308 y(iptr) f(...) g(\(workspace) e(\)) i(array) g(of) g(pointers) e
(to) i(DoublePrecision,) 1583 3412 y(length) f(\(nvecsW\)) 390
3620 y(*/) p Fg 150 3813 a(4.4.4) 63 b(TRED2:) e(Householder) 43
b(reduction) e(of) g(a) f(symmetric) f(matrix) h(to) 464
3938 y(tridiagonal) h(form) p Fs 275 4131 a(Let) p Fo
31 w(A) p Fs 30 w(b) s(e) 30 b(a) g(symmetric) g(matrix) g(stored) h
(in) e(pac) m(k) m(ed.) 42 b(Then) 30 b(subroutine) e(TRED2) j
(computes) g(the) 150 4240 y(Householder) e(transformation) h(matrix) g
(Q) g(and) g(the) g(tridiagonal) f(matrix) p Fo 30 w(T) p
Fs 30 w(suc) m(h) h(that) p Fo 31 w(A) p Fs 25 w(=) p
Fo 25 w(QTQ) p Fe 3658 4207 a(T) p Fs 275 4375 a(This) c(co) s(de) i
(originates) f(from) g(Shirish) e(Chinc) m(halk) -5 b(ar.) 37
b(W) -8 b(e) 30 b(ha) m(v) m(e) f(mo) s(di\014ed) c(it) j(to) g(suit) f
(our) g(purp) s(ose.) 150 4485 y(W) -8 b(e) 32 b(are) e(resp) s
(onsible) e(for) i(in) m(tro) s(ducing) e(an) m(y) j(bugs) e(or) i
(errors.) p Fk 390 4614 a(int) 47 b(tred2) f(\(n,) h(vecA,) g(mapA,) f
(Q,) h(mapQ,) f(diag,) h(upperdiag,) e(iwork,) h(work) h(\)) 629
4717 y(double) f(**vecA,) 714 b(/*) 47 b(matrix) f(to) h(be) g(reduced)
f(*/) 724 4821 y(**Q,) 763 b(/*) 47 b(Householder) e(matrix) h(*/) 724
4925 y(*diag,) 619 b(/*) 47 b(diagonal) f(elements) f(of) i
(tri-diagonal) e(matrix) h(*/) 724 5029 y(*upperdiag,) 379
b(/*) 47 b(upper) f(diagonal) g(elements) g(of) h(tri-diagonal) d(ma-)
390 5132 y(trix) j(*/) 724 5236 y(*work;) 523 b(/*) 48
b(Householder) c(vector) i(\(temp) h(space) f(of) h(size) g(n) g(dou-)
390 5340 y(bles\)) f(*/) p 90 rotate dyy eop
%%Page: 43 44
43 43 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(43) p Fk 629 403 a(int) 142 b(*n,) 858
b(/*) 47 b(problem) f(size) h(*/) 724 506 y(*mapA,) 724
610 y(*mapQ,) 724 714 y(*iwork;) 475 b(/*) 48 b(integer) d(scratch) h
(work) h(space) f(*/) 485 922 y(/*) 438 1129 y(TRED2) g(:) i(reduction)
d(of) i(a) g(real) g(symmetric) e(matrix) h(to) i(tri-diagonal) c(form)
820 1233 y(Uses) i(Householder) f(reductions.) 438 1440
y(INPUT:) 581 1544 y(n) 238 b(->) 95 b(integer) 46 b(,) h(matrix) g
(size.) 581 1752 y(**A) 142 b(->) 95 b(\(1-D) 47 b(array) f(of) h
(pointers) f(to) h(doubles\)) f(input) g(matrix) g(to) h(be) g
(reduced.) 581 1959 y(mapA) 94 b(->) h(\(integer) 46
b(array/) g(input\)) g(integer) g(array) g(of) h(length) f(n) 1488
2063 y(distribution) e(the) 533 2271 y(**Q) 190 b(->) 95
b(\(1-D) 47 b(array) f(of) h(pointers) f(to) h(doubles\)) f
(Householder) e(matrix) i(to) i(be) f(stored) 1535 2374
y(in) h(packed) e(storage) g(format) g(as) h(discussed) e(in) i
(section) f(3.2.) 1535 2478 y(currently) g(assumes) g(that) g(mapA[i]) g
(=) h(mapQ[i]) f(for) h(all) g(i) 533 2686 y(mapQ) 381
b(->) 95 b(\(integer) 45 b(array/) h(input\)) h(integer) e(array) i(of)
g(length) f(n) 1488 2790 y(distribution) e(the) j(same) g(as) g(mapA)
581 2997 y(OUTPUT:) 581 3205 y(diag[0:n-1]) 426 b(->) 95
b(diagonal) 46 b(elements) f(of) j(the) f(tri-diagonal) d(matrix) 1535
3308 y(obtained) i(from) h(A) 581 3412 y(upperdiag[1:n-1]) 186
b(->) 95 b(upper) 47 b(diagonal) e(elements) h(of) h(the) g
(tri-diagonal) d(matrix) 1535 3516 y(obtained) i(from) h(A.) g
(upperdiag[0]) d(is) j(set) g(to) h(0.0) e(and) 1535
3620 y(upperdiag[1]) f(to) i(upperdiag[n-1]) d(contains) i(the) g
(desired) 1535 3724 y(result) 581 3931 y(**Q) 190 b(->) 95
b(Householder) 45 b(matrix) h(\() h(generated) e(by) j(Householder) c
(reflections\)) 1106 4035 y(distributed) h(by) i(rows\(or) f(columns\))
f(in) i(a) h(wrap) e(fashion) g(\(compact\)) 1106 4139
y(same) h(distribution) d(as) j(mapA) 581 4346 y(mapQ) 333
b(\(integer) 45 b(array) i(of) g(length) f(n\)) h(current) f(returns) g
(a) h(copy) g(of) g(mapA,) 1106 4450 y(same) g(distribution) d(as) j
(matrixA) 533 4658 y(*/) p Fg 150 4913 a(4.4.5) 63 b(PSTEBZ) 41
b(eigen) m(v) -7 b(alues) 41 b(of) g(real) g(symmetric) e(tridiagonal) i
(matrix) p Fs 275 5121 a(Giv) m(en) d(a) h(real) f(symmetric) g
(tridiagonal) e(matrix) p Fo 38 w(T) p Fs(.) j(The) f(subroutine) p
Fo 36 w(PSTEBZ) p Fs 37 w(computes) h(the) 150 5230 y(sp) s(eci\014ed)
31 b(eigen) m(v) -5 b(alues) 32 b(of) p Fo 33 w(T) p
Fs 33 w(b) m(y) g(bisection) g(using) f(Sturm) g(sequence.) 48
b(The) 32 b(syn) m(tax) h(used) e(is) h(not) h(quit) 150
5340 y(that) e(of) g(curren) m(t) f(LAP) -8 b(A) m(CK) 30
b(dstebz) h(\() f(notice) h(that) g(the) f(e-arra) m(y) i(is) d
(di\013eren) m(t) h(\).) p 90 rotate dyy eop
%%Page: 44 45
44 44 bop Fs 150 -116 a(44) 3256 b(P) m(eIGS) p Fk 676
299 a(subroutine) 45 b(pstebz\() h(job,) h(n,) g(lb,) g(ub,) g(jjjlb,) f
(jjjub,) g(abstol,) g(d,) h(e,) 629 403 y($) 906 b(mapZ,) 47
b(neigval,) e(nsplit,) h(eval,) g(iblock,) g(isplit,) 629
506 y($) 906 b(work,) 47 b(iwork,) f(info\)) 676 714
y(Integer) 571 b(job,) 47 b(n,) g(jjjlb,) f(jjjub,) g(mapZ\(*\),) g
(neigval,) f(nsplit,) 629 818 y($) 906 b(iblock\(*\),) 45
b(isplit\(*\),) g(iwork\(*\),) g(info) 676 922 y(Double) h(Precision)
141 b(lb,) 47 b(ub,) g(abstol,) f(d\(*\),) g(e\(*\),) h(eval\(*\),) e
(work\(*\)) 390 1025 y(c) 390 1129 y(c) 238 b(Arguments) 46
b(are) h(the) f(same) h(as) g(for) g(the) g(C) h(call) e(sequence,) f
(but) i(any) 390 1233 y(c) 238 b(reference) 46 b(to) h("pointer) e(to) j
(data) e(type") h(should) f(be) h(interpreted) e(as) 390
1337 y(c) 238 b("array) 46 b(of) i(data) e(type".) 94
b(Also,) 46 b(C) i(routine) e(indexing) f("from) i(0) g(to) g(k-1") g
(should) 390 1440 y(c) 238 b(be) 48 b(interpreted) c(as) j(indexing) f
("from) g(1) i(to) f(k") g(in) g(fortran.) 390 1544 y(c) 390
1708 y(void) g(pstebz_\() e(job,) i(n,) g(lb,) g(ub,) g(jjjlb,) f
(jjjub,) g(abstol,) g(d,) h(e,) g(mapZ,) g(neigval,) 629
1812 y(nsplit,) e(eval,) i(iblock,) f(isplit,) f(work,) i(iwork,) f
(info\)) 629 2019 y(Integer) 570 b(*job,) 47 b(*n,) g(*jjjlb,) f
(*jjjub,) f(*mapZ,) h(*neigval,) g(*nsplit,) 1345 2123
y(*iblock,) f(*isplit,) h(*iwork,) f(*info;) 629 2227
y(DoublePrecision) 425 b(*lb,) 47 b(*ub,) f(*abstol,) g(*d,) h(*e,) g
(*eval,) f(*work;) 390 2434 y(/*) 438 2538 y(*) 95 b(Parallel) 45
b(version) h(of) h(LAPACK's) f(DSTEBZ.) 438 2746 y(*) 95
b(This) 47 b(routine) e(is) j(directly) d(callable) h(from) g(both) h
(FORTRAN) f(and) h(C.) 438 2849 y(*) 95 b(The) 47 b(documentation) d
(below) i(always) g(uses) h(FORTRAN) f(array) g(indexing,) 438
2953 y(*) 95 b(i.e.,) 46 b(1) i(to) f(N,) g(rather) f(then) h(C) g
(array) g(indexing,) e(i.e.,) 94 b(0) 47 b(to) h(N-1.) 438
3057 y(*) 95 b(This) 47 b(should) f(be) h(kept) f(in) i(mind) e(when) h
(calling) f(this) g(routine) g(from) h(C.) 438 3161 y(*) 95
b(Also) 47 b(when) f(calling) g(this) h(routine) e(from) i(C) 438
3264 y(*) 190 b(INTEGER) 46 b(\(array\)) 523 b(means) 47
b("pointer) e(to) i(Integer") f(and) 438 3368 y(*) 190
b(DOUBLE) 46 b(PREICISION) f(\(array\)) h(means) h("pointer) e(to) i
(DoublePrecision") 438 3680 y(*) 95 b(Purpose) 438 3783
y(*) g(=======) 438 3991 y(*) g(PSTEBZ) 46 b(computes) g(the) g
(eigenvalues) f(of) i(a) h(symmetric) d(tridiagonal) 438
4095 y(*) 95 b(matrix) 46 b(T.) 95 b(The) 47 b(user) f(may) h(ask) g
(for) g(all) g(eigenvalues,) e(all) h(eigenvalues) 438
4198 y(*) 95 b(in) 47 b(the) g(half-open) e(interval) h(\(LB,) g(UB],) h
(or) g(the) g(JJJLB-th) f(through) g(JJJUB-th) 438 4302
y(*) 95 b(eigenvalues.) 438 4510 y(*) g(To) 47 b(avoid) f(overflow,) g
(the) h(matrix) f(must) g(be) i(scaled) e(so) h(that) f(its) 438
4614 y(*) 95 b(largest) 46 b(element) g(is) h(no) g(greater) f(than) g
(overflow**\(1/2\)) e(*) 438 4717 y(*) 95 b(underflow**\(1/4\)) 43
b(in) k(absolute) f(value,) g(and) h(for) g(greatest) 438
4821 y(*) 95 b(accuracy,) 45 b(it) i(should) f(not) h(be) h(much) e
(smaller) g(than) h(that.) 438 5029 y(*) 95 b(See) 47
b(W.) g(Kahan) f("Accurate) g(Eigenvalues) e(of) k(a) f(Symmetric) e
(Tridiagonal) 438 5132 y(*) 95 b(Matrix",) 45 b(Report) i(CS41,) f
(Computer) f(Science) h(Dept.,) g(Stanford) 438 5236
y(*) 95 b(University,) 45 b(July) h(21,) h(1966.) p 90 rotate
dyy eop
%%Page: 45 46
45 45 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(45) p Fk 438 299 a(*) 95 b(Arguments) 438
403 y(*) g(=========) 438 714 y(*) g(JOB) 238 b(\(input\)) 46
b(INTEGER) 438 818 y(*) 477 b(=) 47 b(1) 95 b(:) 48 b(\("All"\)) 141
b(all) 47 b(eigenvalues) e(will) h(be) i(found.) 438
922 y(*) 477 b(=) 47 b(2) 95 b(:) 48 b(\("Value"\)) d(all) i
(eigenvalues) e(in) i(the) g(half-open) e(interval) 438
1025 y(*) 1288 b(\(LB,) 47 b(UB]) g(will) f(be) h(found.) 438
1129 y(*) 477 b(=) 47 b(3) 95 b(:) 48 b(\("Index"\)) d(the) i(JJJLB-th)
f(through) f(JJJUB-th) h(eigenvalues) f(\(of) i(the) 438
1233 y(*) 1288 b(entire) 46 b(matrix\)) g(will) h(be) g(found.) 438
1440 y(*) 95 b(N) 334 b(\(input\)) 46 b(INTEGER) 438
1544 y(*) 477 b(The) 47 b(order) f(of) h(the) g(tridiagonal) e(matrix) h
(T.) 95 b(N) 47 b(>=) g(0.) 438 1752 y(*) 95 b(LB) 286
b(\(input\)) 46 b(DOUBLE) g(PRECISION) 438 1856 y(*) 95
b(UB) 286 b(\(input\)) 46 b(DOUBLE) g(PRECISION) 438
1959 y(*) 477 b(If) 47 b(JOB=2,) f(the) h(lower) f(and) h(upper) g
(bounds) f(of) h(the) g(interval) e(to) 438 2063 y(*) 477
b(be) 47 b(searched) e(for) i(eigenvalues.) 93 b(Eigenvalues) 44
b(less) j(than) g(or) g(equal) 438 2167 y(*) 477 b(to) 47
b(LB,) g(or) g(greater) f(than) g(UB,) h(will) g(not) g(be) g
(returned.) 93 b(LB) 47 b(<) h(UB.) 438 2271 y(*) 477
b(Not) 47 b(referenced) e(if) i(JOB) g(=) g(1) h(or) f(3.) 438
2478 y(*) 95 b(JJJLB) 142 b(\(input\)) 46 b(INTEGER) 438
2582 y(*) 95 b(JJJUB) 142 b(\(input\)) 46 b(INTEGER) 438
2686 y(*) 477 b(If) 47 b(JOB=3,) f(the) h(indices) f(\(in) h(ascending)
e(order\)) h(of) h(the) 438 2790 y(*) 477 b(smallest) 45
b(and) i(largest) f(eigenvalues) f(to) i(be) g(returned.) 438
2893 y(*) 477 b(1) 47 b(<=) g(JJJLB) g(<=) g(JJJUB) f(<=) h(N,) h(if) f
(N) g(>) h(0.) 438 2997 y(*) 477 b(Not) 47 b(referenced) e(if) i(JOB) g
(=) g(1) h(or) f(2.) 438 3205 y(*) 95 b(ABSTOL) f(\(input\)) 46
b(DOUBLE) g(PRECISION) 438 3308 y(*) 477 b(The) 47 b(absolute) e
(tolerance) g(for) i(the) g(eigenvalues.) 92 b(An) 48
b(eigenvalue) 438 3412 y(*) 477 b(\(or) 47 b(cluster\)) e(is) i
(considered) e(to) j(be) f(located) f(if) h(it) g(has) g(been) 438
3516 y(*) 477 b(determined) 45 b(to) i(lie) g(in) g(an) g(interval) f
(whose) g(width) g(is) i(ABSTOL) e(or) 438 3620 y(*) 477
b(less.) 94 b(If) 47 b(ABSTOL) f(is) h(less) g(than) g(or) g(equal) f
(to) h(zero,) g(then) f(ULP*|T|) 438 3724 y(*) 477 b(will) 46
b(be) i(used,) e(where) g(|T|) h(means) g(the) f(1-norm) h(of) g(T.) 438
3931 y(*) 477 b(Eigenvalues) 44 b(will) j(be) g(computed) f(most) g
(accurately) f(when) i(ABSTOL) f(is) 438 4035 y(*) 477
b(set) 47 b(to) g(twice) f(the) h(underflow) e(threshold) h
(2*DLAMCH\('S'\),) e(not) i(zero.) 438 4242 y(*) 95 b(D) 334
b(\(input\)) 46 b(DOUBLE) g(PRECISION) f(array,) h(dimension) f(\(N\))
438 4346 y(*) 477 b(The) 47 b(n) g(diagonal) f(elements) f(of) i(the) g
(tridiagonal) e(matrix) h(T.) 438 4554 y(*) 95 b(E) 334
b(\(input\)) 46 b(DOUBLE) g(PRECISION) f(array,) h(dimension) f(\(N\))
438 4658 y(*) 477 b(The) 47 b(first) f(element) g(of) h(E,) g(E\(1\),) g
(is) g(junk,) f(the) h(rest) g(of) g(E,) g(E\(2:N\),) 438
4761 y(*) 477 b(contains) 45 b(the) i(\(n-1\)) g(off-diagonal) d
(elements) i(of) h(the) g(tridiagonal) 438 4865 y(*) 477
b(matrix) 46 b(T.) 438 5073 y(*) 95 b(MAPZ) 190 b(\(input\)) 46
b(INTEGER) f(array,) h(dimension) g(\(N\)) 438 5176 y(*) 477
b(A) 47 b(list) g(of) g(the) g(ids) g(of) g(the) g(processors) e(which)
h(are) h(to) g(participate) 438 5280 y(*) 477 b(in) 47
b(the) g(eigenvalue) e(computation.) p 90 rotate dyy
eop
%%Page: 46 47
46 46 bop Fs 150 -116 a(46) 3256 b(P) m(eIGS) p Fk 438
403 a(*) 95 b(NEIGVAL) 46 b(\(output\)) f(INTEGER) 438
506 y(*) 477 b(The) 47 b(actual) f(number) g(of) h(eigenvalues) e
(found.) h(0) h(<=) g(NEIGVAL) f(<=) h(N.) 438 714 y(*) 95
b(NSPLIT) f(\(output\)) 45 b(INTEGER) 438 818 y(*) 477
b(The) 47 b(number) f(of) h(diagonal) e(blocks) i(in) g(the) g(matrix) f
(T.) 438 922 y(*) 477 b(1) 47 b(<=) g(NSPLIT) f(<=) i(N.) 438
1129 y(*) 95 b(EVAL) 190 b(\(output\)) 45 b(DOUBLE) h(PRECISION) g
(array,) g(dimension) f(\(N\)) 438 1233 y(*) 477 b(On) 47
b(exit,) f(the) h(first) g(NEIGVAL) e(elements) h(of) h(EVAL) g(will) f
(contain) g(the) 438 1337 y(*) 477 b(eigenvalues.) 92
b(\(PSTEBZ) 46 b(may) h(use) g(the) f(remaining) g(N-NEIGVAL) f
(elements) h(as) 438 1440 y(*) 477 b(workspace.\)) 438
1544 y(*) g(The) 47 b(eigenvalues) d(will) j(be) g(grouped) f(by) h
(split-off) e(block) i(\(see) f(IBLOCK,) 438 1648 y(*) 477
b(ISPLIT\)) 46 b(and) g(ordered) g(from) h(smallest) e(to) j(largest) d
(within) i(the) f(block.) 438 1856 y(*) 95 b(IBLOCK) f(\(output\)) 45
b(INTEGER) h(array,) g(dimension) f(\(N\)) 438 1959 y(*) 477
b(At) 47 b(each) g(row/column) e(j) i(where) f(E\(j\)) h(is) g(zero) g
(or) g(small,) f(the) 438 2063 y(*) 477 b(matrix) 46
b(T) h(is) g(considered) e(to) j(split) e(into) h(a) g(block) f
(diagonal) 438 2167 y(*) 477 b(matrix.) 93 b(On) 47 b(exit,) g(if) g
(INFO) g(=) g(0,) g(IBLOCK\(i\)) f(specifies) f(to) i(which) 438
2271 y(*) 477 b(block) 46 b(\(from) g(1) i(to) f(the) g(number) f(of) h
(blocks\)) f(the) h(eigenvalue) e(EVAL\(i\)) 438 2374
y(*) 477 b(belongs.) 93 b(\(DSTEBZ) 46 b(may) h(use) g(the) g
(remaining) e(N-NEIGVAL) g(elements) h(as) 438 2478 y(*) 477
b(workspace.\)) 438 2686 y(*) 95 b(ISPLIT) f(\(output\)) 45
b(INTEGER) h(array,) g(dimension) f(\(N\)) 438 2790 y(*) 477
b(The) 47 b(splitting) e(points,) h(at) h(which) f(T) i(breaks) e(up) h
(into) g(submatrices.) 438 2893 y(*) 477 b(The) 47 b(first) f
(submatrix) f(consists) h(of) h(rows/columns) d(1) k(to) f
(ISPLIT\(1\),) 438 2997 y(*) 477 b(the) 47 b(second) f(of) h
(rows/columns) d(ISPLIT\(1\)+1) h(through) h(ISPLIT\(2\),) 438
3101 y(*) 477 b(etc.,) 46 b(and) h(the) g(NSPLIT-th) e(consists) h(of) h
(rows/columns) 438 3205 y(*) 477 b(ISPLIT\(NSPLIT-1\)+1) 43
b(through) i(ISPLIT\(NSPLIT\)=N.) 438 3308 y(*) 477 b(\(Only) 46
b(the) h(first) f(NSPLIT) g(elements) g(will) h(actually) e(be) i
(used,) g(but) 438 3412 y(*) 477 b(since) 46 b(the) h(user) g(cannot) f
(know) g(a) i(priori) e(what) h(value) f(NSPLIT) g(will) 438
3516 y(*) 477 b(have,) 46 b(N) i(words) e(must) h(be) g(reserved) e
(for) i(ISPLIT.\)) 438 3724 y(*) 95 b(WORK) 190 b(\(workspace\)) 44
b(DOUBLE) j(PRECISION) e(array,) h(dimension) f(\() j(\)) 438
3931 y(*) 95 b(IWORK) 142 b(\(workspace\)) 44 b(INTEGER) i(array,) g
(dimension) g(\() h(\)) 438 4139 y(*) 95 b(INFO) 190
b(\(output\)) 45 b(INTEGER) 438 4346 y(*) 477 b(PSTEBZ) 46
b(attempts) f(to) j(return) e(the) h(same) f(INFO) h(on) g(all) g
(processors) e(in) i(MAPZ.) 438 4450 y(*) 477 b(Currently,) 45
b(however,) g(if) i(the) g(input) g(data) f(is) i(invalid,) d(-50) i(<)
g(INFO) g(<) h(0,) 438 4554 y(*) 477 b(then) 46 b(INFO) h(will) g(be) g
(different) e(on) i(different) f(processors.) 438 4761
y(*) 477 b(=) 47 b(0:) 143 b(successful) 45 b(exit) 438
4969 y(*) 477 b(<) 47 b(0) h(&) 438 5073 y(*) 477 b(>) 47
b(-50:) g(if) g(INFO) g(=) g(-i,) g(the) g(i-th) g(argument) e(had) i
(an) g(illegal) f(value) 438 5280 y(*) 477 b(=) 47 b(-51:) g(Then) f
(the) h(input) g(data) f(was) h(not) g(the) g(same) g(on) g(all) g
(processors) e(in) i(MAPZ) p 90 rotate dyy eop
%%Page: 47 48
47 47 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(47) p Fk 438 403 a(*) 477 b(>) 47
b(0:) 143 b(some) 46 b(or) i(all) f(of) g(the) g(eigenvalues) d(failed)
i(to) i(converge) d(or) 438 506 y(*) 811 b(were) 46 b(not) h(computed,)
f(or) h(they) f(were) h(computed) f(incorrectly:) 438
714 y(*) 811 b(=1:) 47 b(routine) f(DSTEBZ3) f(returned) h(a) h
(non-zero) f(info.) 94 b(Meaning) 438 818 y(*) 1002 b(that) 46
b(on) i(one) e(or) i(more) e(processors) f(some) i(or) g(all) g(of) g
(the) 438 922 y(*) 1002 b(eigenvalues) 44 b(failed) j(to) g(converge) e
(or) i(were) g(not) g(computed) 438 1025 y(*) 1002 b(In) 47
b(this) g(case) f(the) h(processor) e(with) i(a) g(non-zero) f(info) h
(from) 438 1129 y(*) 1002 b(DSETBZ3) 46 b(prints) g(and) h(error) f
(message) g(to) h(stderr.) 438 1337 y(*) 811 b(=2:) 47
b(NSPLIT) f(and/or) g(ISPLIT) g(were) h(not) g(the) f(same) h(on) g
(all) g(processors) 438 1544 y(*) 811 b(=3:) 47 b(Relative) e
(processor) h(i) h(computed) f(an) h(eigenvalue) e(larger) h(than) 438
1648 y(*) 1002 b(the) 47 b(smallest) e(eigenvalue) g(computed) h(by) h
(relative) e(pro-) 390 1752 y(cessor) h(i+1) 438 1856
y(*) 1002 b(for) 47 b(some) f(i.) 95 b(This) 47 b(should) f(not) h
(occur) f(using) h(the) f(cur-) 390 1959 y(rent) h(algorithms.) 438
2167 y(*) 811 b(=4:) 47 b(The) g(number) f(of) h(eigenvalues) e(found) h
(in) h(a) h(block) e(of) h(T) h(is) f(bigger) 438 2271
y(*) 1002 b(then) 46 b(the) h(dimension) f(of) h(the) g(block.) 438
2582 y(*) 715 b(In) 48 b(theory) e(INFO) g(=) i(2,) f(3,) g(or) g(4) h
(should) e(never) g(occur.) 94 b(If) 47 b(they) g(do) g(occur) 438
2686 y(*) 715 b(then) 47 b(DSTEBZ3) f(failed) g(to) h(correctly) e
(compute) h(the) h(requested) e(eigenvalues.) 438 2893
y(*) 715 b(Note) 47 b(that) g(DSTEBZ3) e(is) j(a) f(modification) e(of)
i(LAPACK's) e(DSTEBZ.) 94 b(The) 438 2997 y(*) 715 b(modifications) 45
b(had) h(to) i(be) f(made) f(to) i(avoid) e(gettings) g(INFOs) g(like) h
(3) g(and) g(4.) 438 3205 y(*/) p Fg 150 3440 a(4.4.6) 63
b(PSTEIN:) 40 b(eigen) m(v) m(ectors) h(of) g(real) f(symmetric) g
(tridiagonal) h(matrix) p Fs 275 3638 a(Giv) m(en) 23
b(a) i(real) e(symmetric) g(tridiagonal) g(matrix) p
Fo 23 w(T) p Fs 24 w(and) g(some) i(of) f(its) f(eigen) m(v) -5
b(alues.) 39 b(The) 23 b(subroutine) p Fo 150 3747 a(PSTEBZ) p
Fs 40 w(computes) 42 b(the) g(sp) s(eci\014ed) e(eigen) m(v) m(ectors) j
(of) p Fo 42 w(T) p Fs(.) f(The) f(syn) m(tax) h(used) f(is) g(not) h
(quit) f(that) h(of) 150 3857 y(curren) m(t) 30 b(LAP) -8
b(A) m(CK) 31 b(dstein) e(\() i(notice) f(that) h(the) g(e-arra) m(y) g
(is) f(di\013eren) m(t) g(\).) p Fk 390 3991 a(void) 47
b(pstein) f(\() h(n,) g(dd,) g(ee,) g(meigval,) f(eval,) g(iblock,) g
(nsplit,) g(isplit,) 629 4095 y(mapZ,) g(vecZ,) g(ddwork,) g(iiwork,) g
(ppiwork,) g(info) g(\)) 629 4302 y(Integer) 570 b(*n,) 47
b(*meigval,) f(*iblock,) f(*nsplit,) h(*isplit,) f(*mapZ,) 1535
4406 y(*iiwork,) h(*info,) g(**ppiwork;) 629 4510 y(DoublePrecision) 377
b(*dd,) 47 b(*ee,) g(*eval,) f(**vecZ,) g(*ddwork;) 485
4717 y(/*) 533 4925 y(*) i(Driver) e(to) h(compute) f(eigenvectors) e
(of) j(a) h(symmetric) d(tridiagonal) g(matrix.) 533
5029 y(*) j(Basically) d(a) i(parallel) f(version) g(of) h(LAPACK's) e
(DSTEIN.) 533 5236 y(*) 95 b(n) 48 b(.........) d(The) i(dimension) e
(of) i(the) g(matrix.) p 90 rotate dyy eop
%%Page: 48 49
48 48 bop Fs 150 -116 a(48) 3256 b(P) m(eIGS) p Fk 533
299 a(*) 95 b(dd) 48 b(........) d(The) i(diagonal) f(of) h(the) g
(matrix.) 533 506 y(*) 95 b(ee) 48 b(........) d(The) i(off-diagonal) d
(of) k(the) f(matrix.) 93 b(ee[0]) 46 b(is) i(junk,) e(the) 533
610 y(*) 668 b(actual) 46 b(off-diagonal) f(starts) h(at) h(ee[1].) 533
818 y(*) 95 b(meigval) 46 b(...) h(\(input\)) f(Integer) 533
922 y(*) 668 b(The) 47 b(number) f(of) h(eigenvalues) e(found) 533
1129 y(*) 95 b(eval) 47 b(......) f(\(input\)) g(DoublePrecision) e
(array,) i(length) g(\(neigval\)) 533 1233 y(*) 668 b(The) 47
b(actual) f(eigenvalues.) 92 b(Sorted) 46 b(by) i(split) e(of) h
(block,) 533 1337 y(*) 668 b(and) 47 b(within) f(a) i(block) e(sorted) g
(by) h(value.) 533 1544 y(*) 95 b(iblock) 46 b(....) h(\(input\)) f
(Integer) g(array,) g(length) g(\(neigval\)) 533 1648
y(*) 668 b(Array) 46 b(from) h(pstebz.) 533 1856 y(*) 95
b(nsplit) 46 b(....) h(\(input\)) f(Integer) 533 1959
y(*) 668 b(The) 47 b(number) f(of) h(split) g(points) f(in) h(the) g
(tridiagonal) e(matrix.) 533 2063 y(*) 668 b(From) 47
b(pstebz.) 533 2271 y(*) 95 b(isplit) 46 b(....) h(\(input\)) f
(Integer) g(array,) g(length) g(\(nsplit\)) 533 2374
y(*) 668 b(Array) 46 b(from) h(pstebz.) 533 2582 y(*) 95
b(mapZ) 190 b(\(input/output\)) 44 b(INTEGER) i(array,) g(dimension) f
(\(meigval\)) 533 2686 y(*) 477 b(On) 47 b(entry:) 533
2893 y(*) 477 b(mapZ\(i\)) 46 b(=) h(the) g(id) h(of) f(a) g(processor)
e(which) i(has) g(room) f(for) h(the) 533 2997 y(*) 954
b(i-th) 47 b(eigenvector,) e(i) i(=) g(0) h(to) f(meigval-1) 533
3101 y(*) 477 b(On) 47 b(exit:) 533 3205 y(*) 573 b(mapZ\(i\)) 45
b(=) j(the) f(id) g(of) g(the) g(processor) e(which) i(actually) e
(owns) i(the) g(i-) 390 3308 y(th) 533 3412 y(*) 1050
b(eigenvector,) 44 b(i) k(=) f(0) h(to) f(meigval-1.) 533
3620 y(*) 477 b(The) 47 b(value) f(of) i(mapZ) e(on) h(exit) g(may) g
(be) g(different) e(then) i(on) g(entry.) 533 3827 y(*) 95
b(vecZ) 190 b(\(output\)) 46 b(array) g(of) h(pointers) f(to) h
(DoublePrecision) d(\(DoublePre-) 390 3931 y(cision) i(**\)) 533
4035 y(*) 907 b(dimension) 45 b(\() i(nvecsZ) g(\)) 533
4139 y(*) 477 b(On) 47 b(entry:) 533 4242 y(*) 620 b(vecZ[i],) 46
b(i) h(=) h(0) f(to) g(nvecsZ-1,) f(should) g(point) g(to) h(an) h
(array) e(of) h(length) f(n.) 533 4450 y(*) 477 b(On) 47
b(exit:) 533 4658 y(*) 573 b(vecZ[i],) 45 b(i) j(=) f(0) h(to) f
(nvecsZ-1,) e(points) h(to) h(the) g(i-th) g(eigenvector) 533
4761 y(*) 573 b(\(as) 47 b(determined) e(by) i(the) g(exit) f(values) g
(in) i(mapZ\)) e(owned) g(by) h(this) 533 4865 y(*) 573
b(processor.) 533 5073 y(*) g(The) 47 b(eigenvectors) d(are) j
(normalized) e(such) i(that:) f(Z'*) h(Z) g(=) h(I.) p
90 rotate dyy eop
%%Page: 49 50
49 49 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(49) p Fk 533 299 a(*) 95 b(ddwork) 46
b(....) h(\(workspace\)) e(DoublePrecision) e(array) 533
403 y(*) 95 b(iiwork) 46 b(....) h(\(workspace\)) e(Integer) h(array,)
533 506 y(*) 95 b(ppiwork) 46 b(...) h(\(workspace\)) e(array) h(of) h
(pointers) f(to) h(Integer,) 533 818 y(*) 95 b(INFO) 47
b(...) g(\(output\)) e(INTEGER) 533 1025 y(*) 525 b(PSTEIN) 46
b(attempts) g(to) h(return) f(the) h(same) f(INFO) h(on) g(all) g
(processors) e(in) i(MAPZ.) 533 1129 y(*) 525 b(Currently,) 45
b(however,) g(if) j(the) f(input) f(data) h(is) g(invalid,) e(-50) i(<)
h(INFO) e(<) i(0,) 533 1233 y(*) 525 b(then) 47 b(INFO) f(will) h(be) g
(different) e(on) i(different) f(processors.) 533 1440
y(*) 525 b(=) 47 b(0:) 143 b(successful) 45 b(exit) 533
1648 y(*) 525 b(-50) 47 b(<=) g(INFO) g(<) g(0:) 533
1752 y(*) 859 b(Then) 47 b(the) g(\(-INFO\)-th) e(argument) g(had) i
(an) g(illegal) f(value) 533 1959 y(*) 525 b(=) 47 b(-51:) g(Then) g
(the) g(input) f(data) h(was) f(not) h(the) g(same) g(on) g(all) g
(proces-) 390 2063 y(sors) g(in) g(MAPZ) 533 2271 y(*) 525
b(0) 47 b(<) h(INFO) e(<=) i(MEIGVAL:) 533 2374 y(*) 859
b(Then) 47 b(the) g(INFO-th) e(eigenvector) g(failed) h(to) h
(converge,) f(but) h(all) 533 2478 y(*) 859 b(lower) 46
b(numbered) g(eigenvectors) e(did) j(converge.) 533 2686
y(*) 525 b(N) 47 b(<) h(INFO:) 533 2790 y(*) 859 b(Then) 47
b(the) g(residual,) 533 2893 y(*) 859 b(res) 47 b(==) g(\() h(max_i) e
(|T) h(z_i-lamba_i) e(z_i) i(|) g(/\() g(eps) g(|T|\)) g(\),) 533
2997 y(*) 859 b(for) 47 b(the) g(tridiagonal) e(eigenproblem) f(was) j
(excessively) e(large.) 533 3101 y(*) 859 b(In) 47 b(particular,) e
(INFO) i(=) g(N) g(+) h(\(Integer\)) d(log10\() h(res) h(\)) 533
3205 y(*/) p Fg 150 3440 a(4.4.7) 63 b(Residual) 41 b(and) g
(Orthogonalit) m(y) g(c) m(hec) m(ks) p Fs 275 3638 a(This) 35
b(section) j(describ) s(es) d(routines) i(for) g(computing) f
(residuals) f(for) i(the) h(v) -5 b(arious) 36 b(eigenproblems,) 150
3748 y(and) 31 b(for) g(testing) h(the) f(orthogonalit) m(y) h(of) g
(computed) f(eigen) m(v) m(ectors.) 46 b(The) 31 b(F) -8
b(ortran) 32 b(77) g(calling) e(syn) m(tax) 150 3857
y(is) c(giv) m(en) h(in) e(v) m(ery) i(little) f(detail.) 38
b(Most) 28 b(of) f(the) g(detail) f(and) g(descriptions) f(of) i(the) g
(routines) e(are) j(included) 150 3967 y(with) h(the) i(C) f(calling) e
(syn) m(tax.) 275 4107 y(The) h(F) -8 b(ortran) 31 b(77) h(syn) m(tax) f
(is:) p Fk 629 4241 a(SUBROUTINE) 45 b(tresid\() g(n,) j(m,) f(d,) g
(e,) g(colZ,) g(mapZ,) f(eval,) g(iwork,) g(work,) h(res,) f(info\)) 629
4345 y(Integer) 427 b(n,) 47 b(m,) h(mapZ\(*\),) d(iwork\(*\),) g(info)
629 4449 y(DoublePrecision) e(d\(*\),) k(e\(*\),) f(colZ\(*\),) g
(eval\(*\),) f(work\(*\),) h(res) 629 4583 y(SUBROUTINE) f(resid\() h
(n,) h(colA,) f(mapA,) h(m,) g(colZ,) f(mapZ,) h(eval,) f(iwork,) g
(work,) 1488 4687 y(res,) g(info\)) 629 4791 y(Integer) 427
b(n,) 47 b(mapA\(*\),) f(m,) h(mapZ\(*\),) f(iwork\(*\),) f(info) 629
4894 y(DoublePrecision) e(colA\(*\),) j(colZ\(*\),) f(eval\(*\),) h
(work\(*\),) f(res) 390 5102 y(C) 95 b(Note) 47 b(that) f(the) h(C) h
(routine) e(resid) g(has) h(one) g(more) f(argument,) g(ibuffptr,) f
(than) i(the) 390 5206 y(C) 95 b(Fortran) 46 b(77) h(call) g(syntax) f
(listed) g(here.) 629 5340 y(SUBROUTINE) f(residual\() g(n,) i(colA,) f
(mapA,) h(colB,) f(mapB,) h(m,) g(colZ,) f(mapZ,) g(eval,) p
90 rotate dyy eop
%%Page: 50 51
50 50 bop Fs 150 -116 a(50) 3256 b(P) m(eIGS) p Fk 1631
299 a(iwork,) 46 b(work,) g(res,) h(info\)) 629 403 y(Integer) 427
b(n,) 47 b(mapA\(*\),) f(mapB\(*\),) g(m,) h(mapZ\(*\),) e(iwork\(*\),)
h(info) 629 506 y(DoublePrecision) d(colA\(*\),) j(colB\(*\),) f
(colZ\(*\),) h(eval\(*\),) f(work\(*\),) h(res) 390 714
y(C) 95 b(Note) 47 b(that) f(the) h(C) h(routine) e(residual) f(has) i
(one) g(more) g(argument,) e(ibuffptr,) g(than) i(the) 390
818 y(C) 95 b(Fortran) 46 b(77) h(call) g(syntax) f(listed) g(here.) 629
945 y(SUBROUTINE) f(ortho\() h(n,) h(m,) g(colZ,) f(mapZ,) h(iwork,) f
(work,) g(ort,) h(info\)) 629 1049 y(Integer) e(n,) j(m,) f(mapZ\(*\),)
e(iwork\(*\),) h(info) 629 1153 y(DoublePrecision) d(colZ\(*\),) j
(work\(*\),) 93 b(ort) 390 1360 y(C) i(Note) 47 b(that) f(the) h(C) h
(routine) e(ortho) g(has) h(one) g(more) f(argument,) g(ibuffptr,) f
(than) i(the) 390 1464 y(C) 95 b(Fortran) 46 b(77) h(call) g(syntax) f
(listed) g(here.) 629 1592 y(SUBROUTINE) f(bortho\() g(n,) j(colB,) e
(mapB,) g(m,) i(colZ,) e(mapZ,) g(iwork,) g(work,) h(ort,) f(info\)) 629
1695 y(Integer) 427 b(n,) 47 b(mapB\(*\),) f(m,) h(mapZ\(*\),) f
(iwork\(*\),) f(info) 629 1799 y(DoublePrecision) e(colB\(*\),) j
(colZ\(*\),) f(work\(*\),) 94 b(ort) 390 2007 y(C) h(Note) 47
b(that) f(the) h(C) h(routine) e(bortho) g(has) h(one) g(more) f
(argument,) f(ibuffptr,) h(than) g(the) 390 2110 y(C) 95
b(Fortran) 46 b(77) h(call) g(syntax) f(listed) g(here.) p
Fs 275 2244 a(The) 28 b(input) f(argumen) m(ts) j(for) e(the) i(ab) s
(o) m(v) m(e) g(routines) e(are) h(the) h(same) f(as) g(in) f(the) h(C)
g(co) s(des) g(listed) f(b) s(elo) m(w) 150 2353 y(except) h(that) f
(one) g(c) m(hanges) h(the) f(argumen) m(ts) g(of) g(t) m(yp) s(e) p
Fk 28 w(") p Fs(1-D) h(arra) m(y) g(of) f(p) s(oin) m(ters) e(to) j
(DoublePrecision) p Fk(") p Fs(,) 150 2463 y(i.e.,) k(ro) m(wQ,) f
(colW,) h(etc,) g(to) g(t) m(yp) s(e) p Fk 32 w(") p
Fs(1-D) g(arra) m(y) g(of) f(double) e(precision) h(n) m(um) m(b) s
(ers) p Fk(") p Fs 30 w(and) g(store) i(the) f(data) 150
2572 y(in) 26 b(these) j(arra) m(ys) f(using) e(the) i(pac) m(k) m(ed) h
(storage) g(format) f(describ) s(ed) e(previously) -8
b(.) 38 b(The) 27 b(C) h(co) s(de) g(describ) s(es) 150
2682 y(arra) m(ys) j(of) f(length) g(n) g(with) f(indices) f(of) j(0) g
(to) g(n-1,) g(for) f(fortran) g(usage) h(the) f(indices) f(should) f
(b) s(e) i(1) h(to) g(n.) 275 2815 y(The) d(w) m(ork) h(arra) m(ys) h
(for) e(the) i(F) -8 b(ortran) 29 b(77) h(co) s(des) f(m) m(ust) g(b) s
(e) g(somewhat) g(larger) g(than) f(listed) g(b) s(elo) m(w) g(in) 150
2925 y(the) i(C) f(calling) f(syn) m(tax.) 41 b(In) 29
b(particular,) f(let) i(ME,) g(b) s(e) f(the) h(id) e(of) i(a) g(pro) s
(cessor,) f(and) g(let) h(n) m(v) m(ecsX) h(b) s(e) e(the) 150
3034 y(n) m(um) m(b) s(er) c(of) h(en) m(tries) f(in) g(arra) m(y) h
(mapX) g(equal) f(to) i(ME,) f(where) g(X) g(=) f(Q,W,U,) i(or) f(F.) g
(Then,) h(on) e(pro) s(cessor) 150 3144 y(ME) 31 b(the) f(extra) h
(memory) f(requiremen) m(ts) g(for) g(the) h(F) -8 b(ortran) 31
b(77) g(routines) e(are:) p Fq 199 3277 a(\000) p Fs
60 w(TRESID:) h(increase) g(size) g(of) h(w) m(ork) f(b) m(y) g(n) m(v)
m(ecsZ) p Fk(+) p Fs(1) p Fq 199 3411 a(\000) p Fs 60
w(RESID:) g(increase) g(size) h(of) f(w) m(ork) h(b) m(y) f(n) m(v) m
(ecsA) p Fk(+) p Fs(3*n) m(v) m(ecsZ) p Fk(+) p Fs(4) p
Fq 199 3544 a(\000) p Fs 60 w(RESIDUAL:) g(increase) g(size) h(of) f(w)
m(ork) h(b) m(y) f(n) m(v) m(ecsA) p Fk(+) p Fs(n) m(v) m(ecsB) p
Fk(+) p Fs(4*n) m(v) m(ecsZ) p Fk(+) p Fs(6) p Fq 199
3677 a(\000) p Fs 60 w(OR) -8 b(THO:) 30 b(increase) g(size) h(of) f(w)
m(ork) h(b) m(y) f(2*n) m(v) m(ecsZ) p Fk(+) p Fs(2) p
Fq 199 3810 a(\000) p Fs 60 w(BOR) -8 b(THO:) 31 b(increase) f(size) g
(of) g(w) m(ork) h(b) m(y) f(n) m(v) m(ecsB) p Fk(+) p
Fs(4*n) m(v) m(ecsZ) p Fk(+) p Fs(5) 275 3967 y(The) f(C) h(syn) m(tax)
h(is:) p Fk 390 4095 a(void) 47 b(tresid\() e(n,) j(m,) f(d,) g(e,) g
(colZ,) g(mapZ,) f(eval,) g(iwork,) g(work,) h(res,) f(info\)) 629
4198 y(Integer) f(*n,) i(*m,) g(*mapZ,) f(*iwork,) g(*info;) 629
4302 y(DoublePrecision) d(*d,) k(*e,) g(**colZ,) f(*eval,) g(*work,) g
(*res;) 390 4510 y(/*) 724 4614 y(this) h(subroutine) e(computes) g
(the) i(residual) 724 4821 y(res) g(=) g(max_\(i\)) f(|) i(T) f
(z_\(i\)) g(-) g(\\lambda_\(i\)) e(z_\(i\)) h(|/\() h(|) g(T) h(|) f(*)
h(ulp) f(\)) 724 5029 y(where) f(T) i(is) f(an) g(n-by-n) 94
b(tridiagonal) 45 b(matrix,) 772 5132 y(\() i(\\lambda_\(i\)) e(,) i
(z_\(i\)) g(\)) g(is) g(a) h(standard) d(eigen-pair,) g(and) 724
5236 y(ULP) i(=) g(\(machine) f(precision\)) f(*) i(\(machine) f
(base\)) p 90 rotate dyy eop
%%Page: 51 52
51 51 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(51) p Fk 724 299 a(|T|) 47 b(is) g(the) g(1-norm) f
(of) h(T) 724 403 y(|T) g(z_\(i\)) g(....) f(|) i(is) f(the) g
(infinity-norm) 724 506 y(res) g(is) g(reasonable) e(if) i(it) h(is) f
(of) g(order) f(about) h(50) g(or) g(less.) 533 714 y(Arguments) 533
818 y(---------) 533 922 y(In) g(the) g(following:) 629
1129 y(INTEGER) 475 b(=) 47 b("pointer) f(to) h(Integer") 629
1233 y(DOUBLE) f(PRECISION) f(=) i("pointer) f(to) h(DoublePrecision")
629 1440 y(me) 238 b(=) 47 b(this) g(processor's) e(id) i(\(=) g
(mxmynd_\(\)\)) 629 1544 y(nprocs) f(=) h(number) f(of) h(allocated) f
(processors) f(\() i(=) h(mxnprc_\(\)\)) 629 1648 y(nvecsZ) e(=) h
(number) f(of) h(entries) f(in) h(mapZ) g(equal) f(to) i(me) 1249
1752 y(\(=) f(count_list\() e(me,) i(mapZ,) f(n) i(\)\)) 629
1856 y(sDP) 190 b(=) 47 b(sizeof\() f(DoublePrecision) e(\)) 533
2167 y(n.......) i(\(input\)) g(INTEGER) 963 2271 y(dimension) f(of) i
(the) g(matrix) f(T) 533 2478 y(m.......) g(\(input\)) g(INTEGER) 963
2582 y(number) g(of) h(eigenvalues/eigenvectors) 533
2790 y(d.......) f(\(input\)) g(DOUBLE) g(PRECISION) f(array,) h
(length) g(\(n\)) 963 2893 y(diagonal) f(of) i(T) 533
3101 y(e.......) f(\(input\)) g(DOUBLE) g(PRECISION) f(array,) h
(length) g(\(n\)) 963 3205 y(e[0]) g(=) i(junk,) 963
3308 y(e[1:n-1]) d(=) j(sub-diagonal) c(of) j(T) 1392
3412 y(=) h(super-diagonal) c(of) j(T) 533 3620 y(colZ) g(...) g
(\(input\)) f(array) g(of) h(pointers) f(to) h(DoublePrecision,) 1345
3724 y(length) f(\(nvecsZ\)) 963 3827 y(The) h(part) f(of) h(matrix) g
(Z) g(owned) f(by) i(this) e(processer,) f(stored) 963
3931 y(in) i(packed) f(format,) g(i.e.,) g(colZ[i]) g(points) g(to) h
(the) g(start) 963 4035 y(of) g(the) g(i-th) f(column) h(of) g(matrix) f
(Z) h(owned) g(by) g(this) 963 4139 y(processor,) e(i) i(=) h(0) f(to) g
(nvecsZ-1.) 533 4346 y(mapZ) g(...) g(\(input\)) f(INTEGER) f(array,) h
(length) h(\(m\)) 963 4450 y(The) g(i-th) f(column) g(of) i(matrix) e
(Z) h(is) g(owned) g(by) g(processor) 963 4554 y(mapZ[i],) e(i) j(=) f
(0) h(to) f(m-1.) 533 4761 y(eval....) f(\(input\)) g(DOUBLE) g
(PRECISION) f(array,) h(length) g(\(m\)) 963 4865 y(the) h(eigenvalues)
533 5073 y(iwork...) f(\(workspace\)) e(INTEGER) i(array,) g
(length\(m\)) 533 5280 y(work....) g(\(workspace\)) e(DOUBLE) j
(PRECISION) e(array,) p 90 rotate dyy eop
%%Page: 52 53
52 52 bop Fs 150 -116 a(52) 3256 b(P) m(eIGS) p Fk 1535
299 a(length\() 46 b(mxlbuf_\(\)) g(/) h(sDP) g(+) g(1) h(\)) 533
506 y(res.....) e(\(output\)) f(INTEGER) 963 610 y(the) i(residual) e
(described) g(above.) 533 818 y(info....) h(\(output\)) f(INTEGER) 963
922 y(=) i(0,) g(not) g(currently) f(used) 390 1025 y(*/) 390
1189 y(void) h(resid\() f(n,) h(colA,) f(mapA,) h(m,) g(colZ,) f(mapZ,)
h(eval,) f(ibuffptr,) f(iwork,) h(work,) 963 1293 y(res,) g(info\)) 629
1396 y(Integer) f(*n,) i(*mapA,) f(*m,) h(*mapZ,) f(*iwork,) g(*info;)
629 1500 y(DoublePrecision) d(**colA,) j(**colZ,) g(*eval,) g
(**ibuffptr,) f(*work,) h(*res;) 390 1708 y(/*) 533 1812
y(this) h(subroutine) e(computes) g(the) i(residual) 533
2019 y(res) g(=) h(max_\(i\)) d(|) j(A) f(z_\(i\)) g(-) g
(\\lambda_\(i\)) e(z_\(i\)) h(|/\() h(|) h(A) f(|) g(*) h(ulp) f(\)) 533
2227 y(where) 533 2330 y(A) h(is) f(an) g(n-by-n) f(symmetric) f
(matrix,) h(in) h(packed) f(storage) g(format,) 533 2434
y(column) g(\(or) h(equivalently) e(row\)) h(distributed) 533
2642 y(\(lambda_i,) f(z_i\)) i(is) g(a) g(standard) f(eigen-pair) f(of)
i(A) h(and) 533 2746 y(Z) g(is) f(an) g(n-by-m) f(matrix) g(of) h
(eigenvectors,) e(in) i(packed) f(storage) g(format,) 533
2849 y(column) g(distributed) 533 3057 y(ULP) h(=) h(\(machine) d
(precision\)) g(*) j(\(machine) d(base\)) 533 3264 y(|A) i(z_\(i\)) g
(...) g(|) g(is) g(the) g(infinity-norm,) 533 3368 y(|A|) g(is) g(the) g
(1-norm) f(of) h(A,) 533 3472 y(res) g(is) g(reasonable) e(if) i(it) h
(is) f(of) g(order) f(about) h(50) g(or) g(less.) 533
3680 y(Arguments) 533 3783 y(---------) 533 3887 y(In) g(the) g
(following:) 629 4095 y(INTEGER) 475 b(=) 47 b("pointer) f(to) h
(Integer") 629 4198 y(DOUBLE) f(PRECISION) f(=) i("pointer) f(to) h
(DoublePrecision") 629 4406 y(me) 238 b(=) 47 b(this) g(processor's) e
(id) i(\(=) g(mxmynd_\(\)\)) 629 4510 y(nprocs) f(=) h(number) f(of) h
(allocated) f(processors) f(\() i(=) h(mxnprc_\(\)\)) 629
4614 y(nvecsA) e(=) h(number) f(of) h(entries) f(in) h(mapA) g(equal) f
(to) i(me) 1249 4717 y(\(=) f(count_list\() e(me,) i(mapA,) f(n) i
(\)\)) 629 4821 y(nvecsZ) e(=) h(number) f(of) h(entries) f(in) h(mapZ)
g(equal) f(to) i(me) 1249 4925 y(\(=) f(count_list\() e(me,) i(mapZ,) f
(m) i(\)\)) 629 5029 y(sDP) 190 b(=) 47 b(sizeof\() f(DoublePrecision) e
(\)) 533 5340 y(n.......) i(\(input\)) g(INTEGER) p 90 rotate
dyy eop
%%Page: 53 54
53 53 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(53) p Fk 963 299 a(dimension) 45
b(of) i(the) g(matrix) f(A) 533 506 y(colA) h(...) g(\(input\)) f
(array) g(of) h(pointers) f(to) h(DoublePrecision,) 1345
610 y(length) f(\(nvecsA\)) 963 714 y(The) h(part) f(of) h(matrix) g(A)
g(owned) f(by) i(this) e(processer) f(stored) 963 818
y(in) i(packed) f(format,) g(i.e.,) g(colA[i]) g(points) g(to) h(the) g
(diagonal) 963 922 y(element) f(of) h(the) g(i-th) f(column) g(\(or) h
(equivalently) e(row\)) h(of) i(A) 963 1025 y(owned) e(by) h(this) g
(processor,) e(i) i(=) h(0) f(to) g(nvecsA-1.) 533 1233
y(mapA) g(...) g(\(input\)) f(INTEGER) f(array,) h(length) h(\(n\)) 963
1337 y(The) g(i-th) f(column) g(\(or) h(equivalently) e(row\)) h(of) i
(A) f(is) 963 1440 y(owned) f(by) h(processor) f(mapA[i],) f(i) j(=) f
(0) g(to) h(n-1.) 533 1648 y(m.......) e(\(input\)) g(INTEGER) 963
1752 y(number) g(of) h(columns) f(of) h(Z,) g(i.e.) g(#) g(of) g
(eigenvalues/eigenvectors) 533 1959 y(colZ) g(...) g(\(input\)) f
(array) g(of) h(pointers) f(to) h(DoublePrecision,) 1345
2063 y(length) f(\(nvecsZ\)) 963 2167 y(The) h(part) f(of) h(matrix) g
(Z) g(owned) f(by) i(this) e(processer,) f(stored) 963
2271 y(in) i(packed) f(format,) g(i.e.,) g(colZ[i]) g(points) g(to) h
(the) g(start) 963 2374 y(of) g(the) g(i-th) f(column) h(of) g(matrix) f
(Z) h(owned) g(by) g(this) 963 2478 y(processor,) e(i) i(=) h(0) f(to) g
(nvecsZ-1.) 533 2686 y(mapZ) g(...) g(\(input\)) f(INTEGER) f(array,) h
(length) h(\(m\)) 963 2790 y(The) g(i-th) f(column) g(of) i(matrix) e
(Z) h(is) g(owned) g(by) g(processor) 963 2893 y(mapZ[i],) e(i) j(=) f
(0) h(to) f(m-1.) 533 3101 y(eval....) f(\(input\)) g(DOUBLE) g
(PRECISION) f(array,) h(length) g(\(m\)) 963 3205 y(the) h(eigenvalues)
533 3412 y(ibuffptr) f(\(workspace\)) e(array) j(of) g(pointers) f(to) h
(DoublePrecision,) 1535 3516 y(length) g(\(2) g(*) g(nvecsZ) f(+) i
(1\)) 533 3724 y(iwork...) e(\(workspace\)) e(INTEGER) i(array,) 1535
3827 y(length\() g(m) i(+) f(maximum\() f(nprocs,) g(n+nvecsA,) f
(i_mxm88) h(\)\)) 1535 3931 y(where) h(i_mxm88) f(=) h
(2*\(n+m\)+nvecsA+nvecsZ) 533 4139 y(work....) f(\(workspace\)) e
(DOUBLE) j(PRECISION) e(array,) 1535 4242 y(length\() h(nvecsZ) g(*) i
(n) f(+) h(maximum\() d(d_mxm88,) 2729 4346 y(n) i(+) h(1) f(+) g
(mxlbuf_\(\)) f(/) h(sDP) g(+) h(1) f(\)) 1535 4450 y(where) g(d_mxm88)
f(=) h(maximum) f(\() h(\(nvecsZ+1\)*n,) 2776 4554 y(mxlbuf_\(\)/sDP) e
(+) i(1) g(\)) 533 4761 y(res.....) f(\(output\)) f(DOUBLE) h
(PRECISION) 963 4865 y(the) h(residual) e(described) g(above.) 533
5073 y(info....) h(\(output\)) f(INTEGER) 963 5176 y(=) i(0,) g(not) g
(currently) f(used) p 90 rotate dyy eop
%%Page: 54 55
54 54 bop Fs 150 -116 a(54) 3256 b(P) m(eIGS) p Fk 438
299 a(*/) 390 462 y(void) 47 b(residual\() e(n,) i(colA,) f(mapA,) h
(colB,) f(mapB,) h(m,) g(colZ,) f(mapZ,) g(eval,) 1154
566 y(ibuffptr,) f(iwork,) h(work,) g(res,) h(info\)) 629
670 y(Integer) e(*n,) i(*mapA,) f(*mapB,) h(*m,) f(*mapZ,) h(*iwork,) e
(*info;) 629 774 y(DoublePrecision) e(**colA,) j(**colB,) g(**colZ,) g
(*eval,) g(**ibuffptr,) f(*work,) h(*res;) 390 981 y(/*) 533
1189 y(This) h(subroutine) e(computes) g(the) i(residual) 533
1396 y(res) g(=) h(max_\(i\)) d(|) j(A) f(z_\(i\)) g(-) g
(\\lambda_\(i\)) e(B) i(z_\(i\)) g(|/\() g(|) g(A) g(|) h(*) f(ulp) g
(\)) 533 1604 y(where) 533 1812 y(A) h(is) f(an) g(n-by-n) f(symmetric)
f(matrix,) h(in) h(packed) f(storage) g(format,) 533
1915 y(column) g(\(or) h(equivalently) e(row\)) h(distributed) 533
2123 y(B) i(is) f(an) g(n-by-n) f(symmetric) f(matrix,) h(in) h(packed)
f(storage) g(format,) 533 2227 y(column) g(\(or) h(equivalently) e
(row\)) h(distributed) 533 2434 y(\(lambda_i,) f(z_i\)) i(is) g(a) g
(generalized) e(eigen-pair) g(and) 533 2538 y(Z) j(is) f(an) g(n-by-m) f
(matrix) g(of) h(eigenvectors,) e(in) i(packed) f(storage) g(format,)
533 2642 y(column) g(distributed) 533 2849 y(ULP) h(=) h(\(machine) d
(precision\)) g(*) j(\(machine) d(base\)) 533 3057 y(|A) i(z_\(i\)) g
(...) g(|) g(is) g(the) g(infinity-norm,) 533 3161 y(|A|) g(is) g(the) g
(1-norm) f(of) h(A,) 533 3368 y(res) g(is) g(reasonable) e(if) i(it) h
(is) f(of) g(order) f(about) h(50) g(or) g(less.) 533
3576 y(Arguments) 533 3680 y(---------) 533 3783 y(In) g(the) g
(following:) 629 3991 y(INTEGER) 475 b(=) 47 b("pointer) f(to) h
(Integer") 629 4095 y(DOUBLE) f(PRECISION) f(=) i("pointer) f(to) h
(DoublePrecision") 629 4302 y(me) 238 b(=) 47 b(this) g(processor's) e
(id) i(\(=) g(mxmynd_\(\)\)) 629 4406 y(nprocs) f(=) h(number) f(of) h
(allocated) f(processors) f(\() i(=) h(mxnprc_\(\)\)) 629
4510 y(nvecsA) e(=) h(number) f(of) h(entries) f(in) h(mapA) g(equal) f
(to) i(me) 1058 4614 y(\(=) f(count_list\() e(me,) i(mapA,) f(n) i
(\)\)) 629 4717 y(nvecsB) e(=) h(number) f(of) h(entries) f(in) h(mapB)
g(equal) f(to) i(me) 1058 4821 y(\(=) f(count_list\() e(me,) i(mapB,) f
(n) i(\)\)) 629 4925 y(nvecsZ) e(=) h(number) f(of) h(entries) f(in) h
(mapZ) g(equal) f(to) i(me) 1058 5029 y(\(=) f(count_list\() e(me,) i
(mapZ,) f(m) i(\)\)) 629 5132 y(sDP) 190 b(=) 47 b(sizeof\() f
(DoublePrecision) e(\)) p 90 rotate dyy eop
%%Page: 55 56
55 55 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(55) p Fk 533 299 a(n.......) 46
b(\(input\)) g(INTEGER) 963 403 y(size) g(of) i(the) e(symmetric) g
(matrices) f(A) j(and) f(B,) 963 506 y(and) g(the) g(number) f(of) h
(rows) f(in) i(Z.) 533 714 y(colA) f(...) g(\(input\)) f(array) g(of) h
(pointers) f(to) h(DoublePrecision,) 1345 818 y(length) f(\(nvecsA\))
963 922 y(The) h(part) f(of) h(matrix) g(A) g(owned) f(by) i(this) e
(processer) f(stored) 963 1025 y(in) i(packed) f(format,) g(i.e.,) g
(colA[i]) g(points) g(to) h(the) g(diagonal) 963 1129
y(element) f(of) h(the) g(i-th) f(column) g(\(or) h(equivalently) e
(row\)) h(of) i(A) 963 1233 y(owned) e(by) h(this) g(processor,) e(i) i
(=) h(0) f(to) g(nvecsA-1.) 533 1440 y(mapA) g(...) g(\(input\)) f
(INTEGER) f(array,) h(length) h(\(n\)) 963 1544 y(The) g(i-th) f
(column) g(\(or) h(equivalently) e(row\)) h(of) i(A) f(is) 963
1648 y(owned) f(by) h(processor) f(mapA[i],) f(i) j(=) f(0) g(to) h
(n-1.) 533 1856 y(colB) f(...) g(\(input\)) f(array) g(of) h(pointers) f
(to) h(DoublePrecision,) 1345 1959 y(length) f(\(nvecsB\)) 963
2063 y(The) h(part) f(of) h(matrix) g(B) g(owned) f(by) i(this) e
(processer) f(stored) 963 2167 y(in) i(packed) f(format,) g(i.e.,) g
(colB[i]) g(points) g(to) h(the) g(diagonal) 963 2271
y(element) f(of) h(the) g(i-th) f(column) g(\(or) h(equivalently) e
(row\)) h(of) i(B) 963 2374 y(owned) e(by) h(this) g(processor,) e(i) i
(=) h(0) f(to) g(nvecsB-1.) 533 2582 y(mapB) g(...) g(\(input\)) f
(INTEGER) f(array,) h(length) h(\(n\)) 963 2686 y(The) g(i-th) f
(column) g(\(or) h(equivalently) e(row\)) h(of) i(B) f(is) 963
2790 y(owned) f(by) h(processor) f(mapB[i],) f(i) j(=) f(0) g(to) h
(n-1.) 533 2997 y(m.......) e(\(input\)) g(INTEGER) 963
3101 y(number) g(of) h(columns) f(of) h(Z,) g(i.e.,) g(#) g(of) g
(eigenvalues/eigenvectors) 533 3308 y(colZ) g(...) g(\(input\)) f
(array) g(of) h(pointers) f(to) h(DoublePrecision,) 1345
3412 y(length) f(\(nvecsZ\)) 963 3516 y(The) h(part) f(of) h(matrix) g
(Z) g(owned) f(by) i(this) e(processer,) f(stored) 963
3620 y(in) i(packed) f(format,) g(i.e.,) g(colZ[i]) g(points) g(to) h
(the) g(start) 963 3724 y(of) g(the) g(i-th) f(column) h(of) g(matrix) f
(Z) h(owned) g(by) g(this) 963 3827 y(processor,) e(i) i(=) h(0) f(to) g
(nvecsZ-1.) 533 4035 y(mapZ) g(...) g(\(input\)) f(INTEGER) f(array,) h
(length) h(\(m\)) 963 4139 y(The) g(i-th) f(column) g(of) i(matrix) e
(Z) h(is) g(owned) g(by) g(processor) 963 4242 y(mapZ[i],) e(i) j(=) f
(0) h(to) f(m-1.) 533 4450 y(eval....) f(\(input\)) g(DOUBLE) g
(PRECISION) f(array,) h(length) g(\(m\)) 963 4554 y(the) h(eigenvalues)
533 4761 y(ibuffptr) f(\(workspace\)) e(array) j(of) g(pointers) f(to) h
(DoublePrecision,) 1535 4865 y(length) g(\(3) g(*) g(nvecsZ) f(+) i
(3\)) 533 5073 y(iwork...) e(\(workspace\)) e(INTEGER) i(array,) 1535
5176 y(length\() g(m) i(+) f(nvecsA+nvecsB+nvecsZ+) 1917
5280 y(MAX\() g(i_mxm88,) e(nprocs,) h(nvecsA) g(+) i(n) f(\)) p
90 rotate dyy eop
%%Page: 56 57
56 56 bop Fs 150 -116 a(56) 3256 b(P) m(eIGS) p Fk 1535
299 a(where) 47 b(i_mxm88) f(=) h(2*\(n+m\)+nvecsA+nvecsZ+nve) o(csB)
533 506 y(work....) f(\(workspace\)) e(DOUBLE) j(PRECISION) e(array,)
1535 610 y(length\() h(2*nvecsZ) g(*) h(n) h(+) f(maximum\() f
(d_mxm88,) 2681 714 y(n) h(+) h(1) f(+) h(mxlbuf_\(\)) d(/) i(sDP) g(+)
h(1) f(\)) 1535 818 y(where) g(d_mxm88) f(=) h(maximum) f(\() h
(\(nvecsZ+1\)*n,) 2776 922 y(mxlbuf_\(\)/sDP) e(+) i(1) g(\)) 533
1129 y(res.....) f(\(output\)) f(INTEGER) 963 1233 y(the) i(residual) e
(described) g(above.) 533 1440 y(info....) h(\(output\)) f(INTEGER) 963
1544 y(=) i(0,) g(not) g(currently) f(used) 438 1752
y(*/) 390 1915 y(void) h(ortho\() f(n,) h(m,) g(colZ,) f(mapZ,) h
(ibuffptr,) e(iwork,) h(work,) h(ort,) f(info\)) 629
2019 y(Integer) f(*n,) i(*m,) g(*mapZ,) f(*iwork,) g(*info;) 629
2123 y(DoublePrecision) d(**colZ,) j(**ibuffptr,) f(*work,) 94
b(*ort;) 390 2330 y(/*) 533 2538 y(This) 47 b(subroutine) e(computes) g
(the) i(infinity-norm) d(measure:) 533 2746 y(ort) j(=) h(max_i) e(|) h
(\(Z^t.Z\)_i) f(-) h(I_i) g(|) g(/) h(ULP,) 533 2953
y(for) f(the) g(standard) f(symmetric) f(eigensystem) g(problem) g
(where) 629 3161 y(Z) i(is) g(N-by-M) 629 3264 y(I) g(is) g(M-by-M.) 629
3368 y(Z_i) g(is) g(an) g(eigenvector,) 629 3472 y(\(Z^t.Z\)_i) e(is) i
(the) g(i-th) g(column) f(of) h(Z^t.Z) 629 3576 y(I_i) g(is) g(the) g
(i-th) f(column) g(of) i(the) e(m-by-m) h(identity) e(matrix) 629
3680 y(ULP) i(=) g(\(machine) f(precision\)) f(*) i(\(machine) f
(base\)) 629 3783 y(|.|) h(is) g(the) g(infinity-norm.) 533
3991 y(res) g(is) g(reasonable) e(if) i(it) h(is) f(of) g(order) f
(about) h(50) g(or) g(less.) 533 4302 y(MUST) g(have) f(M) i(<=) f(N.)
95 b(If) 47 b(M) h(>) f(N) h(then) e(program) g(exits.) 533
4406 y(This) h(is) g(not) g(a) g(limitation) e(of) j(this) e
(subroutine) f(as) i(M) h(>) f(N) 533 4510 y(implies) f(the) h(columns)
f(of) h(Z) g(are) g(linearly) f(dependent,) f(which) 533
4614 y(implies) h("ort") g(will) h(always) f(be) h(large) g(in) g(this)
f(case.) 533 4821 y(Arguments) 533 4925 y(---------) 533
5029 y(In) h(the) g(following:) 629 5236 y(INTEGER) 475
b(=) 47 b("pointer) f(to) h(Integer") 629 5340 y(DOUBLE) f(PRECISION) f
(=) i("pointer) f(to) h(DoublePrecision") p 90 rotate
dyy eop
%%Page: 57 58
57 57 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(57) p Fk 629 403 a(me) 238 b(=) 47
b(this) g(processor's) e(id) i(\(=) g(mxmynd_\(\)\)) 629
506 y(nprocs) f(=) h(number) f(of) h(allocated) f(processors) f(\() i
(=) h(mxnprc_\(\)\)) 629 610 y(nvecsZ) e(=) h(number) f(of) h(entries) f
(in) h(mapZ) g(equal) f(to) i(me) 1249 714 y(\(=) f(count_list\() e
(me,) i(mapZ,) f(m) i(\)\)) 629 818 y(nvecsZ_max) d(=) i(maximum) f
(number) g(of) h(entries) f(in) h(mapZ) g(equal) f(to) h(i,) 1249
922 y(i) h(=) f(0) g(to) h(nprocs-1) 1249 1025 y(\(=) f(max) g(over) g
(i) g(of) g(count_list\() e(i,) i(mapZ,) g(m) g(\)\)) 629
1129 y(sDP) 190 b(=) 47 b(sizeof\() f(DoublePrecision) e(\)) 533
1440 y(n.......) i(\(input\)) g(INTEGER) 963 1544 y(Number) g(of) h
(rows) g(in) g(Z) 533 1752 y(m.......) f(\(input\)) g(INTEGER) 963
1856 y(number) g(of) h(columns) f(in) h(Z) g(\(i.e.,) g(#) g(of) 963
1959 y(eigenvalues/eigenvector) o(s\).) 963 2063 y(Must) f(have) h(m) g
(<=) h(n.) 533 2271 y(colZ) f(...) g(\(input\)) f(array) g(of) h
(pointers) f(to) h(DoublePrecision,) 1345 2374 y(length) f(\(nvecsZ\))
963 2478 y(The) h(part) f(of) h(matrix) g(Z) g(owned) f(by) i(this) e
(processer,) f(stored) 963 2582 y(in) i(packed) f(format,) g(i.e.,) g
(colZ[i]) g(points) g(to) h(the) g(start) 963 2686 y(of) g(the) g(i-th)
f(column) h(of) g(matrix) f(Z) h(owned) g(by) g(this) 963
2790 y(processor,) e(i) i(=) h(0) f(to) g(nvecsZ-1.) 533
2997 y(mapZ) g(...) g(\(input\)) f(INTEGER) f(array,) h(length) h
(\(m\)) 963 3101 y(The) g(i-th) f(column) g(of) i(matrix) e(Z) h(is) g
(owned) g(by) g(processor) 963 3205 y(mapZ[i],) e(i) j(=) f(0) h(to) f
(m-1.) 533 3412 y(ibuffptr) f(\(workspace\)) e(array) j(of) g(pointers)
f(to) h(DoublePrecision,) 1535 3516 y(length\(nvecsZ\)) 533
3724 y(iwork...) f(\(workspace\)) e(INTEGER) i(array,) g(length\() g(7)
i(*) f(m) h(\)) 533 3931 y(work....) e(\(workspace\)) e(DOUBLE) j
(PRECISION) e(array,) 1535 4035 y(length\() h(nvecsZ) g(*) i(n) f(+) h
(maximum\() d(d_mxm25,) 2872 4139 y(mxlbuf_\(\)) g(/) j(sDP) e(+) i(1) f
(\)) 1535 4242 y(where) g(d_mxm25) f(=) h(maximum) f(\() h(2*m,) 2776
4346 y(\(nvecsZ) f(+) i(2*nvecsZ_max\)*n) 43 b(\)) 533
4554 y(ort.....) j(\(output\)) f(INTEGER) 963 4658 y(the) i(residual) e
(described) g(above.) 533 4865 y(info....) h(\(output\)) f(INTEGER) 963
4969 y(=) i(0,) g(not) g(currently) f(used) 438 5176
y(*/) 390 5340 y(void) h(b_ortho) e(\() j(n,) f(colB,) f(mapB,) h(m,) g
(colZ,) f(mapZ,) h(ibuffptr,) e(iwork,) h(work,) g(ort,) h(info\)) p
90 rotate dyy eop
%%Page: 58 59
58 58 bop Fs 150 -116 a(58) 3256 b(P) m(eIGS) p Fk 629
299 a(Integer) 45 b(*n,) i(*mapB,) f(*m,) h(*mapZ,) f(*iwork,) g
(*info;) 629 403 y(DoublePrecision) d(**colB,) j(**colZ,) g
(**ibuffptr,) f(*work,) 93 b(*ort;) 390 610 y(/*) 533
714 y(This) 47 b(subroutine) e(computes) g(the) 95 b(infinity-norm) 44
b(measure:) 533 922 y(ort) j(=) h(max_i) e(|) h(\(Z^t.B.Z\)_i) e(-) j
(I_i) e(|) i(/) f(ULP,) 533 1129 y(for) g(the) g(generalized) e
(symmetric) g(eigensystem) g(problem) h(where) 629 1337
y(Z) h(is) g(N-by-M) f(and) h(distributed) e(by) i(columns) 629
1440 y(B) g(is) g(N-by-N) f(symmetric) g(and) h(in) g(packed) f
(storage) 629 1544 y(I) h(is) g(M-by-M.) 629 1648 y(Z_i) g(is) g(an) g
(eigenvector,) 629 1752 y(\(Z^t.B.Z\)_i) d(is) k(the) e(i-th) h(column)
f(of) h(Z^t.B.Z) 629 1856 y(I_i) g(is) g(the) g(i-th) f(column) g(of) i
(the) e(m-by-m) h(identity) e(matrix) 629 1959 y(ULP) i(=) g(\(machine)
f(precision\)) f(*) i(\(machine) f(base\)) 629 2063 y(|.|) h(is) g(the)
g(infinity-norm.) 533 2271 y(res) g(is) g(reasonable) e(if) i(it) h(is)
f(of) g(order) f(about) h(50) g(or) g(less.) 533 2478
y(MUST) g(have) f(M) i(<=) f(N.) 95 b(If) 47 b(M) h(>) f(N) h(then) e
(program) g(exits.) 533 2582 y(This) h(is) g(not) g(a) g(limitation) e
(of) j(this) e(subroutine) f(as) i(M) h(>) f(N) 533 2686
y(implies) f(the) h(columns) f(of) h(Z) g(are) g(linearly) f
(dependent,) f(which) 533 2790 y(implies) h("ort") g(will) h(always) f
(be) h(large) g(in) g(this) f(case.) 533 2997 y(Arguments) 533
3101 y(---------) 533 3205 y(In) h(the) g(following:) 629
3412 y(INTEGER) 475 b(=) 47 b("pointer) f(to) h(Integer") 629
3516 y(DOUBLE) f(PRECISION) f(=) i("pointer) f(to) h(DoublePrecision")
629 3724 y(me) 238 b(=) 47 b(this) g(processor's) e(id) i(\(=) g
(mxmynd_\(\)\)) 629 3827 y(nprocs) f(=) h(number) f(of) h(allocated) f
(processors) f(\() i(=) h(mxnprc_\(\)\)) 629 3931 y(nvecsZ) e(=) h
(number) f(of) h(entries) f(in) h(mapZ) g(equal) f(to) i(me) 1249
4035 y(\(=) f(count_list\() e(me,) i(mapZ,) f(n) i(\)\)) 629
4139 y(nvecsZ_max) d(=) i(maximum) f(number) g(of) h(entries) f(in) h
(mapZ) g(equal) f(to) h(i,) 1249 4242 y(i) h(=) f(0) g(to) h(nprocs-1)
1249 4346 y(\(=) f(max) g(over) g(i) g(of) g(count_list\() e(i,) i
(mapZ,) g(n) g(\)\)) 629 4450 y(sDP) 190 b(=) 47 b(sizeof\() f
(DoublePrecision) e(\)) 533 4761 y(n.......) i(\(input\)) g(INTEGER) 963
4865 y(Number) g(of) h(rows) g(and) g(columns) e(in) j(B,) f(and) 963
4969 y(the) g(number) f(of) h(rows) g(in) g(Z) 533 5176
y(colB) g(...) g(\(input\)) f(array) g(of) h(pointers) f(to) h
(DoublePrecision,) 1345 5280 y(length) f(\(nvecsB\)) p
90 rotate dyy eop
%%Page: 59 60
59 59 bop Fs 150 -116 a(Chapter) 30 b(4:) 41 b(Calling) 28
b(Syn) m(tax) 2456 b(59) p Fk 963 299 a(The) 47 b(part) f(of) h(matrix)
g(B) g(owned) f(by) i(this) e(processer) f(stored) 963
403 y(in) i(packed) f(format,) g(i.e.,) g(colB[i]) g(points) g(to) h
(the) g(diagonal) 963 506 y(element) f(of) h(the) g(i-th) f(column) g
(\(or) h(equivalently) e(row\)) h(of) i(B) 963 610 y(owned) e(by) h
(this) g(processor,) e(i) i(=) h(0) f(to) g(nvecsB-1.) 533
818 y(mapB) g(...) g(\(input\)) f(INTEGER) f(array,) h(length) h(\(n\))
963 922 y(The) g(i-th) f(column) g(\(or) h(equivalently) e(row\)) h(of)
i(B) f(is) 963 1025 y(owned) f(by) h(processor) f(mapB[i],) f(i) j(=) f
(0) g(to) h(n-1.) 533 1233 y(m.......) e(\(input\)) g(INTEGER) 963
1337 y(number) g(of) h(columns) f(in) h(Z) g(\(i.e.,) g(#) g(of) 963
1440 y(eigenvalues/eigenvector) o(s\).) 963 1544 y(Must) f(have) h(m) g
(<=) h(n.) 533 1752 y(colZ) f(...) g(\(input\)) f(array) g(of) h
(pointers) f(to) h(DoublePrecision,) 1345 1856 y(length) f(\(nvecsZ\))
963 1959 y(The) h(part) f(of) h(matrix) g(Z) g(owned) f(by) i(this) e
(processer,) f(stored) 963 2063 y(in) i(packed) f(format,) g(i.e.,) g
(colZ[i]) g(points) g(to) h(the) g(start) 963 2167 y(of) g(the) g(i-th)
f(column) h(of) g(matrix) f(Z) h(owned) g(by) g(this) 963
2271 y(processor,) e(i) i(=) h(0) f(to) g(nvecsZ-1.) 533
2478 y(mapZ) g(...) g(\(input\)) f(INTEGER) f(array,) h(length) h
(\(m\)) 963 2582 y(The) g(i-th) f(column) g(of) i(matrix) e(Z) h(is) g
(owned) g(by) g(processor) 963 2686 y(mapZ[i],) e(i) j(=) f(0) h(to) f
(m-1.) 533 2893 y(ibuffptr) f(\(workspace\)) e(array) j(of) g(pointers)
f(to) h(DoublePrecision,) 1535 2997 y(length\() f(3*nvecsZ) g(+) h(1\))
533 3205 y(iwork...) f(\(workspace\)) e(INTEGER) i(array,) 1535
3308 y(length\() g(n+m) h(+) h(MAX\(nprocs,) c(3*n+2*m+nvecsB+nvecsZ) e
(\)) 533 3516 y(work....) k(\(workspace\)) e(DOUBLE) j(PRECISION) e
(array,) 1535 3620 y(length\() h(nvecsZ) g(*) i(\(n+m\)) e(+) i
(maximum\() d(d_mxm25,) h(d_mxm88,) 3158 3724 y(mxlbuf_\(\)) f(/) j
(sDP) f(+) g(1) h(\)) 1535 3827 y(where) f(d_mxm25) f(=) h(maximum\() f
(n+m,) 2729 3931 y(\(nvecsZ) f(+) j(2*nvecsZ_max\)*n) c(\)) 1822
4035 y(d_mxm88) i(=) h(maximum) f(\() h(\(nvecsZ+1\)*n,) 2776
4139 y(mxlbuf_\(\)/sDP) e(+) i(1) g(\)) 533 4346 y(ort.....) f
(\(output\)) f(INTEGER) 963 4450 y(the) i(residual) e(described) g
(above.) 533 4658 y(info....) h(\(output\)) f(INTEGER) 963
4761 y(=) i(0,) g(not) g(currently) f(used) 438 4865
y(*/) p 90 rotate dyy eop
%%Page: 60 61
60 60 bop Fs 150 -116 a(60) 3256 b(P) m(eIGS) p 90 rotate
dyy eop
%%Page: 61 62
61 61 bop Fs 150 -116 a(Chapter) 30 b(5:) 41 b(Utilites) 2752
b(61) p Fp 150 299 a(5) 80 b(Utilites) p Fs 275 527 a(P) m(eIGS) 26
b(has) g(a) h(few) f(utilites) e(that) j(ma) m(y) g(assist) f(y) m(ou) g
(in) f(allo) s(cating) h(scratc) m(h) h(space,) h(\014nd) d(arra) m(y) h
(index) 150 637 y(of) 31 b(matrix) e(elemen) m(ts) i(stored) f(in) g
(1-D) h(arra) m(ys.) p Fr 150 891 a(5.1) 68 b(FMEMREQ) 45
b(and) f(memreq) p 1891 891 41 6 v 49 w(:) 68 b(Scratc) l(h) 45
b(Memory) g(Size) p Fs 275 1083 a(Since) 38 b(scratc) m(h) j(space) f
(ma) m(y) h(v) -5 b(ary) 39 b(dep) s(ending) e(on) j(data) g
(distribution) c(of) k(the) g(matrices,) j(P) m(eIGS) 150
1192 y(pro) m(vides) f(a) h(subroutine) p Fo 40 w(FMEMREQ) p
Fs 43 w(and) p Fo 42 w(memreq) p 2118 1192 28 5 v Fs
76 w(for) f(determining) f(on) i(eac) m(h) g(pro) s(cessor) g(the) 150
1302 y(amoun) m(t) 31 b(of) f(scratc) m(h) i(storage) g(space) f(that) f
(is) g(required) e(to) k(complete) e(the) h(computation) f(safely) -8
b(.) 275 1435 y(Curren) m(tly) g(,) p Fo 24 w(FMEMREQ) p
Fs 25 w(and) p Fo 24 w(memreq) p 1712 1435 V Fs 58 w(only) 23
b(pro) m(vide) h(the) h(scratc) m(h) g(memory) g(space) g(requirmen) m
(t) 150 1545 y(information) 20 b(for) h(the) g(general,) i(the) f
(standard,) g(and) f(the) h(tridiagonal) d(symmetric) i(eigensystem) g
(driv) m(ers) 150 1654 y(\(i.e.,) 31 b(the) g(lev) m(el) f(I) g
(routines\).) 275 1788 y(The) f(F77) j(calling) d(syn) m(tax) i(for) f
(FMEMREQ) h(is:) p Fk 772 1915 a(subroutine) 45 b(FMEMREQ) h(\() h
(type,) f(n,) i(mapA,) e(mapB,) g(mapZ,) h(isize,) 629
2019 y($) 238 b(rsize,) 46 b(ptrsize,) g(iwork\)) 772
2123 y(integer) g(type,) g(n,) h(isize,) f(rsize,) g(ptrsize) 772
2227 y(integer) g(mapA\(*\),) f(mapB\(*\),) h(mapZ\(*\),) f(iwork\(*\))
390 2330 y(c) 390 2434 y(c) 191 b(input:) 390 2538 y(c) g(------) 390
2642 y(c) g(type) 46 b(\(input/integer\)) 390 2746 y(c) 429
b(return) 46 b(memory) g(requirements) f(for:) 390 2849
y(c) 429 b(=) 48 b(0) 190 b(the) 47 b(generalized) e(eigensystem) g
(problem) h(\(pdspgvx) f(or) i(pdspgv) f(\)) 390 2953
y(c) 429 b(=) 48 b(1) 190 b(the) 47 b(standard) f(eigensystem) f
(problem) g(\(pdspevx) h(or) h(pdspev) f(\)) 390 3057
y(c) 429 b(=) 48 b(2) 190 b(the) 47 b(tri-diagonal) e(standard) g
(eigensystem) g(problem) h(\(pdsptri) f(\)) 390 3264
y(c) 191 b(n:) 47 b(size) f(of) i(the) f(A) g(and) g(B) g(matrices) 390
3472 y(c) 143 b(mapA) 47 b(:) g(integer) f(array) g(of) h(size) g(n;)
390 3576 y(c) 143 b(mapA[i],) 45 b(0<) j(i) f(<=) g(n,) g(is) h(the) f
(processor) e(holding) h(this) g(vector) 390 3783 y(c) 238
b(mapB) 47 b(:) g(integer) f(array) h(of) g(size) f(n;) 390
3887 y(c) 238 b(mapB[i],) 46 b(0<) h(i) h(<=) f(n,) g(is) g(the) g
(processor) e(holding) h(this) h(vector) 390 3991 y(c) 668
b(not) 47 b(used) f(unless) h(type) f(=) i(0.) 390 4198
y(c) 191 b(mapZ) 46 b(:) i(integer) e(array) g(of) h(size) g(n) 390
4302 y(c) 191 b(mapZ[i],) 45 b(0<) i(i) h(<=) f(n,) g(is) g(the) g
(processor) f(holding) f(this) i(vector) 390 4510 y(c) 191
b(output:) 390 4717 y(c) g(isize) 46 b(=) h(size) g(of) g(integer) f
(workspace) f(required) 390 4821 y(c) 191 b(rsize) 46
b(=) h(size) g(of) g(Double) f(precision) g(workspace) f(required) 390
4925 y(c) 191 b(ptr_size) 45 b(=) j(size) e(of) h(secondary) f(Double) g
(precision) f(workspace) g(required) 390 5029 y(c) 716
b(this) 46 b(will) h(be) g(converted) e(to) j(an) f(array) f(of) 390
5132 y(c) 716 b("pointers) 45 b(to) i(double) f(precision") 390
5236 y(c) 390 5340 y(c) 191 b(iscratch) 45 b(...) i(integer) f(scratch)
g(space) g(of) h(length) f(3*n) p 90 rotate dyy eop
%%Page: 62 63
62 62 bop Fs 150 -116 a(62) 3256 b(P) m(eIGS) 275 299
y(The) 29 b(C) h(calling) f(syn) m(tax) i(for) p Fo 30
w(memreq) p 1603 299 28 5 v Fs 64 w(is:) p Fk 390 449
a(void) 47 b(memreq_\(type,) d(n,) j(mapA,) f(mapB,) h(mapZ,) f(isize,)
g(rsize,) g(ptr_size,) g(iscratch) f(\)) 629 553 y(Integer) g(*type,) i
(*n,) f(*mapA,) h(*mapB,) f(*mapZ,) g(*isize,) g(*rsize,) f(*ptr_size,)
g(*iscratch;) 390 761 y(/*) 581 864 y(this) i(subroutine) e(computes) g
(the) i(memory) f(requirements) f(for) h(this) h(processor) e(to) 581
968 y(safely) h(setup) g(the) h(eigensystem) e(problem.) 93
b(On) 47 b(output,) f(isize,) g(risize,) g(and) 581 1072
y(ptr_size) 581 1176 y(are) h(the) g(sizes) f(\() i(in) f(the) g
(respective) e(data) h(types) h(\)) g(of) g(the) g(data) g(needed) 581
1280 y(by) g(the) g(eigensystem) 581 1383 y(program.) 93
b(It) 47 b(performs) f(the) h(basic) f(error) h(checks) f(and) h
(assumes) e(that) i(the) g(user) g(has) 581 1487 y(input) f(the) h
(correct) f(information) f(into) h(type,) h(n,) g(mapA,) f(mapB,) h
(mapZ) 581 1695 y(input:) 1201 1798 y(memory) f(for) 533
2006 y(*type) h(=) g(0) 191 b(the) 47 b(generalized) d(eigensystem) h
(problem) h(\(pdspgvx) f(or) j(pdspgv) e(\)) 820 2110
y(=) h(1) 191 b(the) 47 b(standard) e(eigensystem) g(problem) h
(\(pdspevx) f(or) i(pdspev) f(\)) 820 2214 y(=) h(2) 191
b(the) 47 b(tri-diagonal) d(standard) i(eigensystem) e(problem) i
(\(pdsptri) g(\)) 629 2421 y(n:) h(size) f(of) i(the) f(matrix) 629
2629 y(mapA) f(:) i(integer) e(array) g(of) h(size) g(n;) 629
2732 y(mapA[i],) e(0<=) i(i) h(<) f(n,) g(is) g(the) g(processor) f
(holding) f(this) i(vector) 629 2940 y(mapB) f(:) i(integer) e(array) g
(of) h(size) g(n;) 629 3044 y(mapB[i],) e(0<=) i(i) h(<) f(n,) g(is) g
(the) g(processor) f(holding) f(this) i(vector) 1058
3148 y(not) g(used) g(unless) f(type) g(=) i(0) 581 3355
y(mapZ) f(:) g(integer) f(array) g(of) h(size) g(n) 581
3459 y(mapZ[i],) e(0<=) i(i) h(<) f(n,) g(is) h(the) f(processor) e
(holding) h(this) g(vector) 581 3666 y(output:) 581 3874
y(isize) g(=) i(size) e(of) i(integer) d(workspace) h(required) 581
3978 y(rsize) g(=) i(size) e(of) i(Double) e(precision) f(workspace) g
(required) 581 4082 y(ptr_size=) g(size) i(of) g(array) f(of) i
("pointer) d(to) i(DoublePrecision") d(workspace) 581
4289 y(iscratch) h(...) i(integer) f(scratch) g(space) g(of) i(length) e
(3*n) 581 4497 y(at) h(this) g(point) f(one) h(can) g(allocate) e(the) i
(required) f(memory) g(using) g(C) 581 4600 y(or) h(using) f(off-sets) g
(from) h(Fortran) e(arrays) 390 4704 y(*/) p Fr 150 5016
a(5.2) 68 b(General) 46 b(Utilities) p Fs 275 5230 a(There) k(are) h(3)
g(general) f(utilities) e(that) k(ma) m(y) f(b) s(e) f(of) h(use.) 101
b(In) 50 b(F77:) p Fo 82 w(CI) p 2961 5230 V 33 w(ENTR) -8
b(Y) p Fs(,) p Fo 50 w(CI) p 3495 5230 V 33 w(SIZE) p
Fs(,) p Fo 150 5340 a(FIL) p 303 5340 V 32 w(MAPVEC) p
Fs(.) 30 b(In) g(C,) p Fo 30 w(ci) p 1102 5340 V 33 w(en) m(try) p
Fs(,) p Fo 32 w(ci) p 1469 5340 V 33 w(size) p 1645 5340
V Fs 34 w(,) g(and) p Fo 30 w(\014l) p 1987 5340 V 33
w(map) m(v) m(ec) p 2315 5340 V Fs 33 w(.) p 90 rotate
dyy eop
%%Page: 63 64
63 63 bop Fs 150 -116 a(Chapter) 30 b(5:) 41 b(Utilites) 2752
b(63) 275 299 y(Their) 33 b(use) j(is) e(listed) g(b) s(elo) m(w) h
(for) g(the) h(fortran) f(v) m(ersion.) 55 b(The) 35
b(analogous) h(description) e(applies) f(to) 150 408
y(the) e(C) f(v) m(ersion.) p Fq 199 548 a(\000) p Fs
60 w(CI) p 434 548 28 4 v 32 w(ENTR) -8 b(Y) 45 b(:returns) f(index) f
(a\(i,j\)) i(in) f(F) -8 b(ortran) 45 b(for) g(a) g(1-D) h(data) f
(arra) m(y) h(storing) e(the) h(lo) m(w) m(er) 330 657
y(triangular) 29 b(part) h(of) h(a) f(symmetric) g(matrix) p
Fq 199 794 a(\000) p Fs 60 w(CI) p 434 794 V 32 w(SIZE:) 44
b(returns) f(the) i(total) g(memory) g(required) d(for) p
Fk 45 w(") p Fs(standard) p Fk(") p Fs 43 w(column) h(wrapping) g(of) i
(a) 330 903 y(symmetric) 30 b(matrix) p Fq 199 1040 a(\000) p
Fs 60 w(FIL) p 484 1040 V 33 w(MAPVEC:) 37 b(from) g(map) g(construct) h
(a) f(corresp) s(ondance) g(map) m(v) m(ec:) 56 b(the) 38
b(real) e(column/ro) m(w) 330 1150 y(index) 29 b(that) i(the) f(matrix)
g(on) g(this) g(pro) s(cessor) g(o) m(wns) p Fg 150 1383
a(5.2.1) 63 b(CI) p 606 1383 37 5 v 43 w(ENTR) -10 b(Y) 40
b(and) h(ci) p 1452 1383 V 44 w(en) m(try) p 1780 1383
V Fk 772 1575 a(integer) 46 b(function) f(ci_entry) h(\(me,) g(n,) i
(i,) f(j,) g(map\)) 772 1678 y(integer) f(me,) h(n,) g(i,) g(j,) g
(map\(*\)) 390 1782 y(c) 390 1886 y(c) 191 b(PeIGS) 46
b(utility) g(routine) 390 1990 y(c) 390 2093 y(c) 191
b(this) 46 b(routine) g(returns) g(the) h(F77) g(index) f(of) h(the) g
(a\(i,j\)) 390 2197 y(c) 191 b(for) 47 b(a) g(symmetric) e(matrix) h
(with) h(i) g(>=) h(j) 390 2301 y(c) 191 b(on) 47 b(processor) e(me) i
(stored) f(using) h(a) g(1-D) g(array) 390 2405 y(c) 390
2509 y(c) 191 b(if) 47 b(\(processor) e(=) i(me\)) 390
2612 y(c) 191 b(doesn't) 45 b(own) i(this) g(element) f(-1) h(is) g
(returned) 390 2716 y(c) 390 2820 y(c) 191 b(Argument:) 390
2924 y(c) 390 3027 y(c) g(me) 381 b(=) 47 b(\(input/integer\)) d
(processor) h(id) 390 3131 y(c) 390 3235 y(c) 191 b(n) 477
b(=) 47 b(\(input/integer\)) d(dimension) h(of) i(the) g(matrix) 390
3339 y(c) 390 3443 y(c) 191 b(i) 524 b(=) 48 b(\(input/integer\)) 43
b(the) k(row) g(index) g(of) g(the) g(element) f(a[j][i]) 390
3546 y(c) 390 3650 y(c) 191 b(j) 524 b(=) 48 b(\(input/integer\)) 43
b(the) k(column) f(index) h(of) g(the) g(element) f(a[j][i]) 390
3754 y(c) 390 3858 y(c) 191 b(map) 285 b(=) 48 b(\(input/integer) c
(array) i(\)) h(integer) f(array) h(of) g(length) f(n) 390
3961 y(c) 191 b(map[j]) 46 b(=) h(the) g(processor) e(id) j(holding) d
(column) h(j) 390 4065 y(c) 390 4198 y(int) h(ci_entry) e(\(me,) i(n,) g
(i,) g(j,) h(map\)) 629 4302 y(int) f(*me,) f(*n,) h(*i,) g(*j,) g
(*map;) 485 4406 y(/*) 581 4510 y(PeIGS) f(utility) g(routine) 581
4717 y(this) h(routine) e(returns) h(the) h(C) h(index) e(of) h(the) g
(a\(i,j\)) 581 4821 y(for) g(a) g(symmetric) f(matrix) g(with) g(i) i
(>=) f(j) 581 4925 y(on) g(processor) e(me) j(stored) e(using) g(a) h
(1-D) g(array) 581 5132 y(if) g(\(processor) e(=) j(me\)) 581
5236 y(doesn't) e(own) h(this) f(element) g(-1) h(is) g(returned) p
90 rotate dyy eop
%%Page: 64 65
64 64 bop Fs 150 -116 a(64) 3256 b(P) m(eIGS) p Fk 581
299 a(Argument:) 581 506 y(me) 381 b(=) 48 b(\(input/integer\)) 43
b(processor) j(id) 581 714 y(n) 477 b(=) 47 b(\(input/integer\)) d
(dimension) h(of) i(the) g(matrix) 581 922 y(i) 525 b(=) 47
b(\(input/integer\)) d(the) j(row) g(index) f(of) h(the) g(element) f
(a[j][i]) 581 1129 y(j) 525 b(=) 47 b(\(input/integer\)) d(the) j
(column) f(index) g(of) h(the) g(element) f(a[j][i]) 581
1337 y(map) 285 b(=) 48 b(\(input/integer) c(array) i(\)) i(integer) d
(array) i(of) g(length) f(n) 581 1440 y(map[j]) g(=) h(the) g
(processor) f(id) h(holding) f(column) g(j) 581 1648
y(*/) 772 1782 y(integer) g(function) f(ci_size_) h(\(me,) g(n,) i
(map\)) 772 1885 y(integer) e(me,) h(n,) g(map\(*\)) 390
1989 y(c) 390 2093 y(c) 191 b(Fortran) 45 b(and) i(C) h(callable) d(\()
j(not) f(very) f(portable) g(\)) 390 2197 y(c) 390 2301
y(c) 191 b(returns) 45 b(the) i(total) g(number) f(of) h(double) f
(precision) 390 2404 y(c) 191 b(storage) 45 b(location) h(required) g
(for) g(storing) g(the) h(lower) 390 2508 y(c) 191 b(triangular) 45
b(part) h(of) h(a) h(symmetric) d(matrix) h(distributed) 390
2612 y(c) 191 b(according) 45 b(the) i(map) 390 2716
y(c) 390 2819 y(c) 191 b(me) 429 b(=) 47 b(\(input/integer\)) d
(processor) h(id) 390 2923 y(c) 390 3027 y(c) 191 b(n) 524
b(=) 48 b(\(input/integer\)) 43 b(dimension) j(of) h(the) g(matrix) f
(and) h(also) 390 3131 y(c) 907 b(the) 46 b(length) h(of) g(the) g
(array) f(map) 390 3235 y(c) 390 3338 y(c) 191 b(map\(*\)) 141
b(=) 48 b(\(input/integer) c(array\)) i(length) g(n) h(array) g(of) g
(processor) e(ids) 390 3442 y(c) 390 3576 y(int) i(ci_size_) e(\(me,) i
(n,) g(map\)) 629 3680 y(int) g(*me,) f(*n,) h(*map;) 485
3783 y(/*) 581 3887 y(Fortran) f(and) h(C) g(callable) 581
4095 y(returns) f(the) h(total) f(number) g(of) h(double) f(precision)
581 4198 y(storage) g(location) f(required) h(for) h(storing) f(the) g
(lower) 581 4302 y(triangular) f(part) i(of) g(a) g(symmetric) e
(matrix) i(distributed) 581 4406 y(according) e(the) i(map) 581
4614 y(me) 429 b(=) 47 b(\(input/integer\)) d(processor) h(id) 581
4821 y(n) 525 b(=) 47 b(\(input/integer\)) d(dimension) h(of) i(the) g
(matrix) f(and) h(also) 581 4925 y(the) g(length) f(of) h(the) g(array)
f(map) 581 5132 y(map\(*\)) 141 b(=) 48 b(\(input/integer) c(array\)) i
(length) g(n) h(array) g(of) g(processor) e(ids) 581
5340 y(*/) p 90 rotate dyy eop
%%Page: 65 66
65 65 bop Fs 150 -116 a(Chapter) 30 b(5:) 41 b(Utilites) 2752
b(65) p Fk 772 299 a(integer) 46 b(function) f(fil_mapvec) g(\() j(me,)
f(n,) g(map,) f(mapvec\)) 772 403 y(integer) g(me,) h(n,) g(map,) f
(mapvec\(*\)) 390 506 y(c) 390 610 y(c) 191 b(from) 46
b(the) h(map) g(array) f(construct) g(a) h(shorter) 390
714 y(c) 191 b(array) 46 b(with) h(information) d(about) j(the) g
(vectors) e(stored) i(on) g(this) f(processor) 390 818
y(c) 390 922 y(c) 334 b(may) 47 b(be) g(compatibility) d(problems) i
(between) f(C) j(and) f(fortran) 390 1025 y(c) 390 1129
y(c) 191 b(mapvec\(i\)) 45 b(=) i(j) 390 1233 y(c) 191
b(i) 47 b(=) h(the) e(i-th) h(vector) f(stored) g(on) h(this) g
(processor) 390 1337 y(c) 191 b(j) 47 b(=) h(the) e(real) h(column/row)
e(indx) i(of) g(the) g(i-th) f(vector) 390 1440 y(c) 390
1544 y(c) 191 b(returns) 45 b(the) i(number) f(of) i(vectors) d(on) j
(this) e(processor) g(given) 390 1648 y(c) 191 b(by) 47
b(map) g(and) g(also) f(the) h(mapvec) f(list) 390 1752
y(c) 390 1856 y(c) 191 b(argument:) 390 1959 y(c) 390
2063 y(c) g(me) 429 b(=) 47 b(\(input/integer\)) d(node) i(id) 390
2167 y(c) 390 2271 y(c) 191 b(n) 524 b(=) 48 b(\(input/integer\)) 43
b(dimension) j(of) h(the) g(matrix) 390 2374 y(c) 390
2478 y(c) 191 b(map) 333 b(=) 47 b(\(input/integer) d(array\)) i
(distribution) f(of) i(the) g(columns) f(of) h(the) g(matrix) 390
2582 y(c) 1479 b(length) 46 b(n) 390 2686 y(c) 390 2790
y(c) 191 b(mapvec) 93 b(=) 48 b(\(output/integer) c(array\)) i(length) g
(n) 390 2893 y(c) 390 3057 y(int) h(fil_mapvec_) e(\() i(me,) g(n,) g
(map,) g(mapvec\)) 629 3161 y(int) g(*me,) f(*n,) h(*map,) f(*mapvec;)
485 3264 y(/*) 581 3368 y(from) h(the) f(map) h(array) g(construct) e
(a) i(shorter) 581 3472 y(array) f(with) h(information) e(about) h(the)
h(vectors) f(stored) g(on) h(this) g(processor) 581 3680
y(mapvec[i]) e(=) j(j) 581 3783 y(i) f(=) h(the) f(i-th) f(vector) g
(stored) h(on) g(this) f(processor) 581 3887 y(j) h(=) h(the) f(real) f
(column/row) f(indx) i(of) g(the) g(i-th) g(vector) 581
4095 y(returns) f(the) h(number) f(of) h(vectors) f(on) h(this) g
(processor) e(given) 581 4198 y(by) i(map) g(and) g(also) g(the) f
(mapvec) h(list) 581 4406 y(argument:) 581 4614 y(me) 429
b(=) 47 b(\(input/integer\)) d(node) j(id) 581 4821 y(n) 525
b(=) 47 b(\(input/integer\)) d(dimension) h(of) i(the) g(matrix) 581
5029 y(map) 333 b(=) 48 b(\(input/integer) c(array\)) i(distribution) e
(of) j(the) g(columns) f(of) h(the) g(matrix) 1917 5132
y(length) f(n) 581 5340 y(mapvec) 94 b(=) 47 b(\(output/integer) d
(array\)) i(length) g(n) p 90 rotate dyy eop
%%Page: 66 67
66 66 bop Fs 150 -116 a(66) 3256 b(P) m(eIGS) p Fk 581
403 a(*/) 390 635 y(void) 47 b(sfnorm\() e(n,) j(colA,) e(mapA,) g
(norm,) h(iwork,) f(work,) g(info\)) 629 739 y(Integer) f(*n,) i
(*mapA,) f(*iwork,) g(*info;) 629 843 y(DoublePrecision) d(**colA,) j
(*work,) g(*norm;) 485 1050 y(/*) 581 1154 y(computes) f(the) i(F-norm)
f(of) i(a) f(symmetric) e(n-by-n) h(matrix) h(A,) g(where) 581
1362 y(F-norm\(A\)) e(=) j(sqrt\() e(sum_i,j) g(a_i,j^2) g(\)) 581
1569 y(n) 334 b(=) 47 b(size) g(of) g(the) g(matrix) 581
1673 y(colA) 190 b(=) 47 b(DoublePrecision) d(pointer) i(to) h(the) g
(columns) 581 1777 y(mapA) 190 b(=) 47 b(distribution) e(of) i(the) g
(columns) 581 1880 y(iwork) 142 b(=) 47 b(integer) f(scratch) g(space)
581 1984 y(work) 190 b(=) 47 b(DoublePrecision) d(precision) h(scratch)
h(space) 581 2192 y(*/) p 90 rotate dyy eop
%%Page: 67 68
67 67 bop Fs 150 -116 a(Chapter) 30 b(6:) 41 b(Error) 29
b(Handling) 2437 b(67) p Fp 150 299 a(6) 80 b(Error) 54
b(Handling) p Fs 275 533 a(Since) 40 b(the) i(P) m(eIGS) g(routines) e
(are) i(designed) f(to) h(w) m(ork) g(with) e(lists) g(of) i(pro) s
(cessors,) i(and) d(this) f(list) 150 643 y(of) 45 b(pro) s(cessors) e
(ma) m(y) i(not) g(b) s(e) f(all) f(the) i(pro) s(cessors) f(allo) s
(cated) g({) h(there) g(ma) m(y) g(t) m(w) m(o) g(P) m(eIGS) g
(routines) 150 752 y(running) 34 b(on) i(t) m(w) m(o) h(di\013eren) m
(t) f(sets) h(of) f(pro) s(cessors) g(sim) m(ultaneously) e({) j
(global) f(c) m(hec) m(king) h(of) f(data) h(do) s(es) 150
862 y(not) f(w) m(ork.) 59 b(Instead,) 38 b(the) e(set) h(of) f(pro) s
(cessor) g(ids) f(app) s(earing) f(in) h(mapA,) i(mapB,) f(and/or) g
(mapZ) g(are) 150 971 y(used) 28 b(to) h(determine) f(a) p
Fk 28 w(") p Fs(master) p Fk(") p Fs 29 w(pro) s(cessor) g(list.) 39
b(P) m(eIGS) 28 b(then) h(tries) f(to) h(ha) m(v) m(e) g(all) f(pro) s
(cessors) g(in) f(this) p Fk 150 1081 a(") p Fs(master) p
Fk(") p Fs 30 w(list) i(return) g(the) i(same) g(INF) m(O) g(whenev) m
(er) f(p) s(ossible.) 275 1215 y(All) 22 b(of) i(the) g(lev) m(el) g(1)
g(and) p Fo 24 w(some) g(of) g(the) g(lev) m(el) i(2) e(routines) p
Fs 25 w(do) g(extensiv) m(e) g(c) m(hec) m(king) h(of) f(the) g(input) e
(data.) 150 1325 y(In) 34 b(particular,) h(they) h(mak) m(e) g(sure) e
(that) i(the) f(input) f(data) h(on) g(a) h(pro) s(cessor) f(is) p
Fk 34 w(") p Fs(v) -5 b(aild) p Fk(") p Fs(.) 53 b(If) 34
b(an) m(y) i(input) 150 1435 y(data) e(is) f(in) m(v) -5
b(alid) 31 b(on) i(a) h(pro) s(cessor,) g(then) g(that) g(pro) s
(cessor) f(prin) m(ts) f(a) i(negativ) m(e) h(v) -5 b(alue) 33
b(of) g(INF) m(O) h(to) h(the) 150 1544 y(standard) 25
b(error) h(output) f(unit) g(and) g(terminates) h(program) g
(execution.) 39 b(In) 25 b(this) g(case) i(other) f(pro) s(cessors) 150
1654 y(are) h(not) f(informed) f(of) h(the) h(error) f(and) g(ma) m(y) h
(con) m(tin) m(ue) f(program) h(execution.) 39 b(If) 26
b(some) h(pro) s(cessors) f(ha) m(v) m(e) 150 1763 y(in) m(v) -5
b(alid) 32 b(data) k(and) e(some) h(ha) m(v) m(e) h(v) -5
b(alid) 33 b(data,) j(then) f(some) g(of) g(the) g(pro) s(cessors) f
(will) e(con) m(tin) m(ue) j(running) 150 1873 y(and) 30
b(will) d(ha) m(v) m(e) 32 b(to) f(b) s(e) f(killed) e(b) m(y) i(the) h
(user.) 275 2007 y(If) i(all) g(of) h(the) g(input) f(data) h(on) g
(eac) m(h) h(pro) s(cessor) f(is) f(v) -5 b(alid,) 34
b(then) f(the) i(pro) s(cessors) e(in) g(the) p Fk 34
w(") p Fs(master) p Fk(") p Fs 150 2117 a(pro) s(cessor) d(list) f
(compare) j(their) d(data) i(to) h(mak) m(e) f(sure) f(it) g(is) g
(consisten) m(t) h(across) g(the) g(pro) s(cessors.) 41
b(If) 30 b(the) 150 2227 y(input) 24 b(data) j(is) f(not) g(consisten) m
(t) h(on) f(all) f(pro) s(cessors,) i(then) f(the) h(pro) s(cessors) f
(with) f(incosisen) m(t) g(data) i(prin) m(t) 150 2336
y(a) 39 b(negativ) m(e) i(INF) m(O) e(and) f(an) h(error) g(message) h
(to) g(the) f(standard) f(error) h(output) f(unit) g(indicating) f(the)
150 2446 y(nature) 26 b(of) h(the) g(problem) e(to) j(standard) e
(error.) 39 b(With) 26 b(inconsisten) m(t) g(data) h(all) f(pro) s
(cessors) g(in) f(the) p Fk 27 w(") p Fs(mas-) 150 2555
y(ter) p Fk(") p Fs 32 w(list) 31 b(try) h(to) g(return) f(the) h(same)
h(v) -5 b(alue) 31 b(of) h(INF) m(O) h(and) e(terminate) h(program) g
(execution) g(together.) 150 2665 y(Ho) m(w) m(ev) m(er,) 39
b(with) c(some) h(t) m(yp) s(es) g(of) g(data) h(inconsistencies) d(it)
h(is) g(not) h(p) s(ossible) d(to) k(exit) f(gracefully) f(and) 150
2775 y(some) c(pro) s(cessors) f(will) d(con) m(tin) m(ue) k(running.)
38 b(These) 30 b(pro) s(cessors) g(m) m(ust) g(b) s(e) g(killed) e(b) m
(y) i(the) h(user.) 275 2909 y(All) k(P) m(eIGS) i(routines) e(return) h
(a) h(p) s(ositiv) m(e) e(INF) m(O) i(error) g(co) s(de) f(if) g
(something) g(go) s(es) h(wrong) f(in) g(the) 150 3019
y(computation.) 57 b(The) 35 b(v) -5 b(alue) 35 b(of) h(INF) m(O) g
(should) e(b) s(e) h(the) h(same) g(on) g(all) e(participating) g(pro) s
(cessors) i(and) 150 3128 y(can) 30 b(b) s(e) f(used) g(to) i
(determine) e(what) g(w) m(en) m(t) i(wrong.) 40 b(Program) 30
b(execution) g(is) f(not) h(stopp) s(ed) e(for) i(p) s(ositiv) m(e) 150
3238 y(INF) m(Os.) p 90 rotate dyy eop
%%Page: 68 69
68 68 bop Fs 150 -116 a(68) 3256 b(P) m(eIGS) p 90 rotate
dyy eop
%%Page: 69 70
69 69 bop Fs 150 -116 a(Chapter) 30 b(7:) 41 b(BUGS) 2790
b(69) p Fp 150 299 a(7) 80 b(BUGS) p Fs 275 533 a(In) 29
b(this) f(c) m(hapter) j(w) m(e) f(describ) s(e) e(some) i(p) s
(ossible) d(problems) h(asso) s(ciated) j(with) d(our) h(implemen) m
(tation) 150 643 y(of) i(the) f(P) m(eIGS) h(eigensolv) m(er.) 330
777 y(1\)) c(If) g(the) g(user) f(wishes) f(to) i(solv) m(e) g(only) f
(for) h(a) g(fraction) f(of) h(the) g(eigen-pairs) f(the) g(curren) m
(t) h(co) s(de) g(asks) 330 887 y(for) g(\() g(but) g(needs) f(only) h
(the) g(minim) m(um) d(memory) j(space) h(\)) f(the) g(same) h(memory) f
(space) h(as) f(for) g(a) g(full) 330 996 y(eigen-system) i(solv) m(e) f
(to) h(satisfy) f(the) g(error) g(c) m(hec) m(king) h(routines) e(and) g
(to) i(prev) m(en) m(t) g(race) g(condition.) 330 1106
y(W) -8 b(e) 32 b(are) e(w) m(orking) g(on) g(elimanating) f(this) h
(restriction.) 330 1240 y(2\)) k(The) f(in) m(v) m(erse) g(iteration) g
(with) f(mo) s(di\014ed) f(Gram) i(Sc) m(hmidt) f(curren) m(t) h(do) s
(es) g(a) h(\014xed) f(n) m(um) m(b) s(er) f(of) 330
1350 y(com) m(bined) h(iterations.) 50 b(This) 32 b(pro) s(cess) h(can)
h(theoretically) f(fail) g(to) h(con) m(v) m(erge) i(to) e(an) g(eigen)
m(v) m(ector) 330 1460 y(on) c(a) h(degenerate) h(eigen-sub-space.) 330
1594 y(3\)) c(The) f(error) g(rep) s(orting) f(is) h(b) s(eing) f(done)
h(on) h(all) e(pro) s(cessors.) 39 b(One) 27 b(should) f(just) h(mak) m
(e) h(pro) s(cessor) 330 1704 y(0) j(rep) s(ort) f(errors.) 330
1838 y(4\)) f(The) f(C) g(co) s(des) h(calling) e(C) h(co) s(de) g
(needs) g(a) h(fortran) f(driv) m(er) f(so) i(that) g(the) g
(mxsubs.cpp) d(co) s(des) j(get) 330 1948 y(initialized) e(correctly) -8
b(...SUN) 32 b(common) f(blo) s(c) m(k) f(is) f(...) 330
2082 y(5\)) 37 b(When) f(solving) f(a) h(tridiagonal) f(problem) f
(with) h(n) g(=) h(2053) i(on) e(four) f(pro) s(cessors) h(of) g(an) g
(In) m(tel) 330 2192 y(P) -8 b(ARA) m(GON) 34 b(w) m(e) e(sp) s
(oradically) e(get) j(large) g(residuals.) 44 b(The) 32
b(problem) e(is) i(in) f(mxm25,) i(the) g(eigen-) 330
2301 y(v) m(ector) 43 b(bac) m(k-transformation.) 75
b(W) -8 b(e) 43 b(ha) m(v) m(e) g(not) f(b) s(een) f(able) g(to) h
(\014nd) e(an) m(y) i(problems) e(with) h(the) 330 2411
y(P) m(eIGS) 29 b(co) s(de,) g(and) f(b) s(eliev) m(e) g(that) h(the) g
(errors) f(o) s(ccuring) f(here) i(are) g(caused) f(b) m(y) h(a) g
(system) g(problem) 330 2521 y(ha) m(ving) f(to) g(do) g(with) f(the) i
(use) e(of) p Fk 29 w(") p Fs(virtual) p Fk(") p Fs 25
w(memory) h(on) g(the) h(no) s(des) e(\(this) g(problem) g(exceeds) i
(the) 330 2630 y(ph) m(ysical) g(memory) h(a) m(v) -5
b(ailable) 30 b(on) g(a) h(no) s(de\).) 330 2765 y(W) -8
b(e) 36 b(appreciate) f(an) m(y) g(advice) f(and) g(rep) s(orts) g(of) h
(bugs.) 53 b(W) -8 b(e) 35 b(ask) g(the) g(user) f(to) h(mail) f(us) f
(all) h(of) h(the) 330 2874 y(input) i(parameters) j(and) e(the) h
(parallel) f(\() h(or) g(serial) f(\)) h(en) m(vironmen) m(t) g(\() g
(as) h(w) m(ell) e(as) h(\)) g(op) s(erating) 330 2984
y(system) 31 b(v) m(ersion) e(n) m(um) m(b) s(er.) 330
3118 y(There) 40 b(are) h(lik) m(ely) e(to) i(b) s(e) f(unkno) m(wn) f
(bugs) h(in) g(the) g(co) s(de) h(and) f(w) m(e) h(strongly) f
(recommend) g(that) 330 3228 y(the) d(user) f(run) f(the) h(residual) f
(and) h(orthogonalit) m(y) h(c) m(hec) m(king) g(routines) e(to) j(c) m
(hec) m(k) g(the) e(results) g(of) 330 3337 y(computations) 30
b(whenev) m(er) g(practical.) p 90 rotate dyy eop
%%Page: 70 71
70 70 bop Fs 150 -116 a(70) 3256 b(P) m(eIGS) p 90 rotate
dyy eop
%%Page: 71 72
71 71 bop Fs 150 -116 a(Index) 3286 b(71) p Fp 330 299
a(Index) p Fr 150 614 a(B) p Fj 330 736 a(BUGS) p Fc
21 w(.) 12 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fj 46 w(69) p Fr 150 980
a(C) p Fj 330 1102 a(C) 26 b(co) r(de:) 35 b(b) p 666
1102 24 4 v 27 w(ortho) p Fc 23 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) p Fj 48 w(57) 330 1193 y(C) 26 b(co) r(de:) 35
b(c) n(holeski) p Fc 17 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) p Fj 43 w(34) 330 1285 y(C) 26 b(co) r(de:) 35 b(ci) p
678 1285 V 28 w(en) n(try) p Fc 18 w(.) 12 b(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) p Fj 44 w(63) 330 1376 y(C) 26 b(co) r(de:) 35
b(ci) p 678 1376 V 28 w(size) p 825 1376 V Fc 43 w(.) 12
b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p Fj
40 w(64) 330 1468 y(C) 26 b(co) r(de:) 35 b(\014l) p
687 1468 V 28 w(map) n(v) n(ec) p 966 1468 V Fc 43 w(.) 13
b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fj 43 w(65) 330 1559 y(C) 26
b(co) r(de:) 35 b(in) n(v) n(erseL) p Fc 9 w(.) 12 b(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) p Fj 35 w(36) 330 1650 y(C) 26
b(co) r(de:) 35 b(memreq) p 892 1650 V Fc 44 w(.) 12
b(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fj 44 w(62) 330
1742 y(C) 26 b(co) r(de:) 35 b(mxm25) p Fc 7 w(.) 10
b(.) j(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p Fj
32 w(37) 330 1833 y(C) 26 b(co) r(de:) 35 b(mxm5x) p
Fc 21 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fj 49 w(39) 330 1925 y(C) 26 b(co) r(de:) 35 b(mxm88) p
Fc 7 w(.) 10 b(.) j(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p
Fj 32 w(41) 330 2016 y(C) 26 b(co) r(de:) 35 b(ortho) p
Fc 22 w(.) 12 b(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 47 w(56) 330 2107 y(C) 26 b(co) r(de:) 35 b(p) r(dsp) r(ev) p
Fc 21 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p Fj 48 w(18,) 26
b(20) 330 2199 y(C) g(co) r(de:) 35 b(p) r(dsp) r(evx) p
Fc 9 w(.) 11 b(.) h(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 34 w(24) 330 2290 y(C) 26 b(co) r(de:) 35 b(p) r(dspgv) p
Fc 10 w(.) 11 b(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p
Fj 35 w(30) 330 2382 y(C) 26 b(co) r(de:) 35 b(pstebz) p
Fc 22 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 48 w(44) 330 2473 y(C) 26 b(co) r(de:) 35 b(pstein) p
Fc 11 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) p
Fj 36 w(47) 330 2564 y(C) 26 b(co) r(de:) 35 b(resid) p
Fc 14 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fj 39 w(52) 330 2656 y(C) 26 b(co) r(de:) 35 b(residual) p
Fc 17 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fj 43 w(54) 330 2747 y(C) 26 b(co) r(de:) 35 b(sfnorm) p
Fc 15 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fj 40 w(66) 330 2839 y(C) 26 b(co) r(de:) 35 b(tred2) p
Fc 24 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 49 w(42) 330 2930 y(C) 26 b(co) r(de:) 35 b(tresid) p
Fc 17 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p
Fj 43 w(50) 330 3021 y(C) 26 b(input) p Fc 16 w(.) 12
b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fj 42 w(11) 330 3113 y(C) 26 b(routine) g(c) n(holeski)
p Fc 6 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 32 w(34) 330 3204 y(c) n(holeski) 26 b(factorization) p
Fc 11 w(.) 15 b(.) d(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fj 36 w(34) p
Fr 150 3449 a(E) p Fj 330 3570 a(eigensystem:regular) 27
b(symmetric) p Fc 13 w(.) 10 b(.) i(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fj 38 w(18) 330 3662 y(error) 26 b(handling) p
Fc 16 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) p
Fj 42 w(67) p Fr 150 3919 a(F) p Fj 330 4040 a(F77) 27
b(co) r(de:) 34 b(b) r(ortho) p Fc 18 w(.) 13 b(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) p Fj 43 w(50) 330 4132 y(F77) 27 b(co) r(de:) 34
b(CI) p 777 4132 V 28 w(ENTR) -6 b(Y) p Fc 11 w(.) 11
b(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) p Fj 36 w(63) 330 4223 y(F77) 27 b(co) r(de:) 34
b(ci) p 749 4223 V 29 w(size) p Fc 10 w(.) 13 b(.) f(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fj 36 w(64) 330 4315 y(F77) 27 b(co) r(de:) 34
b(FIL) p 820 4315 V 28 w(MAPVEC) p Fc 8 w(.) 12 b(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 33 w(64) 330 4406 y(F77) 27 b(co) r(de:) 34 b(FMEMREQ) p
Fc 15 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) p Fj 40 w(61) 330 4497 y(F77) 27
b(co) r(de:) 34 b(mxm25) p Fc 7 w(.) 11 b(.) i(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) p Fj 33 w(37) 330 4589 y(F77) 27 b(co) r(de:) 34
b(mxm5x) p Fc 6 w(.) 10 b(.) j(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fj 32 w(37) 330 4680 y(F77) 27 b(co) r(de:) 34 b(mxm88) p
Fc 7 w(.) 11 b(.) i(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fj 33 w(37) 2205 614 y(F77) 26 b(co) r(de:) 35 b(ortho) p
Fc 23 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fj 48 w(50) 2205 707 y(F77) 26 b(co) r(de:) 35 b(PDSPEV) p
Fc 8 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) p Fj 34 w(18) 2205
799 y(F77) 26 b(co) r(de:) 35 b(p) r(dsp) r(evx) p Fc
9 w(.) 12 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fj 35 w(18) 2205
891 y(F77) 26 b(co) r(de:) 35 b(p) r(dspgv) p Fc 10 w(.) 12
b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fj 36 w(29) 2205
983 y(F77) 26 b(co) r(de:) 35 b(PDSPGVX) p Fc 12 w(.) 12
b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) p Fj 38 w(29) 2205 1075 y(F77) 26
b(co) r(de:) 35 b(PSTEBZ) p Fc 14 w(.) 14 b(.) e(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 40 w(43) 2205 1167 y(F77) 26 b(co) r(de:) 35 b(resid) p
Fc 14 w(.) 13 b(.) g(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 40 w(49) 2205 1260 y(F77) 26 b(co) r(de:) 35 b(residual) p
Fc 18 w(.) 13 b(.) f(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p Fj
43 w(49) 2205 1352 y(F77) 26 b(co) r(de:) 35 b(tresid) p
Fc 18 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) p
Fj 43 w(49) 2205 1444 y(fortran) 26 b(input) p Fc 18
w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 44 w(10) p Fr 2025 1705 a(G) p Fj 2205 1829 a(generalized) 27
b(symmetrix) c(eigensolv) n(er) p Fc 12 w(.) 14 b(.) e(.) g(.) h(.) f
(.) g(.) h(.) p Fj 37 w(29) p Fr 2025 2090 a(I) p Fj
2205 2213 a(in) n(v) n(erse) 25 b(of) i(lo) n(w) n(er) f(triangular) h
(matrix) p Fc 19 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 45 w(36) p Fr 2025 2475 a(M) p Fj 2205 2598 a(matrix) 25
b(m) n(ultiplication) p Fc 24 w(.) 12 b(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fj 50 w(37) 2205 2690 y(MPI) 26 b(Use) p Fc 15 w(.) 13
b(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) p Fj 41 w(13) p Fr 2025 2939 a(O) p Fj 2205
3062 a(o) n(v) n(erview) p Fc 20 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) p
Fj 47 w(3) p Fr 2025 3311 a(P) p Fj 2205 3434 a(pstebz) p
Fc 21 w(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) p Fj 47 w(43) 2205 3526
y(pstein) p Fc 9 w(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.)
h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p Fj 35 w(47) p
Fr 2025 3788 a(R) p Fj 2205 3911 a(residual) 26 b(and) g(orthogonalit) n
(y) g(c) n(hec) n(ks) p Fc 21 w(.) 13 b(.) f(.) g(.) h(.) f(.) g(.) h
(.) p Fj 47 w(49) p Fr 2025 4172 a(S) p Fj 2205 4296
a(symmetric) 24 b(input) p Fc 15 w(.) 11 b(.) i(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) p Fj 41 w(11) p Fr 2025 4557 a(T) p Fj
2205 4680 a(tred2) p Fc 22 w(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) h(.) f(.) p
Fj 48 w(42) p 90 rotate dyy eop
%%Page: 72 73
72 72 bop Fs 150 -116 a(72) 3256 b(P) m(eIGS) p 90 rotate
dyy eop
%%Page: -1 74
-1 73 bop Fs 3725 -116 a(i) p Fp 330 299 a(T) -13 b(able) 54
b(of) g(Con) l(ten) l(ts) p Fr 330 641 a(1) 135 b(P) l(eIGS:) 45
b(an) g(o) l(v) l(erview) p Fb 27 w(.) 21 b(.) f(.) f(.) h(.) f(.) g(.)
h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) p
Fr 72 w(3) p Fs 449 778 a(1.1) 92 b(Problems) 29 b(that) i(P) m(eIGS) g
(can) f(Solv) m(e) p Fa 8 w(.) 15 b(.) g(.) h(.) f(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) p Fs 38 w(3) 449 888 y(1.2) 92
b(Computers) 29 b(for) h(whic) m(h) g(P) m(eIGS) g(is) g(Suitable) p
Fa 24 w(.) 15 b(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fs 56 w(3) 449 997
y(1.3) 92 b(BLAS) 30 b(and) g(Floating) g(P) m(oin) m(t) h
(Computations) p Fa 23 w(.) 14 b(.) h(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fs 53 w(3) 449
1107 y(1.4) 92 b(Algorithms) p Fa 26 w(.) 15 b(.) g(.) g(.) g(.) g(.) g
(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) p
Fs 57 w(4) 449 1216 y(1.5) 92 b(P) m(ortabilit) m(y) p
Fa 13 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) p Fs 43 w(4) 449 1326 y(1.6) 92
b(Supp) s(ort) p Fa 22 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fs 54 w(5) 449 1435 y(1.7) 92 b(Thanks) p Fa 15 w(.) 14
b(.) h(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) p Fs 45 w(5) p Fr 330 1678
a(2) 135 b(Installation) p Fb 24 w(.) 22 b(.) d(.) h(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) p Fr 69 w(7) 330
1948 y(3) 135 b(Con) l(ten) l(t:) 61 b(Co) t(de) 45 b(F) -11
b(unctionalities) 46 b(and) f(Data) 599 2081 y(Structure) p
Fb 13 w(.) 19 b(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f
(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f
(.) h(.) f(.) g(.) p Fr 58 w(9) p Fs 449 2218 a(3.1) 92
b(Summary) p Fa 15 w(.) 14 b(.) h(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.)
g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fs 45 w(9) 449
2327 y(3.2) 92 b(Data) 32 b(La) m(y) m(out) p Fa 18 w(.) 17
b(.) e(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fs 47 w(10) 748 2437 y(3.2.1) 93 b(F) -8 b(ortran) 31
b(Data) h(Structure) p Fa 27 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.)
g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g
(.) g(.) p Fs 57 w(10) 748 2546 y(3.2.2) 93 b(C) 29 b(Data) k
(Structure) p Fa 16 w(.) 14 b(.) h(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h
(.) f(.) g(.) g(.) g(.) g(.) g(.) p Fs 45 w(11) 748 2656
y(3.2.3) 93 b(MPI) 30 b(Use) p Fa 16 w(.) 15 b(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) p Fs 45 w(13) p Fr 330 2898 a(4) 135
b(Calling) 46 b(Syn) l(tax) p Fb 16 w(.) 20 b(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h
(.) f(.) h(.) f(.) h(.) p Fr 60 w(15) p Fs 449 3035 a(4.1) 92
b(Lev) m(el) 31 b(I) f(Subroutines) p Fa 12 w(.) 12 b(.) j(.) h(.) f(.)
g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) h(.) p Fs 41 w(15) 449 3145 y(4.2) 92 b(PDSPEV:) 30
b(Real) h(Symmetric) e(Eigensystem) h(Solv) m(er) p Fa
26 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fs 56 w(18) 449 3254 y(4.3) 92 b(PDSPGV) 30 b(and) g(PDSPGVX:) h
(Generalized) f(Symmetric) 631 3364 y(Eigensystem) g(Solv) m(er) p
Fa 27 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) p
Fs 56 w(29) 449 3474 y(4.4) 92 b(Lev) m(el) 31 b(I) s(I) e(Subroutines)
p Fa 16 w(.) 13 b(.) i(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) p Fs
45 w(34) 748 3583 y(4.4.1) 93 b(Choleski) 28 b(F) -8
b(actorization) 32 b(of) f(P) m(ositiv) m(e) f(De\014nite) 930
3693 y(Symmetric) f(Matrix) p Fa 25 w(.) 15 b(.) g(.) g(.) g(.) h(.) f
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fs 55 w(34) 748 3802 y(4.4.2) 93 b(In) m(v) m(erse) 30
b(of) h(Lo) m(w) m(er) g(T) -8 b(riangular) 29 b(Matrix) p
Fa 28 w(.) 16 b(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) p Fs 58 w(36) 748 3912 y(4.4.3) 93 b(Matrix) 30 b(Multiplication) p
Fa 17 w(.) 12 b(.) j(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fs 46 w(37) 748 4022 y(4.4.4) 93 b(TRED2:) 41 b(Householder) 29
b(reduction) g(of) i(a) g(symmetric) 930 4131 y(matrix) e(to) i
(tridiagonal) e(form) p Fa 16 w(.) 14 b(.) i(.) f(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) p Fs 45 w(42) 748 4241 y(4.4.5) 93 b(PSTEBZ) 29
b(eigen) m(v) -5 b(alues) 30 b(of) g(real) g(symmetric) g(tridiagonal)
930 4350 y(matrix) p Fa 21 w(.) 14 b(.) h(.) g(.) g(.) g(.) g(.) g(.) g
(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) p Fs 51 w(43) 748 4460 y(4.4.6) 93
b(PSTEIN:) 29 b(eigen) m(v) m(ectors) j(of) f(real) f(symmetric) g
(tridiagonal) 930 4570 y(matrix) p Fa 21 w(.) 14 b(.) h(.) g(.) g(.) g
(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p Fs 51 w(47) 748
4679 y(4.4.7) 93 b(Residual) 28 b(and) i(Orthogonalit) m(y) g(c) m(hec)
m(ks) p Fa 16 w(.) 17 b(.) e(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.)
g(.) g(.) g(.) p Fs 46 w(49) p Fr 330 4922 a(5) 135 b(Utilites) p
Fb 13 w(.) 22 b(.) d(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h
(.) f(.) h(.) f(.) g(.) h(.) p Fr 58 w(61) p Fs 449 5059
a(5.1) 92 b(FMEMREQ) 31 b(and) e(memreq) p 1671 5059
28 4 v 33 w(:) 41 b(Scratc) m(h) 31 b(Memory) g(Size) p
Fa 25 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fs 55 w(61) 449 5168 y(5.2) 92 b(General) 30 b(Utilities) p
Fa 26 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fs 57 w(62) 748 5278 y(5.2.1) 93 b(CI) p 1130 5278 V
32 w(ENTR) -8 b(Y) 30 b(and) g(ci) p 1758 5278 V 32 w(en) m(try) p
1997 5278 V Fa 48 w(.) 15 b(.) g(.) g(.) g(.) g(.) g(.) h(.) f(.) g(.) g
(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) g(.) p
Fs 44 w(63) p 90 rotate dyy eop
%%Page: -2 75
-2 74 bop Fs 150 -116 a(ii) 3294 b(P) m(eIGS) p Fr 330
83 a(6) 135 b(Error) 45 b(Handling) p Fb 29 w(.) 20 b(.) g(.) f(.) h(.)
f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f
(.) h(.) f(.) g(.) h(.) p Fr 74 w(67) 330 353 y(7) 135
b(BUGS) p Fb 40 w(.) 19 b(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f
(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) h(.) f(.) g
(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) p Fr 86 w(69) 330
623 y(Index) p Fb 41 w(.) g(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h
(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) f(.) g(.) h
(.) f(.) h(.) f(.) h(.) f(.) g(.) h(.) f(.) h(.) f(.) h(.) p
Fr 85 w(71) p 90 rotate dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

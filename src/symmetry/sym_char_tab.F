
      logical function sym_char_table(zname, nop, nir, iclass_dim,
     +     zir, zclass, chars)
c     
C$Id: sym_char_tab.F 21541 2011-11-18 19:22:14Z d3p852 $
      implicit double precision (a-h,p-w),integer (i-n),logical (o)
      implicit character *8 (z),character *1 (x)
      implicit character *4 (y)
#include "errquit.fh"
      parameter(maxireps=20)
#include "util.fh"
c     
      dimension iclass_dim(maxireps), ipointer(maxireps), zir(maxireps), 
     +     zclass(maxireps), chars(maxireps*maxireps)
c
c     Ipointer() used to return mapping of classes from gamess order
c     to standard order ... seems of no use now but I have left the code
c     lying around ... note that some groups lack this info
c
      integer ic1
      double precision chc1
      character*10 yc1
      character*4 yrc1
      parameter(nc1=1)
      dimension ic1(4), chc1(1,1), yc1(1), yrc1(1)
c     
c     
      integer ic1h
      double precision chc1h
      character*10 yc1h
      character*4 yrc1h
      parameter(nc1h=2)
      dimension ic1h(6), chc1h(2,2), yc1h(2), yrc1h(2)
c     
c     
      integer ic2
      double precision chc2
      character*10 yc2
      character*4 yrc2
      parameter(nc2=2)
      dimension ic2(6), chc2(2,2), yc2(2), yrc2(2)
c     
c     
      integer ic2h
      double precision chc2h
      character*10 yc2h
      character*4 yrc2h
      parameter(nc2h=4)
      dimension ic2h(10), chc2h(4,4), yc2h(4), yrc2h(4)
c     
c     
      integer ic2v
      double precision chc2v
      character*10 yc2v
      character*4 yrc2v
      parameter(nc2v=4)
      dimension ic2v(10), chc2v(4,4), yc2v(4), yrc2v(4)
c     
c     
      integer ic3
      double precision chc3
      character*10 yc3
      character*4 yrc3
      parameter(nc3=3)
      dimension ic3(8), chc3(3,3), yc3(3), yrc3(3)
c     
c     
      integer ic3h
      double precision chc3h
      character*10 yc3h
      character*4 yrc3h
      parameter(nc3h=6)
      dimension ic3h(14), chc3h(6,6), yc3h(6), yrc3h(6)
c     
c     
      integer ic3v
      double precision chc3v
      character*10 yc3v
      character*4 yrc3v
      parameter(nc3v=3)
      dimension ic3v(8), chc3v(3,3), yc3v(3), yrc3v(3)
c     
c     
      integer ic4
      double precision chc4
      character*10 yc4
      character*4 yrc4
      parameter(nc4=4)
      dimension ic4(10), chc4(4,4), yc4(4), yrc4(4)
c     
c     
      integer ic4h
      double precision chc4h
      character*10 yc4h
      character*4 yrc4h
      parameter(nc4h=8)
      dimension ic4h(18), chc4h(8,8), yc4h(8), yrc4h(8)
c     
c     
      integer ic4v
      double precision chc4v
      character*10 yc4v
      character*4 yrc4v
      parameter(nc4v=5)
      dimension ic4v(12), chc4v(5,5), yc4v(5), yrc4v(5)
c     
c     
      integer ic5
      double precision chc5
      character*10 yc5
      character*4 yrc5
      parameter(nc5=5)
      dimension ic5(12), chc5(5,5), yc5(5), yrc5(5)
c     
c     
      integer ic5h
      double precision chc5h
      character*10 yc5h
      character*4 yrc5h
      parameter(nc5h=10)
      dimension ic5h(22), chc5h(10,10), yc5h(10), yrc5h(10)
c     
c     
      integer ic5v
      double precision chc5v
      character*10 yc5v
      character*4 yrc5v
      parameter(nc5v=4)
      dimension ic5v(10), chc5v(4,4), yc5v(4), yrc5v(4)
c     
c     
      integer ic6
      double precision chc6
      character*10 yc6
      character*4 yrc6
      parameter(nc6=6)
      dimension ic6(14), chc6(6,6), yc6(6), yrc6(6)
c     
c     
      integer ic6h
      double precision chc6h
      character*10 yc6h
      character*4 yrc6h
      parameter(nc6h=12)
      dimension ic6h(26), chc6h(12,12), yc6h(12), yrc6h(12)
c     
c     
      integer ic6v
      double precision chc6v
      character*10 yc6v
      character*4 yrc6v
      parameter(nc6v=6)
      dimension ic6v(14), chc6v(6,6), yc6v(6), yrc6v(6)
c     
c     
      integer ic7
      double precision chc7
      character*10 yc7
      character*4 yrc7
      parameter(nc7=7)
      dimension ic7(16), chc7(7,7), yc7(7), yrc7(7)
c     
c     
      integer ic7v
      double precision chc7v
      character*10 yc7v
      character*4 yrc7v
      parameter(nc7v=5)
      dimension ic7v(12), chc7v(5,5), yc7v(5), yrc7v(5)
c     
c     
      integer ic8
      double precision chc8
      character*10 yc8
      character*4 yrc8
      parameter(nc8=8)
      dimension ic8(18), chc8(8,8), yc8(8), yrc8(8)
c     
c     
      integer ici
      double precision chci
      character*10 yci
      character*4 yrci
      parameter(nci=2)
      dimension ici(6), chci(2,2), yci(2), yrci(2)
c     
c     
      integer ics
      double precision chcs
      character*10 ycs
      character*4 yrcs
      parameter(ncs=2)
      dimension ics(6), chcs(2,2), ycs(2), yrcs(2)
c     
c     
      integer id2
      double precision chd2
      character*10 yd2
      character*4 yrd2
      parameter(nd2=4)
      dimension id2(10), chd2(4,4), yd2(4), yrd2(4)
c     
c     
      integer id2d
      double precision chd2d
      character*10 yd2d
      character*4 yrd2d
      parameter(nd2d=5)
      dimension id2d(12), chd2d(5,5), yd2d(5), yrd2d(5)
c     
c     
      integer id2h
      double precision chd2h
      character*10 yd2h
      character*4 yrd2h
      parameter(nd2h=8)
      dimension id2h(18), chd2h(8,8), yd2h(8), yrd2h(8)
c     
c     
      integer id3
      double precision chd3
      character*10 yd3
      character*4 yrd3
      parameter(nd3=3)
      dimension id3(8), chd3(3,3), yd3(3), yrd3(3)
c     
c     
      integer id3d
      double precision chd3d
      character*10 yd3d
      character*4 yrd3d
      parameter(nd3d=6)
      dimension id3d(14), chd3d(6,6), yd3d(6), yrd3d(6)
c     
c     
      integer id3h
      double precision chd3h
      character*10 yd3h
      character*4 yrd3h
      parameter(nd3h=6)
      dimension id3h(14), chd3h(6,6), yd3h(6), yrd3h(6)
c     
c     
      integer id4
      double precision chd4
      character*10 yd4
      character*4 yrd4
      parameter(nd4=5)
      dimension id4(12), chd4(5,5), yd4(5), yrd4(5)
c     
c     
      integer id4d
      double precision chd4d
      character*10 yd4d
      character*4 yrd4d
      parameter(nd4d=7)
      dimension id4d(16), chd4d(7,7), yd4d(7), yrd4d(7)
c     
c     
      integer id4h
      double precision chd4h
      character*10 yd4h
      character*4 yrd4h
      parameter(nd4h=10)
      dimension id4h(22), chd4h(10,10), yd4h(10), yrd4h(10)
c     
c     
      integer id5
      double precision chd5
      character*10 yd5
      character*4 yrd5
      parameter(nd5=4)
      dimension id5(10), chd5(4,4), yd5(4), yrd5(4)
c     
c     
      integer id5d
      double precision chd5d
      character*10 yd5d
      character*4 yrd5d
      parameter(nd5d=8)
      dimension id5d(18), chd5d(8,8), yd5d(8), yrd5d(8)
c     
c     
      integer id5h
      double precision chd5h
      character*10 yd5h
      character*4 yrd5h
      parameter(nd5h=8)
      dimension id5h(18), chd5h(8,8), yd5h(8), yrd5h(8)
c     
c     
      integer id6
      double precision chd6
      character*10 yd6
      character*4 yrd6
      parameter(nd6=6)
      dimension id6(14), chd6(6,6), yd6(6), yrd6(6)
c     
c     
      integer id6d
      double precision chd6d
      character*10 yd6d
      character*4 yrd6d
      parameter(nd6d=9)
      dimension id6d(20), chd6d(9,9), yd6d(9), yrd6d(9)
c     
c     
      integer id6h
      double precision chd6h
      character*10 yd6h
      character*4 yrd6h
      parameter(nd6h=12)
      dimension id6h(26), chd6h(12,12), yd6h(12), yrd6h(12)
c     
c     
      integer id8
      double precision chd8
      character*10 yd8
      character*4 yrd8
      parameter(nd8=7)
      dimension id8(16), chd8(7,7), yd8(7), yrd8(7)
c     
c     
      integer id8h
      double precision chd8h
      character*10 yd8h
      character*4 yrd8h
      parameter(nd8h=14)
      dimension id8h(30), chd8h(14,14), yd8h(14), yrd8h(14)
c     
c     
      integer ii
      double precision chi
      character*10 yi
      character*4 yri
      parameter(ni=5)
      dimension ii(12), chi(5,5), yi(5), yri(5)
c     
c     
      integer iih
      double precision chih
      character*10 yih
      character*4 yrih
      parameter(nih=10)
      dimension iih(22), chih(10,10), yih(10), yrih(10)
c
c
      integer io
      double precision cho
      character*10 yo
      character*4 yro
      parameter(no=5)
      dimension io(12), cho(5,5), yo(5), yro(5)
c     
c     
      integer ioh
      double precision choh
      character*10 yoh
      character*4 yroh
      parameter(noh=10)
      dimension ioh(22), choh(10,10), yoh(10), yroh(10)
c     
c     
      integer is2
      double precision chs2
      character*10 ys2
      character*4 yrs2
      parameter(ns2=2)
      dimension is2(6), chs2(2,2), ys2(2), yrs2(2)
c     
c     
      integer is4
      double precision chs4
      character*10 ys4
      character*4 yrs4
      parameter(ns4=4)
      dimension is4(10), chs4(4,4), ys4(4), yrs4(4)
c     
c     
      integer is6
      double precision chs6
      character*10 ys6
      character*4 yrs6
      parameter(ns6=6)
      dimension is6(14), chs6(6,6), ys6(6), yrs6(6)
c     
c     
      integer is8
      double precision chs8
      character*10 ys8
      character*4 yrs8
      parameter(ns8=8)
      dimension is8(18), chs8(8,8), ys8(8), yrs8(8)
c     
c     
      integer it
      double precision cht
      character*10 yt
      character*4 yrt
      parameter(nt=4)
      dimension it(10), cht(4,4), yt(4), yrt(4)
c     
c     
      integer itd
      double precision chtd
      character*10 ytd
      character*4 yrtd
      parameter(ntd=5)
      dimension itd(12), chtd(5,5), ytd(5), yrtd(5)
c     
c     
      integer ith
      double precision chth
      character*10 yth
      character*4 yrth
      parameter(nth=8)
      dimension ith(18), chth(8,8), yth(8), yrth(8)
c
      logical please_print_ecce
      data please_print_ecce / .true. /
c
      data ic1/1,1,1
     +     ,1/
      data yrc1/'a'/
      data yc1/'e'/
      data chc1/
     +     1.000/
c     
      data ic1h/2,2,1,1
     +     ,1,2/
      data yrc1h/'a''','a"'/
      data yc1h/'e','si.h'/
      data chc1h/
     +     1.000, 1.000,
     +     1.000,-1.000/
c     
      data ic2/2,2,1,1
     +     ,1,2/
      data yrc2/'a','b'/
      data yc2/'e','c2'/
      data chc2/
     +     1.000, 1.000,
     +     1.000,-1.000/
c     
      data ic2h/4,4,1,1,1,1
     +     ,1,2,3,4/
      data yrc2h/'ag','au','bg','bu'/
      data yc2h/'e','c2','si.h','i'/
      data chc2h/
     +     1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000,-1.000,-1.000,
     +     1.000,-1.000,-1.000, 1.000,
     +     1.000,-1.000, 1.000,-1.000/
c     
      data ic2v/4,4,1,1,1,1
     +     ,1,2,4,3/
      data yrc2v/'a1','a2','b1','b2'/
      data yc2v/'e','c2','si.xz','si.yz'/
      data chc2v/
     +     1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000,-1.000,-1.000,
     +     1.000,-1.000, 1.000,-1.000,
     +     1.000,-1.000,-1.000, 1.000/
c     
      data ic3/3,3,1,1,1
     +     ,1,2,3/
      data yrc3/'a','e+','e-'/
      data yc3/'e','c3','c3^2'/
      data chc3/
     +     1.000, 1.000, 1.000,
     +     1.000,-0.500,-0.500,
     +     0.000, 0.866,-0.866/
c     
      data ic3h/6,6,1,1,1,1,1,1
     +     ,1,2,3,4,5,6/
      data yrc3h/'a''','e''+','e''-','a"','e"+','e"-'/
      data yc3h/'e','c3','c3^2','si.h','s3','s3^5'/
      data chc3h/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000,-0.500,-0.500, 1.000,-0.500,-0.500,
     +     0.000, 0.866,-0.866, 0.000, 0.866,-0.866,
     +     1.000, 1.000, 1.000,-1.000,-1.000,-1.000,
     +     1.000,-0.500,-0.500,-1.000, 0.500, 0.500,
     +     0.000, 0.866,-0.866, 0.000,-0.866, 0.866/
c     
      data ic3v/3,6,1,2,3
     +     ,1,2,4/
      data yrc3v/'a1','a2','e'/
      data yc3v/'e','c3','si.v'/
      data chc3v/
     +     1.000, 1.000, 1.000,
     +     1.000, 1.000,-1.000,
     +     2.000,-1.000, 0.000/
c     
      data ic4/4,4,1,1,1,1
     +     ,1,2,3,4/
      data yrc4/'a','b','e+','e-'/
      data yc4/'e','c4','c2','c4^3'/
      data chc4/
     +     1.000, 1.000, 1.000, 1.000,
     +     1.000,-1.000, 1.000,-1.000,
     +     1.000, 0.000,-1.000, 0.000,
     +     0.000, 1.000, 0.000,-1.000/
c     
      data ic4h/8,8,1,1,1,1,1,1,1,1
     +     ,0,0,0,0,0,0,0,0/
      data yrc4h/'ag','bg','eg+','eg-','au','bu','eu+','eu-'/
      data yc4h/'e','c4','c2','c4^3','i','s4^3','si.h','s4'/
      data chc4h/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000,-1.000,
     +     1.000, 0.000,-1.000, 0.000, 1.000, 0.000,-1.000, 0.000,
     +     0.000, 1.000, 0.000,-1.000, 0.000, 1.000, 0.000,-1.000,
     +     1.000, 1.000, 1.000, 1.000,-1.000,-1.000,-1.000,-1.000,
     +     1.000,-1.000, 1.000,-1.000,-1.000, 1.000,-1.000, 1.000,
     +     1.000, 0.000,-1.000, 0.000,-1.000, 0.000, 1.000, 0.000,
     +     0.000, 1.000, 0.000,-1.000, 0.000,-1.000, 0.000, 1.000/
c     
      data ic4v/5,8,1,1,2,2,2
     +     ,1,3,2,5,6/
      data yrc4v/'a1','a2','b1','b2','e'/
      data yc4v/'e','c2','c4','si.v','si.d'/
      data chc4v/
     +     1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000,
     +     1.000, 1.000,-1.000, 1.000,-1.000,
     +     1.000, 1.000,-1.000,-1.000, 1.000,
     +     2.000,-2.000, 0.000, 0.000, 0.000/
c     
      data ic5/5,5,1,1,1,1,1
     +     ,1,2,3,4,5/
      data yrc5/'a','e1+','e1-','e2+','e2-'/
      data yc5/'e','c5','c5^2','c5^3','c5^4'/
      data chc5/
     +     1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 0.309,-0.809,-0.809, 0.309,
     +     0.000, 0.951, 0.588,-0.588,-0.951,
     +     1.000,-0.809, 0.309, 0.309,-0.809,
     +     0.000, 0.588,-0.951, 0.951,-0.588/
c     
      data ic5h/10,10,1,1,1,1,1,1,1,1,1,1
     +     ,0,0,0,0,0,0,0,0,0,0/
      data yrc5h/'a''','e1''+','e1''-','e2''+','e2''-','a"',
     +     'e1"+','e1"-','e2"+','e2"-'/
      data yc5h/'e','c5','c5^2','c5^3','c5^4','si.h','s5',
     +     's5^7','s5^3','s5^9'/
      data chc5h/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 
     +     1.000, 1.000, 1.000, 0.309,-0.809,-0.809, 0.309, 1.000, 
     +     0.309,-0.809,-0.809, 0.309,
     +     0.000, 0.951, 0.588,-0.588,-0.951, 0.000, 0.951, 0.588,
     +     -0.588,-0.951,
     +     1.000,-0.809, 0.309, 0.309,-0.809, 1.000,-0.809, 0.309, 
     +     0.309,-0.809,
     +     0.000, 0.588,-0.951, 0.951,-0.588, 0.000, 0.588,-0.951, 
     +     0.951,-0.588,
     +     1.000, 1.000, 1.000, 1.000, 1.000,-1.000,-1.000,-1.000,
     +     -1.000,-1.000,
     +     1.000, 0.309,-0.809,-0.809, 0.309,-1.000,-0.309, 0.809, 
     +     0.809,-0.309,
     +     0.000, 0.951, 0.588,-0.588,-0.951, 0.000,-0.951,-0.588, 
     +     0.588, 0.951,
     +     1.000,-0.809, 0.309, 0.309,-0.809,-1.000, 0.809,-0.309,
     +     -0.309, 0.809,
     +     0.000, 0.588,-0.951, 0.951,-0.588, 0.000,-0.588, 0.951,
     +     -0.951, 0.588/
c     
      data ic5v/4,10,1,2,2,5
     +     ,1,2,3,6/
      data yrc5v/'a1','a2','e1','e2'/
      data yc5v/'e','c5','c5^2','si.v'/
      data chc5v/
     +     1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000,-1.000,
     +     2.000, 0.618,-1.618, 0.000,
     +     2.000,-1.618, 0.618, 0.000/
c     
      data ic6/6,6,1,1,1,1,1,1
     +     ,1,2,3,4,5,6/
      data yrc6/'a','b','e1+','e1-','e2+','e2-'/
      data yc6/'e','c6','c3','c2','c3^2','c6^5'/
      data chc6/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000,-1.000, 1.000,-1.000, 1.000,-1.000,
     +     1.000, 0.500,-0.500,-1.000,-0.500, 0.500,
     +     0.000, 0.866, 0.866, 0.000,-0.866,-0.866,
     +     1.000,-0.500,-0.500, 1.000,-0.500,-0.500,
     +     0.000, 0.866,-0.866, 0.000, 0.866,-0.866/
c     
      data ic6h/12,12,1,1,1,1,1,1,1,1,1,1,1,1
     +     ,0,0,0,0,0,0,0,0,0,0,0,0/
      data yrc6h/'ag','bg','e1g+','e1g-','e2g+','e2g-','au',
     +     'bu','e1u+','e1u-','e2u+','e2u-'/
      data yc6h/'e','c6','c3','c2','c3^2','c6^5','i',
     +     's3^5','s6^5','si.h','s6','s3'/
      data chc6h/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 
     +     1.000, 1.000, 1.000, 1.000, 1.000,-1.000, 1.000,-1.000, 
     +     1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000,-1.000,
     +     1.000, 0.500,-0.500,-1.000,-0.500, 0.500, 1.000, 0.500,
     +     -0.500,-1.000,-0.500, 0.500, 0.000, 0.866, 0.866, 0.000,
     +     -0.866,-0.866, 0.000, 0.866, 0.866, 0.000,-0.866,-0.866,
     +     1.000,-0.500,-0.500, 1.000,-0.500,-0.500, 1.000,-0.500,
     +     -0.500, 1.000,-0.500,-0.500, 0.000, 0.866,-0.866, 0.000, 
     +     0.866,-0.866, 0.000, 0.866,-0.866, 0.000, 0.866,-0.866,
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000,-1.000,-1.000,
     +     -1.000,-1.000,-1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 
     +     1.000,-1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000,
     +     1.000, 0.500,-0.500,-1.000,-0.500, 0.500,-1.000,-0.500, 
     +     0.500, 1.000, 0.500,-0.500, 0.000, 0.866, 0.866, 0.000,
     +     -0.866,-0.866, 0.000,-0.866,-0.866, 0.000, 0.866, 0.866,
     +     1.000,-0.500,-0.500, 1.000,-0.500,-0.500,-1.000, 0.500, 
     +     0.500,-1.000, 0.500, 0.500, 0.000, 0.866,-0.866, 0.000, 
     +     0.866,-0.866, 0.000,-0.866, 0.866, 0.000,-0.866, 0.866/
c     
      data ic6v/6,12,1,1,2,2,3,3
     +     ,1,4,3,2,7,10/
      data yrc6v/'a1','a2','b1','b2','e1','e2'/
      data yc6v/'e','c2','c3','c6','si.v','si.d'/
      data chc6v/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000, 1.000,-1.000,-1.000,
     +     1.000,-1.000, 1.000,-1.000, 1.000,-1.000,
     +     1.000,-1.000, 1.000,-1.000,-1.000, 1.000,
     +     2.000,-2.000,-1.000, 1.000, 0.000, 0.000,
     +     2.000, 2.000,-1.000,-1.000, 0.000, 0.000/
c     
      data ic7/7,7,1,1,1,1,1,1,1
     +     ,1,2,3,4,5,6,7/
      data yrc7/'a','e1+','e1-','e2+','e2-','e3+','e3-'/
*     data yc7/'e','c7','c7','c7','c7^3','c7^3','c7^5'/
      data yc7/'e','c7','c7^2','c7^3','c7^4','c7^5','c7^6'/
      data chc7/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 0.623,-0.223,-0.901,-0.901,-0.223, 0.623,
     +     0.000, 0.782, 0.975,-0.434, 0.434,-0.975,-0.782,
     +     1.000,-0.223,-0.901, 0.623, 0.623,-0.901,-0.223,
     +     0.000, 0.975, 0.434,-0.782, 0.782,-0.434,-0.975,
     +     1.000,-0.901, 0.623,-0.223,-0.223, 0.623,-0.901,
     +     0.000,-0.434,-0.782, 0.975,-0.975, 0.782, 0.434/
c     
      data ic7v/5,14,1,2,2,2,7
     +     ,0,0,0,0,0/
      data yrc7v/'a1','a2','e1','e2','e3'/
      data yc7v/'e','c7','c7^2','c7^3','si.v'/
      data chc7v/
     +     1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000, 1.000,-1.000,
     +     2.000, 1.245,-0.445,-1.802, 0.000,
     +     2.000,-0.445,-1.802, 1.245, 0.000,
     +     2.000,-1.802, 1.245,-0.445, 0.000/
c     
      data ic8/8,8,1,1,1,1,1,1,1,1
     +     ,1,2,3,5,7,4,6,8/
      data yrc8/'a','b','e1+','e1-','e2+','e2-','e3+','e3-'/
      data yc8/'e','c8','c4','c2','c4^3','c8^3','c8^5','c8^7'/
      data chc8/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000,-1.000, 1.000, 1.000, 1.000,-1.000,-1.000,-1.000,
     +     1.000, 0.707, 0.000,-1.000, 0.000,-0.707,-0.707, 0.707,
     +     0.000, 0.000, 1.000, 0.000,-1.000, 0.000, 0.000, 0.000,
     +     1.000, 0.000,-1.000, 1.000,-1.000, 0.000, 0.000, 0.000,
     +     0.000, 1.000, 0.000, 0.000, 0.000,-1.000, 1.000,-1.000,
     +     1.000,-0.707, 0.000,-1.000, 0.000, 0.707, 0.707,-0.707,
     +     0.000, 0.000, 1.000, 0.000,-1.000, 0.000, 0.000, 0.000/
c     
      data ici/2,2,1,1
     +     ,1,2/
      data yrci/'ag','au'/
      data yci/'e','i=s2'/
      data chci/
     +     1.000, 1.000,
     +     1.000,-1.000/
c     
      data ics/2,2,1,1
     +     ,1,2/
      data yrcs/'a''','a"'/
      data ycs/'e','si.h'/
      data chcs/
     +     1.000, 1.000,
     +     1.000,-1.000/
c     
      data id2/4,4,1,1,1,1
     +     ,1,2,3,4/
      data yrd2/'a1','b1','b2','b3'/
      data yd2/'e','c2z','c2y','c2x'/
      data chd2/
     +     1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000,-1.000,-1.000,
     +     1.000,-1.000, 1.000,-1.000,
     +     1.000,-1.000,-1.000, 1.000/
c     
      data id2d/5,8,1,1,2,2,2
     +     ,1,2,7,3,5/
      data yrd2d/'a1','a2','b1','b2','e'/
      data yd2d/'e','c2','s4','c2''','si.d'/
      data chd2d/
     +     1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000,
     +     1.000, 1.000,-1.000, 1.000,-1.000,
     +     1.000, 1.000,-1.000,-1.000, 1.000,
     +     2.000,-2.000, 0.000, 0.000, 0.000/
c     
      data id2h/8,8,1,1,1,1,1,1,1,1
     +     ,1,2,5,6,4,3,8,7/
      data yrd2h/'ag','au','b1g','b1u','b2g','b2u','b3g','b3u'/
      data yd2h/'e','c2z','c2y','c2x','i','si.xy','si.xz','si.yz'/
      data chd2h/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000, 1.000,-1.000,-1.000,-1.000,-1.000,
     +     1.000, 1.000,-1.000,-1.000, 1.000, 1.000,-1.000,-1.000,
     +     1.000, 1.000,-1.000,-1.000,-1.000,-1.000, 1.000, 1.000,
     +     1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000,-1.000,
     +     1.000,-1.000, 1.000,-1.000,-1.000, 1.000,-1.000, 1.000,
     +     1.000,-1.000,-1.000, 1.000, 1.000,-1.000,-1.000, 1.000,
     +     1.000,-1.000,-1.000, 1.000,-1.000, 1.000, 1.000,-1.000/
c     
      data id3/3,6,1,2,3
     +     ,0,0,0/
      data yrd3/'a1','a2','e'/
      data yd3/'e','c3','c2'/
      data chd3/
     +     1.000, 1.000, 1.000,
     +     1.000, 1.000,-1.000,
     +     2.000,-1.000, 0.000/
c     
      data id3d/6,12,1,2,3,1,2,3
     +     ,0,0,0,0,0,0/
      data yrd3d/'a1g','a1u','a2g','a2u','eg','eu'/
      data yd3d/'e','c3','c2','i','s6','si.d'/
      data chd3d/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000,-1.000,
     +     1.000, 1.000,-1.000, 1.000, 1.000,-1.000,
     +     1.000, 1.000,-1.000,-1.000,-1.000, 1.000,
     +     2.000,-1.000, 0.000, 2.000,-1.000, 0.000,
     +     2.000,-1.000, 0.000,-2.000, 1.000, 0.000/
c     
      data id3h/6,12,1,1,2,2,3,3
     +     ,1,4,2,5,7,10/
      data yrd3h/'a1''','a1"','a2''','a2"','e''','e"'/
      data yd3h/'e','si.h','c3','s3','c2','si.v'/
      data chd3h/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000,-1.000, 1.000,-1.000, 1.000,-1.000,
     +     1.000, 1.000, 1.000, 1.000,-1.000,-1.000,
     +     1.000,-1.000, 1.000,-1.000,-1.000, 1.000,
     +     2.000, 2.000,-1.000,-1.000, 0.000, 0.000,
     +     2.000,-2.000,-1.000, 1.000, 0.000, 0.000/
c     
      data id4/5,8,1,2,1,2,2
     +     ,1,2,3,5,6/
      data yrd4/'a1','a2','b1','b2','e'/
      data yd4/'e','c4','c2','c2''','c2"'/
      data chd4/
     +     1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000,
     +     1.000,-1.000, 1.000, 1.000,-1.000,
     +     1.000,-1.000, 1.000,-1.000, 1.000,
     +     2.000, 0.000,-2.000, 0.000, 0.000/
c     
      data id4d/7,16,1,1,2,2,2,4,4
     +     ,1,3,2,13,15,5,9/
      data yrd4d/'a1','a2','b1','b2','e1','e2','e3'/
      data yd4d/'e','c2','c4','s8','s8^3','c2''','si.d'/
      data chd4d/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000, 1.000, 1.000,-1.000,-1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000, 1.000,-1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000,-1.000, 1.000,
     +     2.000,-2.000, 0.000, 1.414,-1.414, 0.000, 0.000,
     +     2.000, 2.000,-2.000, 0.000, 0.000, 0.000, 0.000,
     +     2.000,-2.000, 0.000,-1.414, 1.414, 0.000, 0.000/
c     
      data id4h/10,16,1,1,2,2,2,1,1,2,2,2
     +     ,1,3,2,9,10,7,5,6,13,14/
      data yrd4h/'a1g','a1u','a2g','a2u','b1g','b1u','b2g','b2u',
     +     'eg','eu'/
      data yd4h/'e','c2','c4','c2''','c2"','i','si.h','s4',
     +     'si.v','si.d'/
      data chd4h/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,-1.000,
     +     -1.000,-1.000,-1.000,-1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000, 1.000, 1.000, 1.000,
     +     -1.000,-1.000, 1.000, 1.000, 1.000,-1.000,-1.000,-1.000,
     +     -1.000,-1.000, 1.000, 1.000,
     +     1.000, 1.000,-1.000, 1.000,-1.000, 1.000, 1.000,-1.000, 
     +     1.000,-1.000,
     +     1.000, 1.000,-1.000, 1.000,-1.000,-1.000,-1.000, 1.000,
     +     -1.000, 1.000,
     +     1.000, 1.000,-1.000,-1.000, 1.000, 1.000, 1.000,-1.000,
     +     -1.000, 1.000,
     +     1.000, 1.000,-1.000,-1.000, 1.000,-1.000,-1.000, 1.000, 
     +     1.000,-1.000,
     +     2.000,-2.000, 0.000, 0.000, 0.000, 2.000,-2.000, 0.000, 
     +     0.000, 0.000,
     +     2.000,-2.000, 0.000, 0.000, 0.000,-2.000, 2.000, 0.000, 
     +     0.000, 0.000/
c     
      data id5/4,10,1,2,2,5
     +     ,0,0,0,0/
      data yrd5/'a1','a2','e1','e2'/
      data yd5/'e','c5','c5^2','c2'/
      data chd5/
     +     1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000,-1.000,
     +     2.000, 0.618,-1.618, 0.000,
     +     2.000,-1.618, 0.618, 0.000/
c     
      data id5d/8,20,1,2,2,5,1,2,2,5
     +     ,1,2,3,6,19,16,18,11/
      data yrd5d/'a1g','a1u','a2g','a2u','e1g','e1u','e2g','e2u'/
      data yd5d/'e','c5','c5^2','c2','i','s10','s10^3','si.d'/
      data chd5d/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000, 1.000,-1.000,-1.000,-1.000,-1.000,
     +     1.000, 1.000, 1.000,-1.000, 1.000, 1.000, 1.000,-1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000,-1.000,-1.000, 1.000,
     +     2.000, 0.618,-1.618, 0.000, 2.000,-1.618, 0.618, 0.000,
     +     2.000, 0.618,-1.618, 0.000,-2.000, 1.618,-0.618, 0.000,
     +     2.000,-1.618, 0.618, 0.000, 2.000, 0.618,-1.618, 0.000,
     +     2.000,-1.618, 0.618, 0.000,-2.000,-0.618, 1.618, 0.000/
c     
      data id5h/8,20,1,2,2,5,1,2,2,5
     +     ,1,2,3,11,6,7,8,16/
      data yrd5h/'a1''','a1"','a2''','a2"','e1''','e1"','e2''','e2"'/
      data yd5h/'e','c5','c5^2','c2','si.h','s5','s5^3','si.v'/
      data chd5h/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000, 1.000,-1.000,-1.000,-1.000,-1.000,
     +     1.000, 1.000, 1.000,-1.000, 1.000, 1.000, 1.000,-1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000,-1.000,-1.000, 1.000,
     +     2.000, 0.618,-1.618, 0.000, 2.000, 0.618,-1.618, 0.000,
     +     2.000, 0.618,-1.618, 0.000,-2.000,-0.618, 1.618, 0.000,
     +     2.000,-1.618, 0.618, 0.000, 2.000,-1.618, 0.618, 0.000,
     +     2.000,-1.618, 0.618, 0.000,-2.000, 1.618,-0.618, 0.000/
c     
      data id6/6,12,1,2,2,1,3,3
     +     ,0,0,0,0,0,0/
      data yrd6/'a1','a2','b1','b2','e1','e2'/
      data yd6/'e','c6','c3','c2','c2''','c2"'/
      data chd6/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000, 1.000,-1.000,-1.000,
     +     1.000,-1.000, 1.000,-1.000, 1.000,-1.000,
     +     1.000,-1.000, 1.000,-1.000,-1.000, 1.000,
     +     2.000, 1.000,-1.000,-2.000, 0.000, 0.000,
     +     2.000,-1.000,-1.000, 2.000, 0.000, 0.000/
c     
      data id6d/9,24,1,2,2,2,2,2,1,6,6
     +     ,0,0,0,0,0,0,0,0,0/
      data yrd6d/'a1','a2','b1','b2','e1','e2','e3','e4','e5'/
      data yd6d/'e','s12','c6','s4','c3','s12^5','c2','c2''','si.d'/
      data chd6d/
     +    1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +    1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,-1.000,-1.000,
     +    1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000, 1.000,-1.000,
     +    1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000,
     +    2.000, 1.732, 1.000, 0.000,-1.000,-1.732,-2.000, 0.000, 0.000,
     +    2.000, 1.000,-1.000,-2.000,-1.000, 1.000, 2.000, 0.000, 0.000,
     +    2.000, 0.000,-2.000, 0.000, 2.000, 0.000,-2.000, 0.000, 0.000,
     +    2.000,-1.000,-1.000, 2.000,-1.000,-1.000, 2.000, 0.000, 0.000,
     +    2.000,-1.732, 1.000, 0.000,-1.000, 1.732,-2.000, 0.000, 0.000/
c     
      data id6h/12,24,1,1,2,2,3,3,1,1,2,2,3,3
     +     ,1,4,3,2,13,16,10,7,8,9,22,19/
      data yrd6h/'a1g','a1u','a2g','a2u','b1g','b1u','b2g',
     +     'b2u','e1g','e1u','e2g','e2u'/
      data yd6h/'e','c2','c3','c6','c2''','c2"','i','si.h',
     +     's6','s3','si.d','si.v'/
      data chd6h/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 
     +     1.000, 1.000,-1.000,-1.000,-1.000,-1.000,-1.000,-1.000,
     +     1.000, 1.000, 1.000, 1.000,-1.000,-1.000, 1.000, 1.000, 
     +     1.000, 1.000,-1.000,-1.000, 1.000, 1.000, 1.000, 1.000,
     +     -1.000,-1.000,-1.000,-1.000,-1.000,-1.000, 1.000, 1.000,
     +     1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 
     +     1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 
     +     1.000,-1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000,
     +     1.000,-1.000, 1.000,-1.000,-1.000, 1.000, 1.000,-1.000, 
     +     1.000,-1.000,-1.000, 1.000, 1.000,-1.000, 1.000,-1.000,
     +     -1.000, 1.000,-1.000, 1.000,-1.000, 1.000, 1.000,-1.000,
     +     2.000,-2.000,-1.000, 1.000, 0.000, 0.000, 2.000,-2.000,
     +     -1.000, 1.000, 0.000, 0.000, 2.000,-2.000,-1.000, 1.000, 
     +     0.000, 0.000,-2.000, 2.000, 1.000,-1.000, 0.000, 0.000,
     +     2.000, 2.000,-1.000,-1.000, 0.000, 0.000, 2.000, 2.000,
     +     -1.000,-1.000, 0.000, 0.000, 2.000, 2.000,-1.000,-1.000, 
     +     0.000, 0.000,-2.000,-2.000, 1.000, 1.000, 0.000, 0.000/
c     
      data id8/7,16,1,2,2,2,1,4,4
     +     ,0,0,0,0,0,0,0/
      data yrd8/'a1','a2','b1','b2','e1','e2','e3'/
      data yd8/'e','c8','c8^3','c4','c2','c2''','c2"'/
      data chd8/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000, 1.000, 1.000,-1.000,-1.000,
     +     1.000,-1.000,-1.000, 1.000, 1.000, 1.000,-1.000,
     +     1.000,-1.000,-1.000, 1.000, 1.000,-1.000, 1.000,
     +     2.000, 1.414,-1.414, 0.000,-2.000, 0.000, 0.000,
     +     2.000, 0.000, 0.000,-2.000, 2.000, 0.000, 0.000,
     +     2.000,-1.414, 1.414, 0.000,-2.000, 0.000, 0.000/
c     
      data id8h/14,32,1,2,2,2,1,4,4,1,2,2,2,1,4,4
     +     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0/
      data yrd8h/'a1g','a2g','b1g','b2g','e1g','e2g','e3g',
     +     'a1u','a2u','b1u','b2u','e1u','e2u','e3u'/
      data yd8h/'e','c8','c8^3','c4','c2','c2''','c2"','i',
     +     's8^3','s8','s4','si.h','si.d','si.v'/
      data chd8h/
     +     1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 
     +     1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,-1.0,-1.0, 1.0, 1.0, 1.0, 
     +     1.0, 1.0,-1.0,-1.0, 1.0,-1.0,-1.0, 1.0, 1.0, 1.0,-1.0, 1.0,
     +     -1.0,-1.0, 1.0, 1.0, 1.0,-1.0, 1.0,-1.0,-1.0, 1.0, 1.0,-1.0, 
     +     1.0, 1.0,-1.0,-1.0, 1.0, 1.0,-1.0, 1.0, 2.0, 1.414,-1.414,
     +     0.0,-2.00, 0.00, 0.00, 2.00, 1.414,-1.414, 0.00,-2.00, 0.00, 
     +     0.00, 2.00, 0.00, 0.00,-2.00, 2.00, 0.00, 0.00, 2.00, 0.00, 
     +     0.00,-2.00, 2.00, 0.00, 0.00, 2.00,-1.414, 1.414, 0.00,-2.00, 
     +     0.00, 0.00, 2.00,-1.414, 1.414, 0.00,-2.00, 0.00, 0.00,
     +     1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00,-1.00,-1.00,-1.00,
     +     -1.00,-1.00,-1.00,-1.00, 1.00, 1.00, 1.00, 1.00, 1.00,-1.00,
     +     -1.00,-1.00,-1.00,-1.00,-1.00,-1.00, 1.00, 1.00, 1.00,-1.00,
     +     -1.00, 1.00, 1.00, 1.00,-1.00,-1.00, 1.00, 1.00,-1.00,-1.00,
     +     -1.00, 1.00, 1.00,-1.00,-1.00, 1.00, 1.00,-1.00, 1.00,-1.00, 
     +     1.00, 1.00,-1.00,-1.00, 1.00,-1.00, 2.00, 1.414,-1.414,0.00,
     +     -2.00, 0.00, 0.00,-2.00,-1.414, 1.414, 0.00, 2.00,0.00,0.00,
     +     2.00, 0.00, 0.00,-2.00, 2.00, 0.00, 0.00,-2.00, 0.00, 0.00, 
     +     2.00,-2.00, 0.00, 0.00, 2.00,-1.414, 1.414, 0.00,-2.00, 
     +     0.00, 0.00,-2.00, 1.414,-1.414, 0.00, 2.00, 0.00, 0.00/
c     
      data ii/5,60,1,12,12,20,15
     +     ,0,0,0,0,0/
      data yri/'a','t1','t2','g','h'/
      data yi/'e','c5','c5^2','c3','c2'/
      data chi/
     +     1.000, 1.000, 1.000, 1.000, 1.000,
     +     3.000, 1.618,-0.618, 0.000,-1.000,
     +     3.000,-0.618, 1.618, 0.000,-1.000,
     +     4.000,-1.000,-1.000, 1.000, 0.000,
     +     5.000, 0.000, 0.000,-1.000, 1.000/
c     
      data iih/10,120,1,12,12,20,15,1,12,12,20,15
     +     ,0,0,0,0,0,0,0,0,0,0/
      data yrih/'ag','t1g','t2g','gg','hg','au','t1u','t2u','gu','hu'/
      data yih/'e','c5','c5^2','c3','c2','i','s10','s10^3','s6','si'/
      data chih/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,  1.000,
     +     1.000, 1.000,                                    
     +     3.000, 1.618,-0.618, 0.000,-1.000, 3.000,-0.618,  1.618,
     +     0.000,-1.000,                                    
     +     3.000,-0.618, 1.618, 0.000,-1.000, 3.000, 1.618, -0.618,
     +     0.000,-1.000,                                    
     +     4.000,-1.000,-1.000, 1.000, 0.000, 4.000,-1.000, -1.000,
     +     1.000, 0.000,                                    
     +     5.000, 0.000, 0.000,-1.000, 1.000, 5.000, 0.000,  0.000,
     +     -1.000, 1.000,                                   
     +     1.000, 1.000, 1.000, 1.000, 1.000,-1.000,-1.000, -1.000,
     +     -1.000,-1.000,                                   
     +     3.000, 1.618,-0.618, 0.000,-1.000,-3.000, 0.618, -1.618,
     +     0.000, 1.000,                                    
     +     3.000,-0.618, 1.618, 0.000,-1.000,-3.000,-1.618,  0.618,
     +     0.000, 1.000,                                    
     +     4.000,-1.000,-1.000, 1.000, 0.000,-4.000, 1.000,  1.000,
     +     -1.000, 0.000,                                   
     +     5.000, 0.000, 0.000,-1.000, 1.000,-5.000, 0.000,  0.000,
     +     1.000,-1.000/
c     
      data io/5,24,1,8,3,6,6
     +     ,0,0,0,0,0/
      data yro/'a1','a2','e','t1','t2'/
      data yo/'e','c3','c2','c2''','c4'/
      data cho/
     +     1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000,
     +     2.000,-1.000, 2.000, 0.000, 0.000,
     +     3.000, 0.000,-1.000,-1.000, 1.000,
     +     3.000, 0.000,-1.000, 1.000,-1.000/
c     
      data ioh/10,48,1,8,3,6,6,1,8,3,6,6
     +     ,1,5,2,14,13,25,29,26,38,37/
      data yroh/'a1g','a1u','a2g','a2u','eg','eu','t1g','t1u',
     +     't2g','t2u'/
      data yoh/'e','c3','c2','c2''','c4','i','s6','si.h',
     +     'si.d','s4'/
      data choh/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,-1.000,
     +     -1.000,-1.000,-1.000,-1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000, 1.000, 1.000, 1.000,
     +     -1.000,-1.000, 1.000, 1.000, 1.000,-1.000,-1.000,-1.000,
     +     -1.000,-1.000, 1.000, 1.000,
     +     2.000,-1.000, 2.000, 0.000, 0.000, 2.000,-1.000, 2.000, 
     +     0.000, 0.000, 2.000,-1.000, 2.000, 0.000, 0.000,-2.000, 
     +     1.000,-2.000, 0.000, 0.000,
     +     3.000, 0.000,-1.000,-1.000, 1.000, 3.000, 0.000,-1.000,
     +     -1.000, 1.000,
     +     3.000, 0.000,-1.000,-1.000, 1.000,-3.000, 0.000, 1.000, 
     +     1.000,-1.000,
     +     3.000, 0.000,-1.000, 1.000,-1.000, 3.000, 0.000,-1.000, 
     +     1.000,-1.000,
     +     3.000, 0.000,-1.000, 1.000,-1.000,-3.000, 0.000, 1.000,
     +     -1.000, 1.000/
c     
      data is2/2,2,1,1
     +     ,1,2/
      data yrs2/'ag','au'/
      data ys2/'e','i=s2'/
      data chs2/
     +     1.000, 1.000,
     +     1.000,-1.000/
c     
      data is4/4,4,1,1,1,1
     +     ,0,0,0,0/
      data yrs4/'a','b','e+','e-'/
      data ys4/'e','s4','c2','s4^3'/
      data chs4/
     +     1.000, 1.000, 1.000, 1.000,
     +     1.000,-1.000, 1.000,-1.000,
     +     1.000, 0.000,-1.000, 0.000,
     +     0.000, 1.000, 0.000,-1.000/
c     
      data is6/6,6,1,1,1,1,1,1
     +     ,0,0,0,0,0,0/
      data yrs6/'ag','au','eg+','eg-','eu+','eu-'/
      data ys6/'e','c3','c3^2','i','s6','s6^5'/
      data chs6/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000,-1.000,
     +     1.000,-0.500,-0.500, 1.000,-0.500,-0.500,
     +     0.000, 1.732,-1.732, 0.000,-1.732, 1.732,
     +     1.000,-0.500,-0.500,-1.000, 0.500, 0.500,
     +     0.000, 1.732,-1.732, 0.000, 1.732,-1.732/
c     
      data is8/8,8,1,1,1,1,1,1,1,1
     +     ,0,0,0,0,0,0,0,0/
      data yrs8/'a','b','e1+','e1-','e2+','e2-','e3+','e3-'/
      data ys8/'e','s8','c4','s8^3','c2','s8^5','c4^3','s8^7'/
      data chs8/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000,-1.000, 1.000,-1.000, 1.000,-1.000, 1.000,-1.000,
     +     1.000, 0.707, 0.000,-0.707,-1.000,-0.707, 0.000, 0.707,
     +     0.000, 0.000, 1.000, 0.000, 0.000, 0.000,-1.000, 0.000,
     +     1.000, 0.000,-1.000, 0.000, 1.000, 0.000,-1.000, 0.000,
     +     0.000, 1.000, 0.000,-1.000, 0.000, 1.000, 0.000,-1.000,
     +     1.000,-0.707, 0.000, 0.707,-1.000, 0.707, 0.000,-0.707,
     +     0.000, 0.000,-1.000, 0.000, 0.000, 0.000, 1.000, 0.000/
c     
      data it/4,12,1,4,4,3
     +     ,0,0,0,0/
      data yrt/'a','e+','e-','t'/
      data yt/'e','c3','c3^2','c2'/
      data cht/
     +     1.000, 1.000, 1.000, 1.000,
     +     1.000,-0.500,-0.500, 1.000,
     +     0.000, 0.866,-0.866, 0.000,
     +     3.000, 0.000, 0.000,-1.000/
c     
      data itd/5,24,1,8,3,6,6
     +     ,1,5,2,13,14/
      data yrtd/'a1','a2','e','t1','t2'/
      data ytd/'e','c3','c2','si.d','s4'/
      data chtd/
     +     1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000, 1.000, 1.000,-1.000,-1.000,
     +     2.000,-1.000, 2.000, 0.000, 0.000,
     +     3.000, 0.000,-1.000,-1.000, 1.000,
     +     3.000, 0.000,-1.000, 1.000,-1.000/
c     
      data ith/8,24,1,4,4,3,1,4,4,3
     +     ,0,0,0,0,0,0,0,0/
      data yrth/'ag','eg+','eg-','tg','au','eu+','eu-','tu'/
      data yth/'e','c3','c3^2','c2','i','s6^5','s6','si.d'/
      data chth/
     +     1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000,
     +     1.000,-0.500,-0.500, 1.000, 1.000,-0.500,-0.500, 1.000,
     +     0.000, 0.866,-0.866, 0.000, 0.000, 0.866,-0.866, 0.000,
     +     3.000, 0.000, 0.000,-1.000, 3.000, 0.000, 0.000,-1.000,
     +     1.000, 1.000, 1.000, 1.000,-1.000,-1.000,-1.000,-1.000,
     +     1.000,-0.500,-0.500, 1.000,-1.000, 0.500, 0.500,-1.000,
     +     0.000, 0.866,-0.866, 0.000, 0.000,-0.866, 0.866, 0.000,
     +     3.000, 0.000, 0.000,-1.000,-3.000, 0.000, 0.000, 1.000/
c
      zgroup = zname
      call inp_lcase(zgroup)
c     
c     here is beginning of instructions - also machine generated
c     
      if(zgroup.eq.'c1') then
         k=0
         nir=nc1
         nop=ic1(2)
         do i=1,nir
            iclass_dim(i)=ic1(i+2)
            ipointer(i)=ic1(i+2+nir)
            zir(i)=yrc1(i)
            zclass(i)=yc1(i)
            do j=1,nir
               k=k+1
               chars(k)=chc1(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c1h') then
         k=0
         nir=nc1h
         nop=ic1h(2)
         do i=1,nir
            iclass_dim(i)=ic1h(i+2)
            ipointer(i)=ic1h(i+2+nir)
            zir(i)=yrc1h(i)
            zclass(i)=yc1h(i)
            do j=1,nir
               k=k+1
               chars(k)=chc1h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c2') then
         k=0
         nir=nc2
         nop=ic2(2)
         do i=1,nir
            iclass_dim(i)=ic2(i+2)
            ipointer(i)=ic2(i+2+nir)
            zir(i)=yrc2(i)
            zclass(i)=yc2(i)
            do j=1,nir
               k=k+1
               chars(k)=chc2(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c2h') then
         k=0
         nir=nc2h
         nop=ic2h(2)
         do i=1,nir
            iclass_dim(i)=ic2h(i+2)
            ipointer(i)=ic2h(i+2+nir)
            zir(i)=yrc2h(i)
            zclass(i)=yc2h(i)
            do j=1,nir
               k=k+1
               chars(k)=chc2h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c2v') then
         k=0
         nir=nc2v
         nop=ic2v(2)
         do i=1,nir
            iclass_dim(i)=ic2v(i+2)
            ipointer(i)=ic2v(i+2+nir)
            zir(i)=yrc2v(i)
            zclass(i)=yc2v(i)
            do j=1,nir
               k=k+1
               chars(k)=chc2v(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c3') then
         k=0
         nir=nc3
         nop=ic3(2)
         do i=1,nir
            iclass_dim(i)=ic3(i+2)
            ipointer(i)=ic3(i+2+nir)
            zir(i)=yrc3(i)
            zclass(i)=yc3(i)
            do j=1,nir
               k=k+1
               chars(k)=chc3(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c3h') then
         k=0
         nir=nc3h
         nop=ic3h(2)
         do i=1,nir
            iclass_dim(i)=ic3h(i+2)
            ipointer(i)=ic3h(i+2+nir)
            zir(i)=yrc3h(i)
            zclass(i)=yc3h(i)
            do j=1,nir
               k=k+1
               chars(k)=chc3h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c3v') then
         k=0
         nir=nc3v
         nop=ic3v(2)
         do i=1,nir
            iclass_dim(i)=ic3v(i+2)
            ipointer(i)=ic3v(i+2+nir)
            zir(i)=yrc3v(i)
            zclass(i)=yc3v(i)
            do j=1,nir
               k=k+1
               chars(k)=chc3v(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c4') then
         k=0
         nir=nc4
         nop=ic4(2)
         do i=1,nir
            iclass_dim(i)=ic4(i+2)
            ipointer(i)=ic4(i+2+nir)
            zir(i)=yrc4(i)
            zclass(i)=yc4(i)
            do j=1,nir
               k=k+1
               chars(k)=chc4(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c4h') then
         k=0
         nir=nc4h
         nop=ic4h(2)
         do i=1,nir
            iclass_dim(i)=ic4h(i+2)
            ipointer(i)=ic4h(i+2+nir)
            zir(i)=yrc4h(i)
            zclass(i)=yc4h(i)
            do j=1,nir
               k=k+1
               chars(k)=chc4h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c4v') then
         k=0
         nir=nc4v
         nop=ic4v(2)
         do i=1,nir
            iclass_dim(i)=ic4v(i+2)
            ipointer(i)=ic4v(i+2+nir)
            zir(i)=yrc4v(i)
            zclass(i)=yc4v(i)
            do j=1,nir
               k=k+1
               chars(k)=chc4v(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c5') then
         k=0
         nir=nc5
         nop=ic5(2)
         do i=1,nir
            iclass_dim(i)=ic5(i+2)
            ipointer(i)=ic5(i+2+nir)
            zir(i)=yrc5(i)
            zclass(i)=yc5(i)
            do j=1,nir
               k=k+1
               chars(k)=chc5(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c5h') then
         k=0
         nir=nc5h
         nop=ic5h(2)
         do i=1,nir
            iclass_dim(i)=ic5h(i+2)
            ipointer(i)=ic5h(i+2+nir)
            zir(i)=yrc5h(i)
            zclass(i)=yc5h(i)
            do j=1,nir
               k=k+1
               chars(k)=chc5h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c5v') then
         k=0
         nir=nc5v
         nop=ic5v(2)
         do i=1,nir
            iclass_dim(i)=ic5v(i+2)
            ipointer(i)=ic5v(i+2+nir)
            zir(i)=yrc5v(i)
            zclass(i)=yc5v(i)
            do j=1,nir
               k=k+1
               chars(k)=chc5v(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c6') then
         k=0
         nir=nc6
         nop=ic6(2)
         do i=1,nir
            iclass_dim(i)=ic6(i+2)
            ipointer(i)=ic6(i+2+nir)
            zir(i)=yrc6(i)
            zclass(i)=yc6(i)
            do j=1,nir
               k=k+1
               chars(k)=chc6(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c6h') then
         k=0
         nir=nc6h
         nop=ic6h(2)
         do i=1,nir
            iclass_dim(i)=ic6h(i+2)
            ipointer(i)=ic6h(i+2+nir)
            zir(i)=yrc6h(i)
            zclass(i)=yc6h(i)
            do j=1,nir
               k=k+1
               chars(k)=chc6h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c6v') then
         k=0
         nir=nc6v
         nop=ic6v(2)
         do i=1,nir
            iclass_dim(i)=ic6v(i+2)
            ipointer(i)=ic6v(i+2+nir)
            zir(i)=yrc6v(i)
            zclass(i)=yc6v(i)
            do j=1,nir
               k=k+1
               chars(k)=chc6v(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c7') then
         k=0
         nir=nc7
         nop=ic7(2)
         do i=1,nir
            iclass_dim(i)=ic7(i+2)
            ipointer(i)=ic7(i+2+nir)
            zir(i)=yrc7(i)
            zclass(i)=yc7(i)
            do j=1,nir
               k=k+1
               chars(k)=chc7(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c7v') then
         k=0
         nir=nc7v
         nop=ic7v(2)
         do i=1,nir
            iclass_dim(i)=ic7v(i+2)
            ipointer(i)=ic7v(i+2+nir)
            zir(i)=yrc7v(i)
            zclass(i)=yc7v(i)
            do j=1,nir
               k=k+1
               chars(k)=chc7v(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'c8') then
         k=0
         nir=nc8
         nop=ic8(2)
         do i=1,nir
            iclass_dim(i)=ic8(i+2)
            ipointer(i)=ic8(i+2+nir)
            zir(i)=yrc8(i)
            zclass(i)=yc8(i)
            do j=1,nir
               k=k+1
               chars(k)=chc8(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'ci') then
         k=0
         nir=nci
         nop=ici(2)
         do i=1,nir
            iclass_dim(i)=ici(i+2)
            ipointer(i)=ici(i+2+nir)
            zir(i)=yrci(i)
            zclass(i)=yci(i)
            do j=1,nir
               k=k+1
               chars(k)=chci(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'cs') then
         k=0
         nir=ncs
         nop=ics(2)
         do i=1,nir
            iclass_dim(i)=ics(i+2)
            ipointer(i)=ics(i+2+nir)
            zir(i)=yrcs(i)
            zclass(i)=ycs(i)
            do j=1,nir
               k=k+1
               chars(k)=chcs(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d2') then
         k=0
         nir=nd2
         nop=id2(2)
         do i=1,nir
            iclass_dim(i)=id2(i+2)
            ipointer(i)=id2(i+2+nir)
            zir(i)=yrd2(i)
            zclass(i)=yd2(i)
            do j=1,nir
               k=k+1
               chars(k)=chd2(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d2d') then
         k=0
         nir=nd2d
         nop=id2d(2)
         do i=1,nir
            iclass_dim(i)=id2d(i+2)
            ipointer(i)=id2d(i+2+nir)
            zir(i)=yrd2d(i)
            zclass(i)=yd2d(i)
            do j=1,nir
               k=k+1
               chars(k)=chd2d(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d2h') then
         k=0
         nir=nd2h
         nop=id2h(2)
         do i=1,nir
            iclass_dim(i)=id2h(i+2)
            ipointer(i)=id2h(i+2+nir)
            zir(i)=yrd2h(i)
            zclass(i)=yd2h(i)
            do j=1,nir
               k=k+1
               chars(k)=chd2h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d3') then
         k=0
         nir=nd3
         nop=id3(2)
         do i=1,nir
            iclass_dim(i)=id3(i+2)
            ipointer(i)=id3(i+2+nir)
            zir(i)=yrd3(i)
            zclass(i)=yd3(i)
            do j=1,nir
               k=k+1
               chars(k)=chd3(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d3d') then
         k=0
         nir=nd3d
         nop=id3d(2)
         do i=1,nir
            iclass_dim(i)=id3d(i+2)
            ipointer(i)=id3d(i+2+nir)
            zir(i)=yrd3d(i)
            zclass(i)=yd3d(i)
            do j=1,nir
               k=k+1
               chars(k)=chd3d(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d3h') then
         k=0
         nir=nd3h
         nop=id3h(2)
         do i=1,nir
            iclass_dim(i)=id3h(i+2)
            ipointer(i)=id3h(i+2+nir)
            zir(i)=yrd3h(i)
            zclass(i)=yd3h(i)
            do j=1,nir
               k=k+1
               chars(k)=chd3h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d4') then
         k=0
         nir=nd4
         nop=id4(2)
         do i=1,nir
            iclass_dim(i)=id4(i+2)
            ipointer(i)=id4(i+2+nir)
            zir(i)=yrd4(i)
            zclass(i)=yd4(i)
            do j=1,nir
               k=k+1
               chars(k)=chd4(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d4d') then
         k=0
         nir=nd4d
         nop=id4d(2)
         do i=1,nir
            iclass_dim(i)=id4d(i+2)
            ipointer(i)=id4d(i+2+nir)
            zir(i)=yrd4d(i)
            zclass(i)=yd4d(i)
            do j=1,nir
               k=k+1
               chars(k)=chd4d(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d4h') then
         k=0
         nir=nd4h
         nop=id4h(2)
         do i=1,nir
            iclass_dim(i)=id4h(i+2)
            ipointer(i)=id4h(i+2+nir)
            zir(i)=yrd4h(i)
            zclass(i)=yd4h(i)
            do j=1,nir
               k=k+1
               chars(k)=chd4h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d5') then
         k=0
         nir=nd5
         nop=id5(2)
         do i=1,nir
            iclass_dim(i)=id5(i+2)
            ipointer(i)=id5(i+2+nir)
            zir(i)=yrd5(i)
            zclass(i)=yd5(i)
            do j=1,nir
               k=k+1
               chars(k)=chd5(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d5d') then
         k=0
         nir=nd5d
         nop=id5d(2)
         do i=1,nir
            iclass_dim(i)=id5d(i+2)
            ipointer(i)=id5d(i+2+nir)
            zir(i)=yrd5d(i)
            zclass(i)=yd5d(i)
            do j=1,nir
               k=k+1
               chars(k)=chd5d(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d5h') then
         k=0
         nir=nd5h
         nop=id5h(2)
         do i=1,nir
            iclass_dim(i)=id5h(i+2)
            ipointer(i)=id5h(i+2+nir)
            zir(i)=yrd5h(i)
            zclass(i)=yd5h(i)
            do j=1,nir
               k=k+1
               chars(k)=chd5h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d6') then
         k=0
         nir=nd6
         nop=id6(2)
         do i=1,nir
            iclass_dim(i)=id6(i+2)
            ipointer(i)=id6(i+2+nir)
            zir(i)=yrd6(i)
            zclass(i)=yd6(i)
            do j=1,nir
               k=k+1
               chars(k)=chd6(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d6d') then
         k=0
         nir=nd6d
         nop=id6d(2)
         do i=1,nir
            iclass_dim(i)=id6d(i+2)
            ipointer(i)=id6d(i+2+nir)
            zir(i)=yrd6d(i)
            zclass(i)=yd6d(i)
            do j=1,nir
               k=k+1
               chars(k)=chd6d(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d6h') then
         k=0
         nir=nd6h
         nop=id6h(2)
         do i=1,nir
            iclass_dim(i)=id6h(i+2)
            ipointer(i)=id6h(i+2+nir)
            zir(i)=yrd6h(i)
            zclass(i)=yd6h(i)
            do j=1,nir
               k=k+1
               chars(k)=chd6h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d8') then
         k=0
         nir=nd8
         nop=id8(2)
         do i=1,nir
            iclass_dim(i)=id8(i+2)
            ipointer(i)=id8(i+2+nir)
            zir(i)=yrd8(i)
            zclass(i)=yd8(i)
            do j=1,nir
               k=k+1
               chars(k)=chd8(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'d8h') then
         k=0
         nir=nd8h
         nop=id8h(2)
         do i=1,nir
            iclass_dim(i)=id8h(i+2)
            ipointer(i)=id8h(i+2+nir)
            zir(i)=yrd8h(i)
            zclass(i)=yd8h(i)
            do j=1,nir
               k=k+1
               chars(k)=chd8h(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'i') then
         k=0
         nir=ni
         nop=ii(2)
         do i=1,nir
            iclass_dim(i)=ii(i+2)
            ipointer(i)=ii(i+2+nir)
            zir(i)=yri(i)
            zclass(i)=yi(i)
            do j=1,nir
               k=k+1
               chars(k)=chi(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'ih') then
         k=0
         nir=nih
         nop=iih(2)
         do i=1,nir
            iclass_dim(i)=iih(i+2)
            ipointer(i)=iih(i+2+nir)
            zir(i)=yrih(i)
            zclass(i)=yih(i)
            do j=1,nir
               k=k+1
               chars(k)=chih(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'o') then
         k=0
         nir=no
         nop=io(2)
         do i=1,nir
            iclass_dim(i)=io(i+2)
            ipointer(i)=io(i+2+nir)
            zir(i)=yro(i)
            zclass(i)=yo(i)
            do j=1,nir
               k=k+1
               chars(k)=cho(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'oh') then
         k=0
         nir=noh
         nop=ioh(2)
         do i=1,nir
            iclass_dim(i)=ioh(i+2)
            ipointer(i)=ioh(i+2+nir)
            zir(i)=yroh(i)
            zclass(i)=yoh(i)
            do j=1,nir
               k=k+1
               chars(k)=choh(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'s2') then
         k=0
         nir=ns2
         nop=is2(2)
         do i=1,nir
            iclass_dim(i)=is2(i+2)
            ipointer(i)=is2(i+2+nir)
            zir(i)=yrs2(i)
            zclass(i)=ys2(i)
            do j=1,nir
               k=k+1
               chars(k)=chs2(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'s4') then
         k=0
         nir=ns4
         nop=is4(2)
         do i=1,nir
            iclass_dim(i)=is4(i+2)
            ipointer(i)=is4(i+2+nir)
            zir(i)=yrs4(i)
            zclass(i)=ys4(i)
            do j=1,nir
               k=k+1
               chars(k)=chs4(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'s6') then
         k=0
         nir=ns6
         nop=is6(2)
         do i=1,nir
            iclass_dim(i)=is6(i+2)
            ipointer(i)=is6(i+2+nir)
            zir(i)=yrs6(i)
            zclass(i)=ys6(i)
            do j=1,nir
               k=k+1
               chars(k)=chs6(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'s8') then
         k=0
         nir=ns8
         nop=is8(2)
         do i=1,nir
            iclass_dim(i)=is8(i+2)
            ipointer(i)=is8(i+2+nir)
            zir(i)=yrs8(i)
            zclass(i)=ys8(i)
            do j=1,nir
               k=k+1
               chars(k)=chs8(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'t') then
         k=0
         nir=nt
         nop=it(2)
         do i=1,nir
            iclass_dim(i)=it(i+2)
            ipointer(i)=it(i+2+nir)
            zir(i)=yrt(i)
            zclass(i)=yt(i)
            do j=1,nir
               k=k+1
               chars(k)=cht(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'td') then
         k=0
         nir=ntd
         nop=itd(2)
         do i=1,nir
            iclass_dim(i)=itd(i+2)
            ipointer(i)=itd(i+2+nir)
            zir(i)=yrtd(i)
            zclass(i)=ytd(i)
            do j=1,nir
               k=k+1
               chars(k)=chtd(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     
      if(zgroup.eq.'th') then
         k=0
         nir=nth
         nop=ith(2)
         do i=1,nir
            iclass_dim(i)=ith(i+2)
            ipointer(i)=ith(i+2+nir)
            zir(i)=yrth(i)
            zclass(i)=yth(i)
            do j=1,nir
               k=k+1
               chars(k)=chth(j,i)
            enddo
         enddo
         goto 10
      endif
c     
c     here it will come if group was not recognized
c     
      sym_char_table = .false.
      return
c
c     here it comes on success
c
 10   continue
      sym_char_table = .true.
c
c     Munge fractional characters to their precise values
c
      twopi = 2.0d0*4.0d0*atan(1.0d0)
      do i = 1, nir*nir
c     
c     Integers, rational fractions and square-roots thereof
c
         do k = 0, 10
            do l = 1, 10
               dval = dble(k)/dble(l)
               dval = sign(dval,chars(i))
               if (abs(chars(i)-dval).lt.0.0006) goto 20
               dval = sqrt(abs(dval))
               dval = sign(dval,chars(i))
               if (abs(chars(i)-dval).lt.0.0006) goto 20
            enddo
         enddo
c
c     Sines and cosines and multiples thereof
c
         do n = 1, 24
            do k = 1, (n-1)/4+1
               angle = dble(k)*twopi/dble(n)
               do multiple = 1, 2
                  dval = multiple*sin(angle)
                  dval = sign(abs(dval),chars(i))
                  if (abs(chars(i)-dval).lt.0.0006) goto 20
                  dval = multiple*cos(angle)
                  dval = sign(abs(dval),chars(i))
                  if (abs(chars(i)-dval).lt.0.0006) goto 20
               enddo
            enddo
         enddo
c
c     Magic numbers ... shouldn't be any?
c
         write(6,*) chars(i)
         call errquit('sym_char_table: unmunged character',i, INPUT_ERR)
c
 20      chars(i) = dval
      enddo
c
      if (util_print('sym_char_table', print_never)) then
         write(6,*) ' sym_char_table ', zname
         do i = 0, nir-1
            write(6,111) (chars(i*nir+j),j=1,nir)
         enddo
 111     format(1x,20f10.6)
         call util_flush(6)
      endif
c
      if (please_print_ecce) then
         please_print_ecce = .false.
         call ecce_print1_char('group class names', zclass, nir)
         call ecce_print1_char('group irrep names', zir, nir)
      endif
c
      end
